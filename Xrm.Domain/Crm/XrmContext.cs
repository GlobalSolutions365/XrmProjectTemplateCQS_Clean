//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace Xrm.Domain.Crm {
    
    
    /// <summary>
    /// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account.</para>
        /// <para>Display Name: Account...</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account...")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        [DisplayName("Category")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
        /// <para>Display Name: Classification</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        [DisplayName("Classification")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
        /// <para>Display Name: Account Number</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        [DisplayName("Account Number")]
        [MaxLength(20)]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating to indicate the value of the customer account.</para>
        /// <para>Display Name: Account Rating</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        [DisplayName("Account Rating")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(200)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 30 field.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 60 field.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 90 field.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
        /// <para>Display Name: Business Type</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        [DisplayName("Business Type")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the account and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the account.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the account.</para>
        /// <para>Display Name: Accounting Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Accounting Email")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the account.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the account.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Market Capitalization</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        [DisplayName("Market Capitalization")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the market capitalization converted to the system's default base currency.</para>
        /// <para>Display Name: Market Capitalization (Base)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        [DisplayName("Market Capitalization (Base)")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the master account that the account was merged with.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with another account.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Full Company Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Full Company Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Number of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("Number of Employees")]
        [Range(0, 1000000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's ownership structure, such as public or private.</para>
        /// <para>Display Name: Ownership</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        [DisplayName("Ownership")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the account.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the account.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Primary Contact")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Full Company Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Full Company Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Satori ID for Account</para>
        /// <para>Display Name: Primary Satori ID</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        [DisplayName("Primary Satori ID")]
        [MaxLength(200)]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Twitter ID for Account</para>
        /// <para>Display Name: Primary Twitter ID</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        [DisplayName("Primary Twitter ID")]
        [MaxLength(128)]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Shares Outstanding</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        [DisplayName("Shares Outstanding")]
        [Range(0, 1000000000)]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this account.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this account.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this account.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory Code</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory Code")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the account.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the account's website URL to get quick details about the company profile.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Account Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Account Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account Sponsor</para>
        /// </summary>
        [AttributeLogicalName("dsn_accountsponsor")]
        [DisplayName("Account Sponsor")]
        public EntityReference dsn_AccountSponsor {
            get {
                return GetAttributeValue<EntityReference>("dsn_accountsponsor");
            }
            set {
                SetAttributeValue("dsn_accountsponsor", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Address 1: Country ISO2 Code</para>
        /// </summary>
        [AttributeLogicalName("dsn_address1countryiso2code")]
        [DisplayName("Address 1: Country ISO2 Code")]
        [MaxLength(2)]
        public string dsn_Address1CountryIso2Code {
            get {
                return GetAttributeValue<string>("dsn_address1countryiso2code");
            }
            set {
                SetAttributeValue("dsn_address1countryiso2code", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Address approved by Norden</para>
        /// </summary>
        [AttributeLogicalName("dsn_addressapprovedbynorden")]
        [DisplayName("Address approved by Norden")]
        public bool? dsn_AddressapprovedbyNorden {
            get {
                return GetAttributeValue<bool?>("dsn_addressapprovedbynorden");
            }
            set {
                SetAttributeValue("dsn_addressapprovedbynorden", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Alert</para>
        /// </summary>
        [AttributeLogicalName("dsn_alert")]
        [DisplayName("Alert")]
        [MaxLength(200)]
        public string dsn_Alert {
            get {
                return GetAttributeValue<string>("dsn_alert");
            }
            set {
                SetAttributeValue("dsn_alert", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: BIC/SWIFT</para>
        /// </summary>
        [AttributeLogicalName("dsn_bicswift")]
        [DisplayName("BIC/SWIFT")]
        [MaxLength(50)]
        public string dsn_BICSWIFT {
            get {
                return GetAttributeValue<string>("dsn_bicswift");
            }
            set {
                SetAttributeValue("dsn_bicswift", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Bank Details Edit One-Time Token</para>
        /// </summary>
        [AttributeLogicalName("dsn_bankdetailseditonetimetoken")]
        [DisplayName("Bank Details Edit One-Time Token")]
        [MaxLength(100)]
        public string dsn_BankDetailsEditOneTimeToken {
            get {
                return GetAttributeValue<string>("dsn_bankdetailseditonetimetoken");
            }
            set {
                SetAttributeValue("dsn_bankdetailseditonetimetoken", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Bill-to Customer</para>
        /// </summary>
        [AttributeLogicalName("dsn_billtocustomer")]
        [DisplayName("Bill-to Customer")]
        public EntityReference dsn_BilltoCustomer {
            get {
                return GetAttributeValue<EntityReference>("dsn_billtocustomer");
            }
            set {
                SetAttributeValue("dsn_billtocustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Block Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_blocktype")]
        [DisplayName("Block Type")]
        public Account_dsn_BlockType? dsn_BlockType {
            get {
                return GetOptionSetValue<Account_dsn_BlockType>("dsn_blocktype");
            }
            set {
                SetOptionSetValue("dsn_blocktype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Bypass Fast Create</para>
        /// </summary>
        [AttributeLogicalName("dsn_bypassfastcreate")]
        [DisplayName("Bypass Fast Create")]
        public bool? dsn_BypassFastCreate {
            get {
                return GetAttributeValue<bool?>("dsn_bypassfastcreate");
            }
            set {
                SetAttributeValue("dsn_bypassfastcreate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Client Importance</para>
        /// </summary>
        [AttributeLogicalName("dsn_clientimportance")]
        [DisplayName("Client Importance")]
        public Account_dsn_ClientImportance? dsn_ClientImportance {
            get {
                return GetOptionSetValue<Account_dsn_ClientImportance>("dsn_clientimportance");
            }
            set {
                SetOptionSetValue("dsn_clientimportance", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Client Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_clienttype")]
        [DisplayName("Client Type")]
        public dsn_clienttype? dsn_ClientType {
            get {
                return GetOptionSetValue<dsn_clienttype>("dsn_clienttype");
            }
            set {
                SetOptionSetValue("dsn_clienttype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Commercial Manager</para>
        /// </summary>
        [AttributeLogicalName("dsn_commercialmanager")]
        [DisplayName("Commercial Manager")]
        public EntityReference dsn_CommercialManager {
            get {
                return GetAttributeValue<EntityReference>("dsn_commercialmanager");
            }
            set {
                SetAttributeValue("dsn_commercialmanager", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Commodities</para>
        /// </summary>
        [AttributeLogicalName("dsn_commodities")]
        [DisplayName("Commodities")]
        public dsn_commodities? dsn_Commodities {
            get {
                return GetOptionSetValue<dsn_commodities>("dsn_commodities");
            }
            set {
                SetOptionSetValue("dsn_commodities", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dsn_country")]
        [DisplayName("Country")]
        public EntityReference dsn_Country {
            get {
                return GetAttributeValue<EntityReference>("dsn_country");
            }
            set {
                SetAttributeValue("dsn_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating Before Sanctions</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditratingbeforesanctions")]
        [DisplayName("Credit Rating Before Sanctions")]
        [MaxLength(100)]
        public string dsn_CreditRatingBeforeSanctions {
            get {
                return GetAttributeValue<string>("dsn_creditratingbeforesanctions");
            }
            set {
                SetAttributeValue("dsn_creditratingbeforesanctions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditratingdate")]
        [DisplayName("Credit Rating Date")]
        public DateTime? dsn_CreditRatingDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_creditratingdate");
            }
            set {
                SetAttributeValue("dsn_creditratingdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Risk Review Sanctions</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditriskreviewsanctions")]
        [DisplayName("Credit Risk Review Sanctions")]
        public Account_dsn_CreditRiskReviewSanctions? dsn_CreditRiskReviewSanctions {
            get {
                return GetOptionSetValue<Account_dsn_CreditRiskReviewSanctions>("dsn_creditriskreviewsanctions");
            }
            set {
                SetOptionSetValue("dsn_creditriskreviewsanctions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DNB BOL Monitoring Registration Queued</para>
        /// </summary>
        [AttributeLogicalName("dsn_dnbbolmonitoringregistrationqueued")]
        [DisplayName("DNB BOL Monitoring Registration Queued")]
        public bool? dsn_DNBBOLMonitoringRegistrationQueued {
            get {
                return GetAttributeValue<bool?>("dsn_dnbbolmonitoringregistrationqueued");
            }
            set {
                SetAttributeValue("dsn_dnbbolmonitoringregistrationqueued", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DNB CMBOL Error Message</para>
        /// </summary>
        [AttributeLogicalName("dsn_dnbcmbolmessage")]
        [DisplayName("DNB CMBOL Error Message")]
        [MaxLength(4000)]
        public string dsn_DNBCMBOLMessage {
            get {
                return GetAttributeValue<string>("dsn_dnbcmbolmessage");
            }
            set {
                SetAttributeValue("dsn_dnbcmbolmessage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DeActRequestBy</para>
        /// </summary>
        [AttributeLogicalName("dsn_deactrequestby")]
        [DisplayName("DeActRequestBy")]
        public EntityReference dsn_DeActRequestBy {
            get {
                return GetAttributeValue<EntityReference>("dsn_deactrequestby");
            }
            set {
                SetAttributeValue("dsn_deactrequestby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Disable DNB Address Sync</para>
        /// </summary>
        [AttributeLogicalName("dsn_disablednbaddresssync")]
        [DisplayName("Disable DNB Address Sync")]
        public bool? dsn_DisableDnbAddressSync {
            get {
                return GetAttributeValue<bool?>("dsn_disablednbaddresssync");
            }
            set {
                SetAttributeValue("dsn_disablednbaddresssync", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DNB CMBOL Received</para>
        /// </summary>
        [AttributeLogicalName("dsn_dnbcmbolreceived")]
        [DisplayName("DNB CMBOL Received")]
        public bool? dsn_DnbCMBOLReceived {
            get {
                return GetAttributeValue<bool?>("dsn_dnbcmbolreceived");
            }
            set {
                SetAttributeValue("dsn_dnbcmbolreceived", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DNB DUNS</para>
        /// </summary>
        [AttributeLogicalName("dsn_dnbduns")]
        [DisplayName("DNB DUNS")]
        [MaxLength(20)]
        public string dsn_DnbDuns {
            get {
                return GetAttributeValue<string>("dsn_dnbduns");
            }
            set {
                SetAttributeValue("dsn_dnbduns", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dow Jones Association Id</para>
        /// </summary>
        [AttributeLogicalName("dsn_dowjonesassociationid")]
        [DisplayName("Dow Jones Association Id")]
        [MaxLength(100)]
        public string dsn_DowJonesAssociationId {
            get {
                return GetAttributeValue<string>("dsn_dowjonesassociationid");
            }
            set {
                SetAttributeValue("dsn_dowjonesassociationid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dow Jones Case Id</para>
        /// </summary>
        [AttributeLogicalName("dsn_dowjonescaseid")]
        [DisplayName("Dow Jones Case Id")]
        [MaxLength(100)]
        public string dsn_DowJonesCaseId {
            get {
                return GetAttributeValue<string>("dsn_dowjonescaseid");
            }
            set {
                SetAttributeValue("dsn_dowjonescaseid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dow Jones Last Review Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_dowjoneslastreviewdate")]
        [DisplayName("Dow Jones Last Review Date")]
        public DateTime? dsn_DowJonesLastReviewDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_dowjoneslastreviewdate");
            }
            set {
                SetAttributeValue("dsn_dowjoneslastreviewdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Full Company Name (DSN)</para>
        /// </summary>
        [AttributeLogicalName("dsn_fullcompanyname")]
        [DisplayName("Full Company Name (DSN)")]
        [MaxLength(100)]
        public string dsn_FullCompanyName {
            get {
                return GetAttributeValue<string>("dsn_fullcompanyname");
            }
            set {
                SetAttributeValue("dsn_fullcompanyname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IMO Number</para>
        /// </summary>
        [AttributeLogicalName("dsn_imonumber")]
        [DisplayName("IMO Number")]
        [MaxLength(100)]
        public string dsn_IMONumber {
            get {
                return GetAttributeValue<string>("dsn_imonumber");
            }
            set {
                SetAttributeValue("dsn_imonumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Internal</para>
        /// </summary>
        [AttributeLogicalName("dsn_internal")]
        [DisplayName("Internal")]
        public bool? dsn_Internal {
            get {
                return GetAttributeValue<bool?>("dsn_internal");
            }
            set {
                SetAttributeValue("dsn_internal", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Contact</para>
        /// </summary>
        [AttributeLogicalName("dsn_kyccontact")]
        [DisplayName("KYC Contact")]
        public EntityReference dsn_KYCContact {
            get {
                return GetAttributeValue<EntityReference>("dsn_kyccontact");
            }
            set {
                SetAttributeValue("dsn_kyccontact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Last Completed</para>
        /// </summary>
        [AttributeLogicalName("dsn_kyclastcompleted")]
        [DisplayName("KYC Last Completed")]
        public DateTime? dsn_KYCLastCompleted {
            get {
                return GetAttributeValue<DateTime?>("dsn_kyclastcompleted");
            }
            set {
                SetAttributeValue("dsn_kyclastcompleted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Last Initiated</para>
        /// </summary>
        [AttributeLogicalName("dsn_kyclastinitiated")]
        [DisplayName("KYC Last Initiated")]
        public DateTime? dsn_KYCLastInitiated {
            get {
                return GetAttributeValue<DateTime?>("dsn_kyclastinitiated");
            }
            set {
                SetAttributeValue("dsn_kyclastinitiated", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Last reminder</para>
        /// </summary>
        [AttributeLogicalName("dsn_kyclastreminder")]
        [DisplayName("KYC Last reminder")]
        public DateTime? dsn_KYCLastreminder {
            get {
                return GetAttributeValue<DateTime?>("dsn_kyclastreminder");
            }
            set {
                SetAttributeValue("dsn_kyclastreminder", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Remarks</para>
        /// </summary>
        [AttributeLogicalName("dsn_kycremarks")]
        [DisplayName("KYC Remarks")]
        [MaxLength(4000)]
        public string dsn_KYCRemarks {
            get {
                return GetAttributeValue<string>("dsn_kycremarks");
            }
            set {
                SetAttributeValue("dsn_kycremarks", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Send reminder</para>
        /// </summary>
        [AttributeLogicalName("dsn_kycsendreminder")]
        [DisplayName("KYC Send reminder")]
        public bool? dsn_KYCSendreminder {
            get {
                return GetAttributeValue<bool?>("dsn_kycsendreminder");
            }
            set {
                SetAttributeValue("dsn_kycsendreminder", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Send request</para>
        /// </summary>
        [AttributeLogicalName("dsn_kycsendrequest")]
        [DisplayName("KYC Send request")]
        public bool? dsn_KYCSendrequest {
            get {
                return GetAttributeValue<bool?>("dsn_kycsendrequest");
            }
            set {
                SetAttributeValue("dsn_kycsendrequest", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC Status</para>
        /// </summary>
        [AttributeLogicalName("dsn_kycstatus")]
        [DisplayName("KYC Status")]
        public dsn_kycstatus? dsn_KYCStatus {
            get {
                return GetOptionSetValue<dsn_kycstatus>("dsn_kycstatus");
            }
            set {
                SetOptionSetValue("dsn_kycstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last Screening</para>
        /// </summary>
        [AttributeLogicalName("dsn_lastscreening")]
        [DisplayName("Last Screening")]
        public DateTime? dsn_LastScreening {
            get {
                return GetAttributeValue<DateTime?>("dsn_lastscreening");
            }
            set {
                SetAttributeValue("dsn_lastscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last Visit</para>
        /// </summary>
        [AttributeLogicalName("dsn_lastvisit")]
        [DisplayName("Last Visit")]
        public DateTime? dsn_LastVisit {
            get {
                return GetAttributeValue<DateTime?>("dsn_lastvisit");
            }
            set {
                SetAttributeValue("dsn_lastvisit", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last sent to IMOS</para>
        /// </summary>
        [AttributeLogicalName("dsn_lastsenttoimos")]
        [DisplayName("Last sent to IMOS")]
        public DateTime? dsn_LastsenttoIMOS {
            get {
                return GetAttributeValue<DateTime?>("dsn_lastsenttoimos");
            }
            set {
                SetAttributeValue("dsn_lastsenttoimos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Manual Validation</para>
        /// </summary>
        [AttributeLogicalName("dsn_manuallyvalidation")]
        [DisplayName("Manual Validation")]
        public Account_dsn_ManuallyValidation? dsn_ManuallyValidation {
            get {
                return GetOptionSetValue<Account_dsn_ManuallyValidation>("dsn_manuallyvalidation");
            }
            set {
                SetOptionSetValue("dsn_manuallyvalidation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Migrated Contact No K-Fleet</para>
        /// </summary>
        [AttributeLogicalName("dsn_migratedcontactnokfleet")]
        [DisplayName("Migrated Contact No K-Fleet")]
        [MaxLength(100)]
        public string dsn_MigratedContactNoKFleet {
            get {
                return GetAttributeValue<string>("dsn_migratedcontactnokfleet");
            }
            set {
                SetAttributeValue("dsn_migratedcontactnokfleet", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Migrated ID K-Fleet</para>
        /// </summary>
        [AttributeLogicalName("dsn_migratedidkfleet")]
        [DisplayName("Migrated ID K-Fleet")]
        [MaxLength(100)]
        public string dsn_MigratedIDKFleet {
            get {
                return GetAttributeValue<string>("dsn_migratedidkfleet");
            }
            set {
                SetAttributeValue("dsn_migratedidkfleet", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Migrated ID MSBC</para>
        /// </summary>
        [AttributeLogicalName("dsn_migratedidmsbc")]
        [DisplayName("Migrated ID MSBC")]
        [MaxLength(100)]
        public string dsn_MigratedIDMSBC {
            get {
                return GetAttributeValue<string>("dsn_migratedidmsbc");
            }
            set {
                SetAttributeValue("dsn_migratedidmsbc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Migrated K-Fleet</para>
        /// </summary>
        [AttributeLogicalName("dsn_migratedkfleet")]
        [DisplayName("Migrated K-Fleet")]
        public bool? dsn_MigratedKFleet {
            get {
                return GetAttributeValue<bool?>("dsn_migratedkfleet");
            }
            set {
                SetAttributeValue("dsn_migratedkfleet", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Migrated MSBC</para>
        /// </summary>
        [AttributeLogicalName("dsn_migratedmsbc")]
        [DisplayName("Migrated MSBC")]
        public bool? dsn_MigratedMSBC {
            get {
                return GetAttributeValue<bool?>("dsn_migratedmsbc");
            }
            set {
                SetAttributeValue("dsn_migratedmsbc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navision Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_navisiontype")]
        [DisplayName("Navision Type")]
        public dsn_navisiontype? dsn_NavisionType {
            get {
                return GetOptionSetValue<dsn_navisiontype>("dsn_navisiontype");
            }
            set {
                SetOptionSetValue("dsn_navisiontype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: New Matches Reviewed</para>
        /// </summary>
        [AttributeLogicalName("dsn_newmatchesreviewed")]
        [DisplayName("New Matches Reviewed")]
        public bool? dsn_NewMatchesReviewed {
            get {
                return GetAttributeValue<bool?>("dsn_newmatchesreviewed");
            }
            set {
                SetAttributeValue("dsn_newmatchesreviewed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: New Matches Reviewed By</para>
        /// </summary>
        [AttributeLogicalName("dsn_newmatchesreviewedby")]
        [DisplayName("New Matches Reviewed By")]
        public EntityReference dsn_NewMatchesReviewedBy {
            get {
                return GetAttributeValue<EntityReference>("dsn_newmatchesreviewedby");
            }
            set {
                SetAttributeValue("dsn_newmatchesreviewedby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: New Matches Reviewed On</para>
        /// </summary>
        [AttributeLogicalName("dsn_newmatchesreviewedon")]
        [DisplayName("New Matches Reviewed On")]
        public DateTime? dsn_NewMatchesReviewedOn {
            get {
                return GetAttributeValue<DateTime?>("dsn_newmatchesreviewedon");
            }
            set {
                SetAttributeValue("dsn_newmatchesreviewedon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Next Planned Visit</para>
        /// </summary>
        [AttributeLogicalName("dsn_nextplannedvisit")]
        [DisplayName("Next Planned Visit")]
        public DateTime? dsn_NextPlannedVisit {
            get {
                return GetAttributeValue<DateTime?>("dsn_nextplannedvisit");
            }
            set {
                SetAttributeValue("dsn_nextplannedvisit", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: No Sanction Matches Added In Last Screening</para>
        /// </summary>
        [AttributeLogicalName("dsn_nosanctionmatchesaddedinlastscreening")]
        [DisplayName("No Sanction Matches Added In Last Screening")]
        public bool? dsn_NoSanctionMatchesAddedInLastScreening {
            get {
                return GetAttributeValue<bool?>("dsn_nosanctionmatchesaddedinlastscreening");
            }
            set {
                SetAttributeValue("dsn_nosanctionmatchesaddedinlastscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: One Time Notifiation</para>
        /// </summary>
        [AttributeLogicalName("dsn_onetimenotifiation")]
        [DisplayName("One Time Notifiation")]
        public string dsn_OneTimeNotifiation {
            get {
                return GetAttributeValue<string>("dsn_onetimenotifiation");
            }
            set {
                SetAttributeValue("dsn_onetimenotifiation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Other Exclusion List</para>
        /// </summary>
        [AttributeLogicalName("dsn_otherexclusionlist")]
        [DisplayName("Other Exclusion List")]
        public bool? dsn_OtherExclusionList {
            get {
                return GetAttributeValue<bool?>("dsn_otherexclusionlist");
            }
            set {
                SetAttributeValue("dsn_otherexclusionlist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Other Official List</para>
        /// </summary>
        [AttributeLogicalName("dsn_otherofficiallist")]
        [DisplayName("Other Official List")]
        public bool? dsn_OtherOfficialList {
            get {
                return GetAttributeValue<bool?>("dsn_otherofficiallist");
            }
            set {
                SetAttributeValue("dsn_otherofficiallist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Other Than Sanction Changes Last Added On</para>
        /// </summary>
        [AttributeLogicalName("dsn_otherthansanctionchangeslastaddedon")]
        [DisplayName("Other Than Sanction Changes Last Added On")]
        public DateTime? dsn_OtherThanSanctionChangesLastAddedOn {
            get {
                return GetAttributeValue<DateTime?>("dsn_otherthansanctionchangeslastaddedon");
            }
            set {
                SetAttributeValue("dsn_otherthansanctionchangeslastaddedon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PNL Team</para>
        /// </summary>
        [AttributeLogicalName("dsn_pnlteam")]
        [DisplayName("PNL Team")]
        public EntityReference dsn_PNLTeam {
            get {
                return GetAttributeValue<EntityReference>("dsn_pnlteam");
            }
            set {
                SetAttributeValue("dsn_pnlteam", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_parentaccount")]
        [DisplayName("Parent Account")]
        public EntityReference dsn_ParentAccount {
            get {
                return GetAttributeValue<EntityReference>("dsn_parentaccount");
            }
            set {
                SetAttributeValue("dsn_parentaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Pay-to vendor no.</para>
        /// </summary>
        [AttributeLogicalName("dsn_paytovendor")]
        [DisplayName("Pay-to vendor no.")]
        public EntityReference dsn_PayToVendor {
            get {
                return GetAttributeValue<EntityReference>("dsn_paytovendor");
            }
            set {
                SetAttributeValue("dsn_paytovendor", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PaymentTerm</para>
        /// </summary>
        [AttributeLogicalName("dsn_paymentterm")]
        [DisplayName("PaymentTerm")]
        public EntityReference dsn_PaymentTerm {
            get {
                return GetAttributeValue<EntityReference>("dsn_paymentterm");
            }
            set {
                SetAttributeValue("dsn_paymentterm", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Perform Screening</para>
        /// </summary>
        [AttributeLogicalName("dsn_performscreening")]
        [DisplayName("Perform Screening")]
        public bool? dsn_PerformScreening {
            get {
                return GetAttributeValue<bool?>("dsn_performscreening");
            }
            set {
                SetAttributeValue("dsn_performscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profit Center</para>
        /// </summary>
        [AttributeLogicalName("dsn_profitcenter")]
        [DisplayName("Profit Center")]
        public EntityReference dsn_ProfitCenter {
            get {
                return GetAttributeValue<EntityReference>("dsn_profitcenter");
            }
            set {
                SetAttributeValue("dsn_profitcenter", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Rated By</para>
        /// </summary>
        [AttributeLogicalName("dsn_ratedby")]
        [DisplayName("Rated By")]
        public EntityReference dsn_RatedBy {
            get {
                return GetAttributeValue<EntityReference>("dsn_ratedby");
            }
            set {
                SetAttributeValue("dsn_ratedby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Reason for Deactivation</para>
        /// </summary>
        [AttributeLogicalName("dsn_reasonfordeactivation")]
        [DisplayName("Reason for Deactivation")]
        public string dsn_ReasonforDeactivation {
            get {
                return GetAttributeValue<string>("dsn_reasonfordeactivation");
            }
            set {
                SetAttributeValue("dsn_reasonfordeactivation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Record URL</para>
        /// </summary>
        [AttributeLogicalName("dsn_recordurl")]
        [DisplayName("Record URL")]
        [MaxLength(1000)]
        public string dsn_RecordURL {
            get {
                return GetAttributeValue<string>("dsn_recordurl");
            }
            set {
                SetAttributeValue("dsn_recordurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Refinitiv Case ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_refinitivcaseid")]
        [DisplayName("Refinitiv Case ID")]
        [MaxLength(100)]
        public string dsn_RefinitivCaseId {
            get {
                return GetAttributeValue<string>("dsn_refinitivcaseid");
            }
            set {
                SetAttributeValue("dsn_refinitivcaseid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Refresh DNB Data</para>
        /// </summary>
        [AttributeLogicalName("dsn_refreshdnbdata")]
        [DisplayName("Refresh DNB Data")]
        public bool? dsn_RefreshDNBData {
            get {
                return GetAttributeValue<bool?>("dsn_refreshdnbdata");
            }
            set {
                SetAttributeValue("dsn_refreshdnbdata", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Register In Dow Jones</para>
        /// </summary>
        [AttributeLogicalName("dsn_registerindowjones")]
        [DisplayName("Register In Dow Jones")]
        public bool? dsn_RegisterInDowJones {
            get {
                return GetAttributeValue<bool?>("dsn_registerindowjones");
            }
            set {
                SetAttributeValue("dsn_registerindowjones", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Rejection Reason</para>
        /// </summary>
        [AttributeLogicalName("dsn_rejectionreason")]
        [DisplayName("Rejection Reason")]
        public string dsn_RejectionReason {
            get {
                return GetAttributeValue<string>("dsn_rejectionreason");
            }
            set {
                SetAttributeValue("dsn_rejectionreason", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Remove Sanctions</para>
        /// </summary>
        [AttributeLogicalName("dsn_removesanctions")]
        [DisplayName("Remove Sanctions")]
        public bool? dsn_RemoveSanctions {
            get {
                return GetAttributeValue<bool?>("dsn_removesanctions");
            }
            set {
                SetAttributeValue("dsn_removesanctions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Report Grouping</para>
        /// </summary>
        [AttributeLogicalName("dsn_reportgrouping")]
        [DisplayName("Report Grouping")]
        public EntityReference dsn_ReportGrouping {
            get {
                return GetAttributeValue<EntityReference>("dsn_reportgrouping");
            }
            set {
                SetAttributeValue("dsn_reportgrouping", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Request Activation</para>
        /// </summary>
        [AttributeLogicalName("dsn_requestactivation")]
        [DisplayName("Request Activation")]
        public bool? dsn_RequestActivation {
            get {
                return GetAttributeValue<bool?>("dsn_requestactivation");
            }
            set {
                SetAttributeValue("dsn_requestactivation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Request Deactivation</para>
        /// </summary>
        [AttributeLogicalName("dsn_requestdeactivation")]
        [DisplayName("Request Deactivation")]
        public bool? dsn_RequestDeactivation {
            get {
                return GetAttributeValue<bool?>("dsn_requestdeactivation");
            }
            set {
                SetAttributeValue("dsn_requestdeactivation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Resend To Subsystems</para>
        /// </summary>
        [AttributeLogicalName("dsn_resendtosubsystems")]
        [DisplayName("Resend To Subsystems")]
        public IEnumerable<Account_dsn_ResendToSubsystems> dsn_ResendToSubsystems {
            get {
                return GetOptionSetCollectionValue<Account_dsn_ResendToSubsystems>("dsn_resendtosubsystems");
            }
            set {
                SetOptionSetCollectionValue("dsn_resendtosubsystems", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Responsible Office</para>
        /// </summary>
        [AttributeLogicalName("dsn_responsibleoffice")]
        [DisplayName("Responsible Office")]
        public EntityReference dsn_ResponsibleOffice {
            get {
                return GetAttributeValue<EntityReference>("dsn_responsibleoffice");
            }
            set {
                SetAttributeValue("dsn_responsibleoffice", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions Added In Last Screening</para>
        /// </summary>
        [AttributeLogicalName("dsn_sanctionsaddedinlastscreening")]
        [DisplayName("Sanctions Added In Last Screening")]
        public bool? dsn_SanctionsAddedInLastScreening {
            get {
                return GetAttributeValue<bool?>("dsn_sanctionsaddedinlastscreening");
            }
            set {
                SetAttributeValue("dsn_sanctionsaddedinlastscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions Last Added On</para>
        /// </summary>
        [AttributeLogicalName("dsn_sanctionslastaddedon")]
        [DisplayName("Sanctions Last Added On")]
        public DateTime? dsn_SanctionsLastAddedOn {
            get {
                return GetAttributeValue<DateTime?>("dsn_sanctionslastaddedon");
            }
            set {
                SetAttributeValue("dsn_sanctionslastaddedon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions Removal Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_sanctionsremovaldate")]
        [DisplayName("Sanctions Removal Date")]
        public DateTime? dsn_SanctionsRemovalDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_sanctionsremovaldate");
            }
            set {
                SetAttributeValue("dsn_sanctionsremovaldate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions Removal Reason</para>
        /// </summary>
        [AttributeLogicalName("dsn_sanctionsremovalreason")]
        [DisplayName("Sanctions Removal Reason")]
        public Account_dsn_SanctionsRemovalReason? dsn_SanctionsRemovalReason {
            get {
                return GetOptionSetValue<Account_dsn_SanctionsRemovalReason>("dsn_sanctionsremovalreason");
            }
            set {
                SetOptionSetValue("dsn_sanctionsremovalreason", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions Removal Comments</para>
        /// </summary>
        [AttributeLogicalName("dsn_sanctionscomments")]
        [DisplayName("Sanctions Removal Comments")]
        [MaxLength(4000)]
        public string dsn_Sanctionscomments {
            get {
                return GetAttributeValue<string>("dsn_sanctionscomments");
            }
            set {
                SetAttributeValue("dsn_sanctionscomments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions</para>
        /// </summary>
        [AttributeLogicalName("dsn_screeningsanctions")]
        [DisplayName("Sanctions")]
        public bool? dsn_ScreeningSanctions {
            get {
                return GetAttributeValue<bool?>("dsn_screeningsanctions");
            }
            set {
                SetAttributeValue("dsn_screeningsanctions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sedna ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_sednaid")]
        [DisplayName("Sedna ID")]
        [MaxLength(100)]
        public string dsn_SednaID {
            get {
                return GetAttributeValue<string>("dsn_sednaid");
            }
            set {
                SetAttributeValue("dsn_sednaid", value);
            }
        }
        
        /// <summary>
        /// <para>Used to trigger integration</para>
        /// <para>Display Name: Send To K-Fleet</para>
        /// </summary>
        [AttributeLogicalName("dsn_sendtokfleet")]
        [DisplayName("Send To K-Fleet")]
        public bool? dsn_SendToKFleet {
            get {
                return GetAttributeValue<bool?>("dsn_sendtokfleet");
            }
            set {
                SetAttributeValue("dsn_sendtokfleet", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Send To K-Fleet Timestamp</para>
        /// </summary>
        [AttributeLogicalName("dsn_sendtokfleettimestamp")]
        [DisplayName("Send To K-Fleet Timestamp")]
        public DateTime? dsn_SendToKFleetTimestamp {
            get {
                return GetAttributeValue<DateTime?>("dsn_sendtokfleettimestamp");
            }
            set {
                SetAttributeValue("dsn_sendtokfleettimestamp", value);
            }
        }
        
        /// <summary>
        /// <para>Used to trigger integration</para>
        /// <para>Display Name: Send To MSBC</para>
        /// </summary>
        [AttributeLogicalName("dsn_sendtomsbc")]
        [DisplayName("Send To MSBC")]
        public bool? dsn_SendToMSBC {
            get {
                return GetAttributeValue<bool?>("dsn_sendtomsbc");
            }
            set {
                SetAttributeValue("dsn_sendtomsbc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Send To MSBC Timestamp</para>
        /// </summary>
        [AttributeLogicalName("dsn_sendtomsbctimestamp")]
        [DisplayName("Send To MSBC Timestamp")]
        public DateTime? dsn_SendToMSBCTimestamp {
            get {
                return GetAttributeValue<DateTime?>("dsn_sendtomsbctimestamp");
            }
            set {
                SetAttributeValue("dsn_sendtomsbctimestamp", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Short Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_shortname")]
        [DisplayName("Short Name")]
        [MaxLength(100)]
        public string dsn_ShortName {
            get {
                return GetAttributeValue<string>("dsn_shortname");
            }
            set {
                SetAttributeValue("dsn_shortname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Show Create Counterparty Type Question</para>
        /// </summary>
        [AttributeLogicalName("dsn_showcreatecounterpartytypequestion")]
        [DisplayName("Show Create Counterparty Type Question")]
        public bool? dsn_ShowCreateCounterpartyTypeQuestion {
            get {
                return GetAttributeValue<bool?>("dsn_showcreatecounterpartytypequestion");
            }
            set {
                SetAttributeValue("dsn_showcreatecounterpartytypequestion", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Special Interest</para>
        /// </summary>
        [AttributeLogicalName("dsn_specialinterest")]
        [DisplayName("Special Interest")]
        public bool? dsn_SpecialInterest {
            get {
                return GetAttributeValue<bool?>("dsn_specialinterest");
            }
            set {
                SetAttributeValue("dsn_specialinterest", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Trading Email</para>
        /// </summary>
        [AttributeLogicalName("dsn_tradingemail")]
        [DisplayName("Trading Email")]
        [MaxLength(100)]
        public string dsn_TradingEmail {
            get {
                return GetAttributeValue<string>("dsn_tradingemail");
            }
            set {
                SetAttributeValue("dsn_tradingemail", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Trading Website</para>
        /// </summary>
        [AttributeLogicalName("dsn_tradingwebsite")]
        [DisplayName("Trading Website")]
        [MaxLength(100)]
        public string dsn_TradingWebsite {
            get {
                return GetAttributeValue<string>("dsn_tradingwebsite");
            }
            set {
                SetAttributeValue("dsn_tradingwebsite", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: VAT no</para>
        /// </summary>
        [AttributeLogicalName("dsn_vatno")]
        [DisplayName("VAT no")]
        [MaxLength(100)]
        public string dsn_VATno {
            get {
                return GetAttributeValue<string>("dsn_vatno");
            }
            set {
                SetAttributeValue("dsn_vatno", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validated by Creditrisk</para>
        /// </summary>
        [AttributeLogicalName("dsn_validatedbycreditrisk")]
        [DisplayName("Validated by Creditrisk")]
        public bool? dsn_ValidatedbyCreditrisk {
            get {
                return GetAttributeValue<bool?>("dsn_validatedbycreditrisk");
            }
            set {
                SetAttributeValue("dsn_validatedbycreditrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validated by System</para>
        /// </summary>
        [AttributeLogicalName("dsn_validatedbysystem")]
        [DisplayName("Validated by System")]
        public bool? dsn_ValidatedbySystem {
            get {
                return GetAttributeValue<bool?>("dsn_validatedbysystem");
            }
            set {
                SetAttributeValue("dsn_validatedbysystem", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CP Contact Id</para>
        /// </summary>
        [AttributeLogicalName("dsn_cpcontactid")]
        [DisplayName("CP Contact Id")]
        public EntityReference dsn_cpcontactid {
            get {
                return GetAttributeValue<EntityReference>("dsn_cpcontactid");
            }
            set {
                SetAttributeValue("dsn_cpcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditrating")]
        [DisplayName("Credit Rating")]
        [MaxLength(100)]
        public string dsn_creditrating {
            get {
                return GetAttributeValue<string>("dsn_creditrating");
            }
            set {
                SetAttributeValue("dsn_creditrating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: dnbfullname</para>
        /// </summary>
        [AttributeLogicalName("dsn_dnbfullname")]
        [DisplayName("dnbfullname")]
        [MaxLength(100)]
        public string dsn_dnbfullname {
            get {
                return GetAttributeValue<string>("dsn_dnbfullname");
            }
            set {
                SetAttributeValue("dsn_dnbfullname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: reactivateComments</para>
        /// </summary>
        [AttributeLogicalName("dsn_reactivatecomments")]
        [DisplayName("reactivateComments")]
        [MaxLength(500)]
        public string dsn_reactivateComments {
            get {
                return GetAttributeValue<string>("dsn_reactivatecomments");
            }
            set {
                SetAttributeValue("dsn_reactivatecomments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ANJDebug</para>
        /// </summary>
        [AttributeLogicalName("new_anjdebug")]
        [DisplayName("ANJDebug")]
        [MaxLength(100)]
        public string new_ANJDebug {
            get {
                return GetAttributeValue<string>("new_anjdebug");
            }
            set {
                SetAttributeValue("new_anjdebug", value);
            }
        }
        
        [RelationshipSchemaName("Account_Annotation")]
        public IEnumerable<Annotation> Account_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Account_Annotation", null);
            }
            set {
                SetRelatedEntities("Account_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_AsyncOperations")]
        public IEnumerable<AsyncOperation> Account_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Account_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Account_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public IEnumerable<Email> Account_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Account_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public IEnumerable<Email> Account_Email_SendersAccount {
            get {
                return GetRelatedEntities<Email>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntities("Account_Email_SendersAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Emails")]
        public IEnumerable<Email> Account_Emails {
            get {
                return GetRelatedEntities<Email>("Account_Emails", null);
            }
            set {
                SetRelatedEntities("Account_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_ParentAccount_Account", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_Account_ParentAccount_Account {
            get {
                return GetRelatedEntities<Account>("dsn_Account_ParentAccount_Account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_Account_ParentAccount_Account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_ReportGrouping_Account", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_Account_ReportGrouping_Account {
            get {
                return GetRelatedEntities<Account>("dsn_Account_ReportGrouping_Account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_Account_ReportGrouping_Account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_account_account_BilltoCustomer", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_account_account_BilltoCustomer {
            get {
                return GetRelatedEntities<Account>("dsn_account_account_BilltoCustomer", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_account_account_BilltoCustomer", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_account_account_CommercialManager", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_account_account_CommercialManager {
            get {
                return GetRelatedEntities<Account>("dsn_account_account_CommercialManager", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_account_account_CommercialManager", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_account_account_PayToVendor", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_account_account_PayToVendor {
            get {
                return GetRelatedEntities<Account>("dsn_account_account_PayToVendor", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_account_account_PayToVendor", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_parentaccount")]
        [RelationshipSchemaName("dsn_Account_ParentAccount_Account", EntityRole.Referencing)]
        public Account Referencingdsn_Account_ParentAccount_Account {
            get {
                return GetRelatedEntity<Account>("dsn_Account_ParentAccount_Account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_Account_ParentAccount_Account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_reportgrouping")]
        [RelationshipSchemaName("dsn_Account_ReportGrouping_Account", EntityRole.Referencing)]
        public Account Referencingdsn_Account_ReportGrouping_Account {
            get {
                return GetRelatedEntity<Account>("dsn_Account_ReportGrouping_Account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_Account_ReportGrouping_Account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_billtocustomer")]
        [RelationshipSchemaName("dsn_account_account_BilltoCustomer", EntityRole.Referencing)]
        public Account Referencingdsn_account_account_BilltoCustomer {
            get {
                return GetRelatedEntity<Account>("dsn_account_account_BilltoCustomer", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_account_account_BilltoCustomer", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_commercialmanager")]
        [RelationshipSchemaName("dsn_account_account_CommercialManager", EntityRole.Referencing)]
        public Account Referencingdsn_account_account_CommercialManager {
            get {
                return GetRelatedEntity<Account>("dsn_account_account_CommercialManager", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_account_account_CommercialManager", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_paytovendor")]
        [RelationshipSchemaName("dsn_account_account_PayToVendor", EntityRole.Referencing)]
        public Account Referencingdsn_account_account_PayToVendor {
            get {
                return GetRelatedEntity<Account>("dsn_account_account_PayToVendor", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_account_account_PayToVendor", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_activity_parties")]
        public IEnumerable<ActivityParty> account_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("account_activity_parties", null);
            }
            set {
                SetRelatedEntities("account_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_accounts")]
        public BusinessUnit business_unit_accounts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntity("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_newmatchesreviewedby")]
        [RelationshipSchemaName("dsn_Account_NewMatchesReviewedBy_SystemUser")]
        public SystemUser dsn_Account_NewMatchesReviewedBy_SystemUser {
            get {
                return GetRelatedEntity<SystemUser>("dsn_Account_NewMatchesReviewedBy_SystemUser", null);
            }
            set {
                SetRelatedEntity("dsn_Account_NewMatchesReviewedBy_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_pnlteam")]
        [RelationshipSchemaName("dsn_Account_PNLTeam_Team")]
        public Team dsn_Account_PNLTeam_Team {
            get {
                return GetRelatedEntity<Team>("dsn_Account_PNLTeam_Team", null);
            }
            set {
                SetRelatedEntity("dsn_Account_PNLTeam_Team", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_profitcenter")]
        [RelationshipSchemaName("dsn_Account_ProfitCenter_Team")]
        public Team dsn_Account_ProfitCenter_Team {
            get {
                return GetRelatedEntity<Team>("dsn_Account_ProfitCenter_Team", null);
            }
            set {
                SetRelatedEntity("dsn_Account_ProfitCenter_Team", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_ratedby")]
        [RelationshipSchemaName("dsn_Account_RatedBy_SystemUser")]
        public SystemUser dsn_Account_RatedBy_SystemUser {
            get {
                return GetRelatedEntity<SystemUser>("dsn_Account_RatedBy_SystemUser", null);
            }
            set {
                SetRelatedEntity("dsn_Account_RatedBy_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_responsibleoffice")]
        [RelationshipSchemaName("dsn_Account_ResponsibleOffice_Team")]
        public Team dsn_Account_ResponsibleOffice_Team {
            get {
                return GetRelatedEntity<Team>("dsn_Account_ResponsibleOffice_Team", null);
            }
            set {
                SetRelatedEntity("dsn_Account_ResponsibleOffice_Team", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_deactrequestby")]
        [RelationshipSchemaName("dsn_account_DeActRequestBy")]
        public SystemUser dsn_account_DeActRequestBy {
            get {
                return GetRelatedEntity<SystemUser>("dsn_account_DeActRequestBy", null);
            }
            set {
                SetRelatedEntity("dsn_account_DeActRequestBy", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_kyccontact")]
        [RelationshipSchemaName("dsn_account_dsn_KYCContact_contact")]
        public Contact dsn_account_dsn_KYCContact_contact {
            get {
                return GetRelatedEntity<Contact>("dsn_account_dsn_KYCContact_contact", null);
            }
            set {
                SetRelatedEntity("dsn_account_dsn_KYCContact_contact", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_cpcontactid")]
        [RelationshipSchemaName("dsn_contact_account_cpcontactid")]
        public Contact dsn_contact_account_cpcontactid {
            get {
                return GetRelatedEntity<Contact>("dsn_contact_account_cpcontactid", null);
            }
            set {
                SetRelatedEntity("dsn_contact_account_cpcontactid", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_accountsponsor")]
        [RelationshipSchemaName("dsn_systemuser_account_AccountSponsor")]
        public SystemUser dsn_systemuser_account_AccountSponsor {
            get {
                return GetRelatedEntity<SystemUser>("dsn_systemuser_account_AccountSponsor", null);
            }
            set {
                SetRelatedEntity("dsn_systemuser_account_AccountSponsor", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public SystemUser lk_accountbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public SystemUser lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public SystemUser lk_accountbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public SystemUser lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_accounts")]
        public SystemUser system_user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_accounts", null);
            }
            set {
                SetRelatedEntity("system_user_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_accounts")]
        public Team team_accounts {
            get {
                return GetRelatedEntity<Team>("team_accounts", null);
            }
            set {
                SetRelatedEntity("team_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_accounts")]
        public SystemUser user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("user_accounts", null);
            }
            set {
                SetRelatedEntity("user_accounts", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person or group associated with an activity. An activity can have multiple activity parties.</para>
    /// <para>Display Name: Activity Party</para>
    /// </summary>
    [EntityLogicalName("activityparty")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityParty : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "activityparty";
        
        public const int EntityTypeCode = 135;
        
        public ActivityParty() : 
                base(EntityLogicalName) {
        }
        
        public ActivityParty(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("partyidname");
            }
        }
        
        [AttributeLogicalName("activitypartyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity party.</para>
        /// <para>Display Name: Activity Party</para>
        /// </summary>
        [AttributeLogicalName("activitypartyid")]
        [DisplayName("Activity Party")]
        public Guid? ActivityPartyId {
            get {
                return GetAttributeValue<Guid?>("activitypartyid");
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity associated with the activity party. (A "party" is any person who is associated with an activity.)</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public EntityReference ActivityId {
            get {
                return GetAttributeValue<EntityReference>("activityid");
            }
            set {
                SetAttributeValue("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Email address to which an email is delivered, and which is associated with the target entity.</para>
        /// <para>Display Name: Address </para>
        /// </summary>
        [AttributeLogicalName("addressused")]
        [DisplayName("Address ")]
        [MaxLength(320)]
        public string AddressUsed {
            get {
                return GetAttributeValue<string>("addressused");
            }
            set {
                SetAttributeValue("addressused", value);
            }
        }
        
        /// <summary>
        /// <para>Email address column number from associated party.</para>
        /// <para>Display Name: Email column number of party</para>
        /// </summary>
        [AttributeLogicalName("addressusedemailcolumnnumber")]
        [DisplayName("Email column number of party")]
        [Range(1, 2147483647)]
        public int? AddressUsedEmailColumnNumber {
            get {
                return GetAttributeValue<int?>("addressusedemailcolumnnumber");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending email to the activity party.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEmail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending faxes to the activity party.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow phone calls to the lead.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending postal mail to the lead.</para>
        /// <para>Display Name: Do not allow Postal Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Postal Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
        }
        
        /// <summary>
        /// <para>Amount of effort used by the resource in a service appointment activity.</para>
        /// <para>Display Name: Effort</para>
        /// </summary>
        [AttributeLogicalName("effort")]
        [DisplayName("Effort")]
        public double? Effort {
            get {
                return GetAttributeValue<double?>("effort");
            }
            set {
                SetAttributeValue("effort", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Exchange Entry</para>
        /// </summary>
        [AttributeLogicalName("exchangeentryid")]
        [DisplayName("Exchange Entry")]
        [MaxLength(1024)]
        public string ExchangeEntryId {
            get {
                return GetAttributeValue<string>("exchangeentryid");
            }
            set {
                SetAttributeValue("exchangeentryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public ActivityParty_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ActivityParty_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the underlying entity record is deleted.</para>
        /// <para>Display Name: Is Party Deleted</para>
        /// </summary>
        [AttributeLogicalName("ispartydeleted")]
        [DisplayName("Is Party Deleted")]
        public bool? IsPartyDeleted {
            get {
                return GetAttributeValue<bool?>("ispartydeleted");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity_party.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.</para>
        /// <para>Display Name: Participation Type</para>
        /// </summary>
        [AttributeLogicalName("participationtypemask")]
        [DisplayName("Participation Type")]
        public ActivityParty_ParticipationTypeMask? ParticipationTypeMask {
            get {
                return GetOptionSetValue<ActivityParty_ParticipationTypeMask>("participationtypemask");
            }
            set {
                SetOptionSetValue("participationtypemask", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the party associated with the activity.</para>
        /// <para>Display Name: Party</para>
        /// </summary>
        [AttributeLogicalName("partyid")]
        [DisplayName("Party")]
        public EntityReference PartyId {
            get {
                return GetAttributeValue<EntityReference>("partyid");
            }
            set {
                SetAttributeValue("partyid", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
        }
        
        /// <summary>
        /// <para>The name of the party to be used when the party is not resolved to an entity.</para>
        /// <para>Display Name: Unresolved Party Name</para>
        /// </summary>
        [AttributeLogicalName("unresolvedpartyname")]
        [DisplayName("Unresolved Party Name")]
        [MaxLength(200)]
        public string UnresolvedPartyName {
            get {
                return GetAttributeValue<string>("unresolvedpartyname");
            }
            set {
                SetAttributeValue("unresolvedpartyname", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("account_activity_parties")]
        public Account account_activity_parties {
            get {
                return GetRelatedEntity<Account>("account_activity_parties", null);
            }
            set {
                SetRelatedEntity("account_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("contact_activity_parties")]
        public Contact contact_activity_parties {
            get {
                return GetRelatedEntity<Contact>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntity("contact_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("email_activity_parties")]
        public Email email_activity_parties {
            get {
                return GetRelatedEntity<Email>("email_activity_parties", null);
            }
            set {
                SetRelatedEntity("email_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("system_user_activity_parties")]
        public SystemUser system_user_activity_parties {
            get {
                return GetRelatedEntity<SystemUser>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntity("system_user_activity_parties", null, value);
            }
        }
        
        public static ActivityParty Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityParty,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Note that is attached to one or more objects, including other notes.</para>
    /// <para>Display Name: Note</para>
    /// </summary>
    [EntityLogicalName("annotation")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Annotation : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "annotation";
        
        public const int EntityTypeCode = 5;
        
        public Annotation() : 
                base(EntityLogicalName) {
        }
        
        public Annotation(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("annotationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("annotationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the note.</para>
        /// <para>Display Name: Note</para>
        /// </summary>
        [AttributeLogicalName("annotationid")]
        [DisplayName("Note")]
        public Guid? AnnotationId {
            get {
                return GetAttributeValue<Guid?>("annotationid");
            }
            set {
                SetId("annotationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the note.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the note was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the annotation.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Contents of the note's attachment.</para>
        /// <para>Display Name: Document</para>
        /// </summary>
        [AttributeLogicalName("documentbody")]
        [DisplayName("Document")]
        [MaxLength(1073741823)]
        public string DocumentBody {
            get {
                return GetAttributeValue<string>("documentbody");
            }
            set {
                SetAttributeValue("documentbody", value);
            }
        }
        
        /// <summary>
        /// <para>File name of the note.</para>
        /// <para>Display Name: File Name</para>
        /// </summary>
        [AttributeLogicalName("filename")]
        [DisplayName("File Name")]
        [MaxLength(255)]
        public string FileName {
            get {
                return GetAttributeValue<string>("filename");
            }
            set {
                SetAttributeValue("filename", value);
            }
        }
        
        /// <summary>
        /// <para>File size of the note.</para>
        /// <para>Display Name: File Size (Bytes)</para>
        /// </summary>
        [AttributeLogicalName("filesize")]
        [DisplayName("File Size (Bytes)")]
        [Range(0, 1000000000)]
        public int? FileSize {
            get {
                return GetAttributeValue<int?>("filesize");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies whether the note is an attachment.</para>
        /// <para>Display Name: Is Document</para>
        /// </summary>
        [AttributeLogicalName("isdocument")]
        [DisplayName("Is Document")]
        public bool? IsDocument {
            get {
                return GetAttributeValue<bool?>("isdocument");
            }
            set {
                SetAttributeValue("isdocument", value);
            }
        }
        
        /// <summary>
        /// <para>Language identifier for the note.</para>
        /// <para>Display Name: Language ID</para>
        /// </summary>
        [AttributeLogicalName("langid")]
        [DisplayName("Language ID")]
        [MaxLength(2)]
        public string LangId {
            get {
                return GetAttributeValue<string>("langid");
            }
            set {
                SetAttributeValue("langid", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the note's attachment.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the note.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the note was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the annotation.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Text of the note.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("notetext")]
        [DisplayName("Description")]
        public string NoteText {
            get {
                return GetAttributeValue<string>("notetext");
            }
            set {
                SetAttributeValue("notetext", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the note is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        [DisplayName("Regarding")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
            set {
                SetAttributeValue("objectid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of entity with which the note is associated.</para>
        /// <para>Display Name: Object Type </para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Object Type ")]
        public string ObjectTypeCode {
            get {
                return GetAttributeValue<string>("objecttypecode");
            }
            set {
                SetAttributeValue("objecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the note.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the note.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the note.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the note.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Prefix of the file pointer in blob storage.</para>
        /// <para>Display Name: Prefix</para>
        /// </summary>
        [AttributeLogicalName("prefix")]
        [DisplayName("Prefix")]
        [MaxLength(10)]
        public string Prefix {
            get {
                return GetAttributeValue<string>("prefix");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the note.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Title")]
        [MaxLength(500)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>workflow step id associated with the note.</para>
        /// <para>Display Name: Step Id</para>
        /// </summary>
        [AttributeLogicalName("stepid")]
        [DisplayName("Step Id")]
        [MaxLength(32)]
        public string StepId {
            get {
                return GetAttributeValue<string>("stepid");
            }
            set {
                SetAttributeValue("stepid", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the note.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Title")]
        [MaxLength(500)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the note.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Account_Annotation")]
        public Account Account_Annotation {
            get {
                return GetRelatedEntity<Account>("Account_Annotation", null);
            }
            set {
                SetRelatedEntity("Account_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Annotation_AsyncOperations")]
        public IEnumerable<AsyncOperation> Annotation_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Annotation_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Annotation_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Contact_Annotation")]
        public Contact Contact_Annotation {
            get {
                return GetRelatedEntity<Contact>("Contact_Annotation", null);
            }
            set {
                SetRelatedEntity("Contact_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Email_Annotation")]
        public Email Email_Annotation {
            get {
                return GetRelatedEntity<Email>("Email_Annotation", null);
            }
            set {
                SetRelatedEntity("Email_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Workflow_Annotation")]
        public Workflow Workflow_Annotation {
            get {
                return GetRelatedEntity<Workflow>("Workflow_Annotation", null);
            }
            set {
                SetRelatedEntity("Workflow_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("annotation_owning_user")]
        public SystemUser annotation_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("annotation_owning_user", null);
            }
            set {
                SetRelatedEntity("annotation_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_annotations")]
        public BusinessUnit business_unit_annotations {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_annotations", null);
            }
            set {
                SetRelatedEntity("business_unit_annotations", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_annotationbase_createdby")]
        public SystemUser lk_annotationbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_annotationbase_createdonbehalfby")]
        public SystemUser lk_annotationbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_annotationbase_modifiedby")]
        public SystemUser lk_annotationbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_annotationbase_modifiedonbehalfby")]
        public SystemUser lk_annotationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_annotations")]
        public Team team_annotations {
            get {
                return GetRelatedEntity<Team>("team_annotations", null);
            }
            set {
                SetRelatedEntity("team_annotations", null, value);
            }
        }
        
        public static Annotation Retrieve(IOrganizationService service, Guid id, params Expression<Func<Annotation,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A role-based, modular business app that provides task-based functionality for a particular area of work.</para>
    /// <para>Display Name: Model-driven App</para>
    /// </summary>
    [EntityLogicalName("appmodule")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class AppModule : ExtendedEntity<AppModuleState, AppModule_statuscode> {
        
        public const string EntityLogicalName = "appmodule";
        
        public const int EntityTypeCode = 9006;
        
        public AppModule() : 
                base(EntityLogicalName) {
        }
        
        public AppModule(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("appmoduleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("appmoduleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: AppModuleId</para>
        /// </summary>
        [AttributeLogicalName("appmoduleid")]
        [DisplayName("AppModuleId")]
        public Guid? AppModuleId {
            get {
                return GetAttributeValue<Guid?>("appmoduleid");
            }
            set {
                SetId("appmoduleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the App Module used when synchronizing customizations for the Microsoft Dynamics 365 client for Outlook</para>
        /// <para>Display Name: App Module Unique Id</para>
        /// </summary>
        [AttributeLogicalName("appmoduleidunique")]
        [DisplayName("App Module Unique Id")]
        public Guid? AppModuleIdUnique {
            get {
                return GetAttributeValue<Guid?>("appmoduleidunique");
            }
            set {
                SetAttributeValue("appmoduleidunique", value);
            }
        }
        
        /// <summary>
        /// <para>App Module Version</para>
        /// <para>Display Name: App Module Version</para>
        /// </summary>
        [AttributeLogicalName("appmoduleversion")]
        [DisplayName("App Module Version")]
        [MaxLength(48)]
        public string AppModuleVersion {
            get {
                return GetAttributeValue<string>("appmoduleversion");
            }
            set {
                SetAttributeValue("appmoduleversion", value);
            }
        }
        
        /// <summary>
        /// <para>App Module Xml Managed</para>
        /// </summary>
        [AttributeLogicalName("appmodulexmlmanaged")]
        public string AppModuleXmlManaged {
            get {
                return GetAttributeValue<string>("appmodulexmlmanaged");
            }
            set {
                SetAttributeValue("appmodulexmlmanaged", value);
            }
        }
        
        /// <summary>
        /// <para>Client Type such as Web or UCI</para>
        /// <para>Display Name: Client Type</para>
        /// </summary>
        [AttributeLogicalName("clienttype")]
        [DisplayName("Client Type")]
        [Range(1, 31)]
        public int? ClientType {
            get {
                return GetAttributeValue<int?>("clienttype");
            }
            set {
                SetAttributeValue("clienttype", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Contains configuration XML</para>
        /// </summary>
        [AttributeLogicalName("configxml")]
        public string ConfigXML {
            get {
                return GetAttributeValue<string>("configxml");
            }
            set {
                SetAttributeValue("configxml", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description for entity</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(2000)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>App Module Descriptor</para>
        /// <para>Display Name: Descriptor</para>
        /// </summary>
        [AttributeLogicalName("descriptor")]
        [DisplayName("Descriptor")]
        [MaxLength(1073741823)]
        public string Descriptor {
            get {
                return GetAttributeValue<string>("descriptor");
            }
        }
        
        /// <summary>
        /// <para>App Module Event Handlers</para>
        /// <para>Display Name: Event Handlers</para>
        /// </summary>
        [AttributeLogicalName("eventhandlers")]
        [DisplayName("Event Handlers")]
        [MaxLength(1073741823)]
        public string EventHandlers {
            get {
                return GetAttributeValue<string>("eventhandlers");
            }
            set {
                SetAttributeValue("eventhandlers", value);
            }
        }
        
        /// <summary>
        /// <para>Form Factor</para>
        /// <para>Display Name: Form Factor</para>
        /// </summary>
        [AttributeLogicalName("formfactor")]
        [DisplayName("Form Factor")]
        [Range(1, 8)]
        public int? FormFactor {
            get {
                return GetAttributeValue<int?>("formfactor");
            }
            set {
                SetAttributeValue("formfactor", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the similarity rule is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(100)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Is Default</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Is Featured</para>
        /// <para>Display Name: IsFeatured</para>
        /// </summary>
        [AttributeLogicalName("isfeatured")]
        [DisplayName("IsFeatured")]
        public bool? IsFeatured {
            get {
                return GetAttributeValue<bool?>("isfeatured");
            }
            set {
                SetAttributeValue("isfeatured", value);
            }
        }
        
        /// <summary>
        /// <para>Is Managed</para>
        /// <para>Display Name: IsManaged</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("IsManaged")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of App Module</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>App navigation type</para>
        /// <para>Display Name: Navigation type</para>
        /// </summary>
        [AttributeLogicalName("navigationtype")]
        [DisplayName("Navigation type")]
        public AppModule_NavigationType? NavigationType {
            get {
                return GetOptionSetValue<AppModule_NavigationType>("navigationtype");
            }
            set {
                SetOptionSetValue("navigationtype", value);
            }
        }
        
        /// <summary>
        /// <para>The client that this app is optimized for</para>
        /// <para>Display Name: Optimized Client</para>
        /// </summary>
        [AttributeLogicalName("optimizedfor")]
        [DisplayName("Optimized Client")]
        [MaxLength(200)]
        public string OptimizedFor {
            get {
                return GetAttributeValue<string>("optimizedfor");
            }
            set {
                SetAttributeValue("optimizedfor", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the app.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Internal use only</para>
        /// <para>Display Name: Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Name of App Module</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was published.</para>
        /// <para>Display Name: Published On</para>
        /// </summary>
        [AttributeLogicalName("publishedon")]
        [DisplayName("Published On")]
        public DateTime? PublishedOn {
            get {
                return GetAttributeValue<DateTime?>("publishedon");
            }
            set {
                SetAttributeValue("publishedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the publisher.</para>
        /// <para>Display Name: Publisher</para>
        /// </summary>
        [AttributeLogicalName("publisherid")]
        [DisplayName("Publisher")]
        public EntityReference PublisherId {
            get {
                return GetAttributeValue<EntityReference>("publisherid");
            }
            set {
                SetAttributeValue("publisherid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Contains URL</para>
        /// <para>Display Name: URL</para>
        /// </summary>
        [AttributeLogicalName("url")]
        [DisplayName("URL")]
        [MaxLength(200)]
        public string URL {
            get {
                return GetAttributeValue<string>("url");
            }
            set {
                SetAttributeValue("url", value);
            }
        }
        
        /// <summary>
        /// <para>Unique Name of App Module</para>
        /// <para>Display Name: Unique Name</para>
        /// </summary>
        [AttributeLogicalName("uniquename")]
        [DisplayName("Unique Name")]
        [MaxLength(100)]
        public string UniqueName {
            get {
                return GetAttributeValue<string>("uniquename");
            }
            set {
                SetAttributeValue("uniquename", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Web Resource</para>
        /// <para>Display Name: Web Resource Id</para>
        /// </summary>
        [AttributeLogicalName("webresourceid")]
        [DisplayName("Web Resource Id")]
        public Guid? WebResourceId {
            get {
                return GetAttributeValue<Guid?>("webresourceid");
            }
            set {
                SetAttributeValue("webresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Web Resource as Welcome Page Id</para>
        /// <para>Display Name: Welcome Page Id</para>
        /// </summary>
        [AttributeLogicalName("welcomepageid")]
        [DisplayName("Welcome Page Id")]
        public Guid? WelcomePageId {
            get {
                return GetAttributeValue<Guid?>("welcomepageid");
            }
            set {
                SetAttributeValue("welcomepageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Model-driven App</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AppModuleState? statecode {
            get {
                return GetOptionSetValue<AppModuleState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Model-driven App</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public AppModule_statuscode? statuscode {
            get {
                return GetOptionSetValue<AppModule_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("appmoduleroles_association")]
        public IEnumerable<Role> appmoduleroles_association {
            get {
                return GetRelatedEntities<Role>("appmoduleroles_association", null);
            }
            set {
                SetRelatedEntities("appmoduleroles_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_appmodule_createdby")]
        public SystemUser lk_appmodule_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appmodule_createdby", null);
            }
            set {
                SetRelatedEntity("lk_appmodule_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_appmodule_createdonbehalfby")]
        public SystemUser lk_appmodule_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appmodule_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appmodule_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_appmodule_modifiedby")]
        public SystemUser lk_appmodule_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appmodule_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_appmodule_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_appmodule_modifiedonbehalfby")]
        public SystemUser lk_appmodule_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appmodule_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appmodule_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_appmodule")]
        public Organization organization_appmodule {
            get {
                return GetRelatedEntity<Organization>("organization_appmodule", null);
            }
            set {
                SetRelatedEntity("organization_appmodule", null, value);
            }
        }
        
        public static AppModule Retrieve(IOrganizationService service, Guid id, params Expression<Func<AppModule,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Unique Name'</para>
        /// </summary>
        public static AppModule Retrieve_uniquename(IOrganizationService service, componentstate ComponentState, DateTime OverwriteTime, string UniqueName, params Expression<Func<AppModule,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("componentstate", ComponentState);
            keys.Add("overwritetime", OverwriteTime);
            keys.Add("uniquename", UniqueName);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Unique Name'</para>
        /// </summary>
        public void AltKey_uniquename(componentstate ComponentState, DateTime OverwriteTime, string UniqueName) {
            KeyAttributes.Clear();
            KeyAttributes.Add("componentstate", ComponentState);
            KeyAttributes.Add("overwritetime", OverwriteTime);
            KeyAttributes.Add("uniquename", UniqueName);
        }
    }
    
    /// <summary>
    /// <para>Security roles that have access to a business app.</para>
    /// <para>Display Name: App Module Roles</para>
    /// </summary>
    [EntityLogicalName("appmoduleroles")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class AppModuleRoles : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "appmoduleroles";
        
        public const string RelationshipSchemaName = "AppModuleRoles";
        
        public const int EntityTypeCode = 9009;
        
        public AppModuleRoles() : 
                base(EntityLogicalName) {
        }
        
        public AppModuleRoles(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("appmoduleroleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("appmoduleroleid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("appmoduleroleid")]
        public Guid? AppModuleRoleId {
            get {
                return GetAttributeValue<Guid?>("appmoduleroleid");
            }
            set {
                SetId("appmoduleroleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the app module.</para>
        /// <para>Display Name: AppModule</para>
        /// </summary>
        [AttributeLogicalName("appmoduleid")]
        [DisplayName("AppModule")]
        public EntityReference AppModuleId {
            get {
                return GetAttributeValue<EntityReference>("appmoduleid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the App Module Roles used when synchronizing customizations for the Microsoft Dynamics 365 client for Outlook</para>
        /// <para>Display Name: App Module Role Unique Id</para>
        /// </summary>
        [AttributeLogicalName("appmoduleroleidunique")]
        [DisplayName("App Module Role Unique Id")]
        public Guid? AppModuleRoleIdUnique {
            get {
                return GetAttributeValue<Guid?>("appmoduleroleidunique");
            }
            set {
                SetAttributeValue("appmoduleroleidunique", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Version in which the similarity rule is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(100)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Is Managed</para>
        /// <para>Display Name: IsManaged</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("IsManaged")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Internal use only</para>
        /// <para>Display Name: Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("roleid")]
        [DisplayName("Role")]
        public EntityReference RoleId {
            get {
                return GetAttributeValue<EntityReference>("roleid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static AppModuleRoles Retrieve(IOrganizationService service, Guid id, params Expression<Func<AppModuleRoles,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Process whose execution can proceed independently or in the background.</para>
    /// <para>Display Name: System Job</para>
    /// </summary>
    [EntityLogicalName("asyncoperation")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class AsyncOperation : ExtendedEntity<AsyncOperationState, AsyncOperation_StatusCode> {
        
        public const string EntityLogicalName = "asyncoperation";
        
        public const int EntityTypeCode = 4700;
        
        public AsyncOperation() : 
                base(EntityLogicalName) {
        }
        
        public AsyncOperation(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("asyncoperationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("asyncoperationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the system job.</para>
        /// <para>Display Name: System Job</para>
        /// </summary>
        [AttributeLogicalName("asyncoperationid")]
        [DisplayName("System Job")]
        public Guid? AsyncOperationId {
            get {
                return GetAttributeValue<Guid?>("asyncoperationid");
            }
            set {
                SetId("asyncoperationid", value);
            }
        }
        
        /// <summary>
        /// <para>The breadcrumb record ID.</para>
        /// <para>Display Name: Breadcrumb ID</para>
        /// </summary>
        [AttributeLogicalName("breadcrumbid")]
        [DisplayName("Breadcrumb ID")]
        public Guid? BreadcrumbId {
            get {
                return GetAttributeValue<Guid?>("breadcrumbid");
            }
            set {
                SetAttributeValue("breadcrumbid", value);
            }
        }
        
        /// <summary>
        /// <para>The origin of the caller.</para>
        /// <para>Display Name: Caller Origin</para>
        /// </summary>
        [AttributeLogicalName("callerorigin")]
        [DisplayName("Caller Origin")]
        [MaxLength(256)]
        public string CallerOrigin {
            get {
                return GetAttributeValue<string>("callerorigin");
            }
            set {
                SetAttributeValue("callerorigin", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the system job was completed.</para>
        /// <para>Display Name: Completed On</para>
        /// </summary>
        [AttributeLogicalName("completedon")]
        [DisplayName("Completed On")]
        public DateTime? CompletedOn {
            get {
                return GetAttributeValue<DateTime?>("completedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier used to correlate between multiple SDK requests and system jobs.</para>
        /// <para>Display Name: Correlation Id</para>
        /// </summary>
        [AttributeLogicalName("correlationid")]
        [DisplayName("Correlation Id")]
        public Guid? CorrelationId {
            get {
                return GetAttributeValue<Guid?>("correlationid");
            }
            set {
                SetAttributeValue("correlationid", value);
            }
        }
        
        /// <summary>
        /// <para>Last time the correlation depth was updated.</para>
        /// <para>Display Name: Correlation Updated Time</para>
        /// </summary>
        [AttributeLogicalName("correlationupdatedtime")]
        [DisplayName("Correlation Updated Time")]
        public DateTime? CorrelationUpdatedTime {
            get {
                return GetAttributeValue<DateTime?>("correlationupdatedtime");
            }
            set {
                SetAttributeValue("correlationupdatedtime", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the system job.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the system job was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the asyncoperation.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unstructured data associated with the system job.</para>
        /// <para>Display Name: Data</para>
        /// </summary>
        [AttributeLogicalName("data")]
        [DisplayName("Data")]
        public string Data {
            get {
                return GetAttributeValue<string>("data");
            }
            set {
                SetAttributeValue("data", value);
            }
        }
        
        /// <summary>
        /// <para>Execution of all operations with the same dependency token is serialized.</para>
        /// <para>Display Name: Dependency Token</para>
        /// </summary>
        [AttributeLogicalName("dependencytoken")]
        [DisplayName("Dependency Token")]
        [MaxLength(256)]
        public string DependencyToken {
            get {
                return GetAttributeValue<string>("dependencytoken");
            }
            set {
                SetAttributeValue("dependencytoken", value);
            }
        }
        
        /// <summary>
        /// <para>Number of SDK calls made since the first call.</para>
        /// <para>Display Name: Depth</para>
        /// </summary>
        [AttributeLogicalName("depth")]
        [DisplayName("Depth")]
        [Range(0, 2147483647)]
        public int? Depth {
            get {
                return GetAttributeValue<int?>("depth");
            }
            set {
                SetAttributeValue("depth", value);
            }
        }
        
        /// <summary>
        /// <para>Error code returned from a canceled system job.</para>
        /// <para>Display Name: Error Code</para>
        /// </summary>
        [AttributeLogicalName("errorcode")]
        [DisplayName("Error Code")]
        [Range(-2147483648, 2147483647)]
        public int? ErrorCode {
            get {
                return GetAttributeValue<int?>("errorcode");
            }
        }
        
        /// <summary>
        /// <para>Time that the system job has taken to execute.</para>
        /// <para>Display Name: ExecutionTimeSpan</para>
        /// </summary>
        [AttributeLogicalName("executiontimespan")]
        [DisplayName("ExecutionTimeSpan")]
        public double? ExecutionTimeSpan {
            get {
                return GetAttributeValue<double?>("executiontimespan");
            }
        }
        
        /// <summary>
        /// <para>The datetime when the Expander pipeline started.</para>
        /// <para>Display Name: Expander Start Time</para>
        /// </summary>
        [AttributeLogicalName("expanderstarttime")]
        [DisplayName("Expander Start Time")]
        public DateTime? ExpanderStartTime {
            get {
                return GetAttributeValue<DateTime?>("expanderstarttime");
            }
            set {
                SetAttributeValue("expanderstarttime", value);
            }
        }
        
        /// <summary>
        /// <para>Message provided by the system job.</para>
        /// <para>Display Name: Friendly message</para>
        /// </summary>
        [AttributeLogicalName("friendlymessage")]
        [DisplayName("Friendly message")]
        public string FriendlyMessage {
            get {
                return GetAttributeValue<string>("friendlymessage");
            }
            set {
                SetAttributeValue("friendlymessage", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the host that owns this system job.</para>
        /// <para>Display Name: Host</para>
        /// </summary>
        [AttributeLogicalName("hostid")]
        [DisplayName("Host")]
        [MaxLength(256)]
        public string HostId {
            get {
                return GetAttributeValue<string>("hostid");
            }
            set {
                SetAttributeValue("hostid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that the system job is waiting for an event.</para>
        /// <para>Display Name: Waiting for Event</para>
        /// </summary>
        [AttributeLogicalName("iswaitingforevent")]
        [DisplayName("Waiting for Event")]
        public bool? IsWaitingForEvent {
            get {
                return GetAttributeValue<bool?>("iswaitingforevent");
            }
        }
        
        /// <summary>
        /// <para>Message related to the system job.</para>
        /// <para>Display Name: Message</para>
        /// </summary>
        [AttributeLogicalName("message")]
        [DisplayName("Message")]
        public string Message {
            get {
                return GetAttributeValue<string>("message");
            }
        }
        
        /// <summary>
        /// <para>Name of the message that started this system job.</para>
        /// <para>Display Name: Message Name</para>
        /// </summary>
        [AttributeLogicalName("messagename")]
        [DisplayName("Message Name")]
        [MaxLength(160)]
        public string MessageName {
            get {
                return GetAttributeValue<string>("messagename");
            }
            set {
                SetAttributeValue("messagename", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the system job.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the system job was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the asyncoperation.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the system job.</para>
        /// <para>Display Name: System Job Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("System Job Name")]
        [MaxLength(256)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type of the system job.</para>
        /// <para>Display Name: System Job Type</para>
        /// </summary>
        [AttributeLogicalName("operationtype")]
        [DisplayName("System Job Type")]
        public AsyncOperation_OperationType? OperationType {
            get {
                return GetOptionSetValue<AsyncOperation_OperationType>("operationtype");
            }
            set {
                SetOptionSetValue("operationtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the system job.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the system job.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the owning extension with which the system job is associated.</para>
        /// <para>Display Name: Owning Extension</para>
        /// </summary>
        [AttributeLogicalName("owningextensionid")]
        [DisplayName("Owning Extension")]
        public EntityReference OwningExtensionId {
            get {
                return GetAttributeValue<EntityReference>("owningextensionid");
            }
            set {
                SetAttributeValue("owningextensionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        [AttributeLogicalName("parentpluginexecutionid")]
        public Guid? ParentPluginExecutionId {
            get {
                return GetAttributeValue<Guid?>("parentpluginexecutionid");
            }
            set {
                SetAttributeValue("parentpluginexecutionid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the system job should run only after the specified date and time.</para>
        /// <para>Display Name: Postpone Until</para>
        /// </summary>
        [AttributeLogicalName("postponeuntil")]
        [DisplayName("Postpone Until")]
        public DateTime? PostponeUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeuntil");
            }
            set {
                SetAttributeValue("postponeuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Type of entity with which the system job is primarily associated.</para>
        /// <para>Display Name: Primary Entity Type</para>
        /// </summary>
        [AttributeLogicalName("primaryentitytype")]
        [DisplayName("Primary Entity Type")]
        public string PrimaryEntityType {
            get {
                return GetAttributeValue<string>("primaryentitytype");
            }
            set {
                SetAttributeValue("primaryentitytype", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the system job.</para>
        /// <para>Display Name: System Job Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("System Job Name")]
        [MaxLength(256)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Pattern of the system job's recurrence.</para>
        /// <para>Display Name: Recurrence Pattern</para>
        /// </summary>
        [AttributeLogicalName("recurrencepattern")]
        [DisplayName("Recurrence Pattern")]
        [MaxLength(256)]
        public string RecurrencePattern {
            get {
                return GetAttributeValue<string>("recurrencepattern");
            }
            set {
                SetAttributeValue("recurrencepattern", value);
            }
        }
        
        /// <summary>
        /// <para>Starting time in UTC for the recurrence pattern.</para>
        /// <para>Display Name: Recurrence Start</para>
        /// </summary>
        [AttributeLogicalName("recurrencestarttime")]
        [DisplayName("Recurrence Start")]
        public DateTime? RecurrenceStartTime {
            get {
                return GetAttributeValue<DateTime?>("recurrencestarttime");
            }
            set {
                SetAttributeValue("recurrencestarttime", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the system job is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the request that generated the system job.</para>
        /// <para>Display Name: Request</para>
        /// </summary>
        [AttributeLogicalName("requestid")]
        [DisplayName("Request")]
        public Guid? RequestId {
            get {
                return GetAttributeValue<Guid?>("requestid");
            }
            set {
                SetAttributeValue("requestid", value);
            }
        }
        
        /// <summary>
        /// <para>Retain job history.</para>
        /// <para>Display Name: Retain Job History</para>
        /// </summary>
        [AttributeLogicalName("retainjobhistory")]
        [DisplayName("Retain Job History")]
        public bool? RetainJobHistory {
            get {
                return GetAttributeValue<bool?>("retainjobhistory");
            }
            set {
                SetAttributeValue("retainjobhistory", value);
            }
        }
        
        /// <summary>
        /// <para>Number of times to retry the system job.</para>
        /// <para>Display Name: Retry Count</para>
        /// </summary>
        [AttributeLogicalName("retrycount")]
        [DisplayName("Retry Count")]
        [Range(0, 2147483647)]
        public int? RetryCount {
            get {
                return GetAttributeValue<int?>("retrycount");
            }
        }
        
        /// <summary>
        /// <para>Root execution context of the job that trigerred async job.</para>
        /// <para>Display Name: RootExecutionContext</para>
        /// </summary>
        [AttributeLogicalName("rootexecutioncontext")]
        [DisplayName("RootExecutionContext")]
        public string RootExecutionContext {
            get {
                return GetAttributeValue<string>("rootexecutioncontext");
            }
            set {
                SetAttributeValue("rootexecutioncontext", value);
            }
        }
        
        /// <summary>
        /// <para>Order in which operations were submitted.</para>
        /// <para>Display Name: Sequence</para>
        /// </summary>
        [AttributeLogicalName("sequence")]
        [DisplayName("Sequence")]
        public long? Sequence {
            get {
                return GetAttributeValue<long?>("sequence");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the system job was started.</para>
        /// <para>Display Name: Started On</para>
        /// </summary>
        [AttributeLogicalName("startedon")]
        [DisplayName("Started On")]
        public DateTime? StartedOn {
            get {
                return GetAttributeValue<DateTime?>("startedon");
            }
        }
        
        /// <summary>
        /// <para>Status of the system job.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AsyncOperationState? StateCode {
            get {
                return GetOptionSetValue<AsyncOperationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the system job.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public AsyncOperation_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<AsyncOperation_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>The Subtype of the Async Job</para>
        /// <para>Display Name: Subtype</para>
        /// </summary>
        [AttributeLogicalName("subtype")]
        [DisplayName("Subtype")]
        [Range(0, 255)]
        public int? Subtype {
            get {
                return GetAttributeValue<int?>("subtype");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow activation related to the system job.</para>
        /// <para>Display Name: Workflow Activation Id</para>
        /// </summary>
        [AttributeLogicalName("workflowactivationid")]
        [DisplayName("Workflow Activation Id")]
        public EntityReference WorkflowActivationId {
            get {
                return GetAttributeValue<EntityReference>("workflowactivationid");
            }
            set {
                SetAttributeValue("workflowactivationid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of a workflow stage.</para>
        /// <para>Display Name: Workflow Stage</para>
        /// </summary>
        [AttributeLogicalName("workflowstagename")]
        [DisplayName("Workflow Stage")]
        [MaxLength(256)]
        public string WorkflowStageName {
            get {
                return GetAttributeValue<string>("workflowstagename");
            }
        }
        
        /// <summary>
        /// <para>The workload name.</para>
        /// <para>Display Name: Workload</para>
        /// </summary>
        [AttributeLogicalName("workload")]
        [DisplayName("Workload")]
        [MaxLength(256)]
        public string Workload {
            get {
                return GetAttributeValue<string>("workload");
            }
            set {
                SetAttributeValue("workload", value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_AsyncOperations")]
        public Account Account_AsyncOperations {
            get {
                return GetRelatedEntity<Account>("Account_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Account_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Annotation_AsyncOperations")]
        public Annotation Annotation_AsyncOperations {
            get {
                return GetRelatedEntity<Annotation>("Annotation_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Annotation_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("AsyncOperation_Emails")]
        public IEnumerable<Email> AsyncOperation_Emails {
            get {
                return GetRelatedEntities<Email>("AsyncOperation_Emails", null);
            }
            set {
                SetRelatedEntities("AsyncOperation_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("BusinessUnit_AsyncOperations")]
        public BusinessUnit BusinessUnit_AsyncOperations {
            get {
                return GetRelatedEntity<BusinessUnit>("BusinessUnit_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("BusinessUnit_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_AsyncOperations")]
        public Contact Contact_AsyncOperations {
            get {
                return GetRelatedEntity<Contact>("Contact_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Contact_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Email_AsyncOperations")]
        public Email Email_AsyncOperations {
            get {
                return GetRelatedEntity<Email>("Email_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Email_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Organization_AsyncOperations")]
        public Organization Organization_AsyncOperations {
            get {
                return GetRelatedEntity<Organization>("Organization_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Organization_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Role_AsyncOperations")]
        public Role Role_AsyncOperations {
            get {
                return GetRelatedEntity<Role>("Role_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Role_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("owningextensionid")]
        [RelationshipSchemaName("SdkMessageProcessingStep_AsyncOperations")]
        public SdkMessageProcessingStep SdkMessageProcessingStep_AsyncOperations {
            get {
                return GetRelatedEntity<SdkMessageProcessingStep>("SdkMessageProcessingStep_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("SdkMessageProcessingStep_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("SystemUser_AsyncOperations")]
        public SystemUser SystemUser_AsyncOperations {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("SystemUser_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Team_AsyncOperations")]
        public Team Team_AsyncOperations {
            get {
                return GetRelatedEntity<Team>("Team_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Team_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Template_AsyncOperations")]
        public Template Template_AsyncOperations {
            get {
                return GetRelatedEntity<Template>("Template_AsyncOperations", null);
            }
            set {
                SetRelatedEntity("Template_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_asyncoperation")]
        public BusinessUnit business_unit_asyncoperation {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_asyncoperation", null);
            }
            set {
                SetRelatedEntity("business_unit_asyncoperation", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_asyncoperation_createdby")]
        public SystemUser lk_asyncoperation_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_asyncoperation_createdby", null);
            }
            set {
                SetRelatedEntity("lk_asyncoperation_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_asyncoperation_createdonbehalfby")]
        public SystemUser lk_asyncoperation_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_asyncoperation_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_asyncoperation_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_asyncoperation_modifiedby")]
        public SystemUser lk_asyncoperation_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_asyncoperation_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_asyncoperation_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_asyncoperation_modifiedonbehalfby")]
        public SystemUser lk_asyncoperation_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_asyncoperation_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_asyncoperation_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("workflowactivationid")]
        [RelationshipSchemaName("lk_asyncoperation_workflowactivationid")]
        public Workflow lk_asyncoperation_workflowactivationid {
            get {
                return GetRelatedEntity<Workflow>("lk_asyncoperation_workflowactivationid", null);
            }
            set {
                SetRelatedEntity("lk_asyncoperation_workflowactivationid", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_asyncoperation")]
        public SystemUser system_user_asyncoperation {
            get {
                return GetRelatedEntity<SystemUser>("system_user_asyncoperation", null);
            }
            set {
                SetRelatedEntity("system_user_asyncoperation", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_asyncoperation")]
        public Team team_asyncoperation {
            get {
                return GetRelatedEntity<Team>("team_asyncoperation", null);
            }
            set {
                SetRelatedEntity("team_asyncoperation", null, value);
            }
        }
        
        public static AsyncOperation Retrieve(IOrganizationService service, Guid id, params Expression<Func<AsyncOperation,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Track changes to records for analysis, record keeping, and compliance.</para>
    /// <para>Display Name: Auditing</para>
    /// </summary>
    [EntityLogicalName("audit")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Audit : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "audit";
        
        public const int EntityTypeCode = 4567;
        
        public Audit() : 
                base(EntityLogicalName) {
        }
        
        public Audit(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("auditid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("auditid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the auditing instance</para>
        /// <para>Display Name: Record Id</para>
        /// </summary>
        [AttributeLogicalName("auditid")]
        [DisplayName("Record Id")]
        public Guid? AuditId {
            get {
                return GetAttributeValue<Guid?>("auditid");
            }
            set {
                SetId("auditid", value);
            }
        }
        
        /// <summary>
        /// <para>Actions the user can perform that cause a change</para>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("action")]
        [DisplayName("Event")]
        public Audit_Action? Action {
            get {
                return GetOptionSetValue<Audit_Action>("action");
            }
        }
        
        /// <summary>
        /// <para>Contains a CSV of the ColumnNumber metadata property of attributes</para>
        /// <para>Display Name: Changed Field</para>
        /// </summary>
        [AttributeLogicalName("attributemask")]
        [DisplayName("Changed Field")]
        public string AttributeMask {
            get {
                return GetAttributeValue<string>("attributemask");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the calling user in case of an impersonated call</para>
        /// <para>Display Name: Calling User</para>
        /// </summary>
        [AttributeLogicalName("callinguserid")]
        [DisplayName("Calling User")]
        public EntityReference CallingUserId {
            get {
                return GetAttributeValue<EntityReference>("callinguserid");
            }
        }
        
        /// <summary>
        /// <para>Contains a CSV of old values of all the attributes whose IsAuditEnabled property is True and are being changed</para>
        /// <para>Display Name: Change Data</para>
        /// </summary>
        [AttributeLogicalName("changedata")]
        [DisplayName("Change Data")]
        public string ChangeData {
            get {
                return GetAttributeValue<string>("changedata");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the audit record was created.</para>
        /// <para>Display Name: Changed Date</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Changed Date")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the record that is being audited</para>
        /// <para>Display Name: Record</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        [DisplayName("Record")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
        }
        
        /// <summary>
        /// <para>The action that causes the audit--it will be create, delete, or update</para>
        /// <para>Display Name: Operation</para>
        /// </summary>
        [AttributeLogicalName("operation")]
        [DisplayName("Operation")]
        public Audit_Operation? Operation {
            get {
                return GetOptionSetValue<Audit_Operation>("operation");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the record is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for multiple changes that are part of a single operation; this field contains the same GUID for all the audit rows generated in a single transaction</para>
        /// <para>Display Name: Transaction Id</para>
        /// </summary>
        [AttributeLogicalName("transactionid")]
        [DisplayName("Transaction Id")]
        public Guid? TransactionId {
            get {
                return GetAttributeValue<Guid?>("transactionid");
            }
        }
        
        /// <summary>
        /// <para>Additional information associated to the user who caused the change.</para>
        /// <para>Display Name: User Info</para>
        /// </summary>
        [AttributeLogicalName("useradditionalinfo")]
        [DisplayName("User Info")]
        [MaxLength(350)]
        public string UserAdditionalInfo {
            get {
                return GetAttributeValue<string>("useradditionalinfo");
            }
            set {
                SetAttributeValue("useradditionalinfo", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who caused a change</para>
        /// <para>Display Name: Changed By</para>
        /// </summary>
        [AttributeLogicalName("userid")]
        [DisplayName("Changed By")]
        public EntityReference UserId {
            get {
                return GetAttributeValue<EntityReference>("userid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the audit.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("callinguserid")]
        [RelationshipSchemaName("lk_audit_callinguserid")]
        public SystemUser lk_audit_callinguserid {
            get {
                return GetRelatedEntity<SystemUser>("lk_audit_callinguserid", null);
            }
            set {
                SetRelatedEntity("lk_audit_callinguserid", null, value);
            }
        }
        
        [AttributeLogicalName("userid")]
        [RelationshipSchemaName("lk_audit_userid")]
        public SystemUser lk_audit_userid {
            get {
                return GetRelatedEntity<SystemUser>("lk_audit_userid", null);
            }
            set {
                SetRelatedEntity("lk_audit_userid", null, value);
            }
        }
        
        public static Audit Retrieve(IOrganizationService service, Guid id, params Expression<Func<Audit,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Business, division, or department in the Microsoft Dynamics 365 database.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [EntityLogicalName("businessunit")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BusinessUnit : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "businessunit";
        
        public const int EntityTypeCode = 10;
        
        public BusinessUnit() : 
                base(EntityLogicalName) {
        }
        
        public BusinessUnit(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public Guid? BusinessUnitId {
            get {
                return GetAttributeValue<Guid?>("businessunitid");
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public BusinessUnit_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 1.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public BusinessUnit_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public BusinessUnit_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 2.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public BusinessUnit_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the business unit.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit cost center.</para>
        /// <para>Display Name: Cost Center</para>
        /// </summary>
        [AttributeLogicalName("costcenter")]
        [DisplayName("Cost Center")]
        [MaxLength(100)]
        public string CostCenter {
            get {
                return GetAttributeValue<string>("costcenter");
            }
            set {
                SetAttributeValue("costcenter", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the business unit.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the businessunit.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Credit limit for the business unit.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public double? CreditLimit {
            get {
                return GetAttributeValue<double?>("creditlimit");
            }
            set {
                SetAttributeValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the business unit.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the business unit.</para>
        /// <para>Display Name: Disable Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disable Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Name of the division to which the business unit belongs.</para>
        /// <para>Display Name: Division</para>
        /// </summary>
        [AttributeLogicalName("divisionname")]
        [DisplayName("Division")]
        [MaxLength(100)]
        public string DivisionName {
            get {
                return GetAttributeValue<string>("divisionname");
            }
            set {
                SetAttributeValue("divisionname", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the business unit.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the businessunit with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Alternative name under which the business unit can be filed.</para>
        /// <para>Display Name: File as Name</para>
        /// </summary>
        [AttributeLogicalName("fileasname")]
        [DisplayName("File as Name")]
        [MaxLength(100)]
        public string FileAsName {
            get {
                return GetAttributeValue<string>("fileasname");
            }
            set {
                SetAttributeValue("fileasname", value);
            }
        }
        
        /// <summary>
        /// <para>FTP site URL for the business unit.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Inheritance mask for the business unit.</para>
        /// <para>Display Name: Inheritance Mask</para>
        /// </summary>
        [AttributeLogicalName("inheritancemask")]
        [DisplayName("Inheritance Mask")]
        [Range(0, 1000000000)]
        public int? InheritanceMask {
            get {
                return GetAttributeValue<int?>("inheritancemask");
            }
            set {
                SetAttributeValue("inheritancemask", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the business unit is enabled or disabled.</para>
        /// <para>Display Name: Is Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the business unit.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the businessunit.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the business unit.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the parent business unit.</para>
        /// <para>Display Name: Parent Business</para>
        /// </summary>
        [AttributeLogicalName("parentbusinessunitid")]
        [DisplayName("Parent Business")]
        public EntityReference ParentBusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("parentbusinessunitid");
            }
            set {
                SetAttributeValue("parentbusinessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Picture or diagram of the business unit.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange on which the business is listed.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange ticker symbol for the business unit.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the businessunit.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for the business unit. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the business unit.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Website URL for the business unit.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether workflow or sales process rules have been suspended.</para>
        /// <para>Display Name: Workflow Suspended</para>
        /// </summary>
        [AttributeLogicalName("workflowsuspended")]
        [DisplayName("Workflow Suspended")]
        public bool? WorkflowSuspended {
            get {
                return GetAttributeValue<bool?>("workflowsuspended");
            }
            set {
                SetAttributeValue("workflowsuspended", value);
            }
        }
        
        [RelationshipSchemaName("BusinessUnit_AsyncOperations")]
        public IEnumerable<AsyncOperation> BusinessUnit_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("BusinessUnit_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("BusinessUnit_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referenced)]
        public IEnumerable<BusinessUnit> Referencedbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntities<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("business_unit_parent_business_unit", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentbusinessunitid")]
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referencing)]
        public BusinessUnit Referencingbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("business_unit_parent_business_unit", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_accounts")]
        public IEnumerable<Account> business_unit_accounts {
            get {
                return GetRelatedEntities<Account>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntities("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_annotations")]
        public IEnumerable<Annotation> business_unit_annotations {
            get {
                return GetRelatedEntities<Annotation>("business_unit_annotations", null);
            }
            set {
                SetRelatedEntities("business_unit_annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_asyncoperation")]
        public IEnumerable<AsyncOperation> business_unit_asyncoperation {
            get {
                return GetRelatedEntities<AsyncOperation>("business_unit_asyncoperation", null);
            }
            set {
                SetRelatedEntities("business_unit_asyncoperation", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_contacts")]
        public IEnumerable<Contact> business_unit_contacts {
            get {
                return GetRelatedEntities<Contact>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntities("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_email_activities")]
        public IEnumerable<Email> business_unit_email_activities {
            get {
                return GetRelatedEntities<Email>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_email_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_roles")]
        public IEnumerable<Role> business_unit_roles {
            get {
                return GetRelatedEntities<Role>("business_unit_roles", null);
            }
            set {
                SetRelatedEntities("business_unit_roles", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_system_users")]
        public IEnumerable<SystemUser> business_unit_system_users {
            get {
                return GetRelatedEntities<SystemUser>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntities("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_teams")]
        public IEnumerable<Team> business_unit_teams {
            get {
                return GetRelatedEntities<Team>("business_unit_teams", null);
            }
            set {
                SetRelatedEntities("business_unit_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_templates")]
        public IEnumerable<Template> business_unit_templates {
            get {
                return GetRelatedEntities<Template>("business_unit_templates", null);
            }
            set {
                SetRelatedEntities("business_unit_templates", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_user_settings")]
        public IEnumerable<UserSettings> business_unit_user_settings {
            get {
                return GetRelatedEntities<UserSettings>("business_unit_user_settings", null);
            }
            set {
                SetRelatedEntities("business_unit_user_settings", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_workflow")]
        public IEnumerable<Workflow> business_unit_workflow {
            get {
                return GetRelatedEntities<Workflow>("business_unit_workflow", null);
            }
            set {
                SetRelatedEntities("business_unit_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public SystemUser lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public SystemUser lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public SystemUser lk_businessunitbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public SystemUser lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_business_units")]
        public Organization organization_business_units {
            get {
                return GetRelatedEntity<Organization>("organization_business_units", null);
            }
            set {
                SetRelatedEntity("organization_business_units", null, value);
            }
        }
        
        public static BusinessUnit Retrieve(IOrganizationService service, Guid id, params Expression<Func<BusinessUnit,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contact is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        [DisplayName("Role")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 3.</para>
        /// <para>Display Name: Address 3: ID</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        [DisplayName("Address 3: ID")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the third address type.</para>
        /// <para>Display Name: Address 3: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        [DisplayName("Address 3: Address Type")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the 3rd address.</para>
        /// <para>Display Name: Address 3: City</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        [DisplayName("Address 3: City")]
        [MaxLength(80)]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete third address.</para>
        /// <para>Display Name: Address 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        [DisplayName("Address 3")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>the country or region for the 3rd address.</para>
        /// <para>Display Name: Address3: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        [DisplayName("Address3: Country/Region")]
        [MaxLength(80)]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the third address.</para>
        /// <para>Display Name: Address 3: County</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        [DisplayName("Address 3: County")]
        [MaxLength(50)]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the third address.</para>
        /// <para>Display Name: Address 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        [DisplayName("Address 3: Fax")]
        [MaxLength(50)]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 3: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        [DisplayName("Address 3: Freight Terms")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        [DisplayName("Address 3: Latitude")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>the first line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        [DisplayName("Address3: Street 1")]
        [MaxLength(250)]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>the second line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        [DisplayName("Address3: Street 2")]
        [MaxLength(250)]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>the third line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        [DisplayName("Address3: Street 3")]
        [MaxLength(250)]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        [DisplayName("Address 3: Longitude")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 3: Name</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        [DisplayName("Address 3: Name")]
        [MaxLength(200)]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>the post office box number of the 3rd address.</para>
        /// <para>Display Name: Address 3: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        [DisplayName("Address 3: Post Office Box")]
        [MaxLength(20)]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>the ZIP Code or postal code for the 3rd address.</para>
        /// <para>Display Name: Address3: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        [DisplayName("Address3: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's third address.</para>
        /// <para>Display Name: Address 3: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        [DisplayName("Address 3: Primary Contact Name")]
        [MaxLength(100)]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 3: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        [DisplayName("Address 3: Shipping Method")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>the state or province of the third address.</para>
        /// <para>Display Name: Address3: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        [DisplayName("Address3: State/Province")]
        [MaxLength(50)]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        [DisplayName("Address 3: Telephone1")]
        [MaxLength(50)]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        [DisplayName("Address 3: Telephone2")]
        [MaxLength(50)]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 3: Telephone3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        [DisplayName("Address 3: Telephone3")]
        [MaxLength(50)]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 3: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        [DisplayName("Address 3: UPS Zone")]
        [MaxLength(4)]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 3: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        [DisplayName("Address 3: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Anniversary</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        [DisplayName("Anniversary")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
        /// <para>Display Name: Annual Income</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        [DisplayName("Annual Income")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Income (Base)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        [DisplayName("Annual Income (Base)")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's assistant.</para>
        /// <para>Display Name: Assistant</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        [DisplayName("Assistant")]
        [MaxLength(100)]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's assistant.</para>
        /// <para>Display Name: Assistant Phone</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        [DisplayName("Assistant Phone")]
        [MaxLength(50)]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Birthday</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        [DisplayName("Birthday")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second business phone number for this contact.</para>
        /// <para>Display Name: Business Phone 2</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        [DisplayName("Business Phone 2")]
        [MaxLength(50)]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a callback phone number for this contact.</para>
        /// <para>Display Name: Callback Number</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        [DisplayName("Callback Number")]
        [MaxLength(50)]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
        /// <para>Display Name: Children's Names</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        [DisplayName("Children\'s Names")]
        [MaxLength(255)]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company phone of the contact.</para>
        /// <para>Display Name: Company Phone</para>
        /// </summary>
        [AttributeLogicalName("company")]
        [DisplayName("Company Phone")]
        [MaxLength(50)]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("department")]
        [DisplayName("Department")]
        [MaxLength(100)]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the contact.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the contact.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the contact.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's highest level of education for use in segmentation and analysis.</para>
        /// <para>Display Name: Education</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        [DisplayName("Education")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(50)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Identifier for an external user.</para>
        /// <para>Display Name: External User Identifier</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        [DisplayName("External User Identifier")]
        [MaxLength(50)]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Marital Status</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        [DisplayName("Marital Status")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the contact.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        [DisplayName("Gender")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(50)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Has Children</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        [DisplayName("Has Children")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second home phone number for this contact.</para>
        /// <para>Display Name: Home Phone 2</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        [DisplayName("Home Phone 2")]
        [MaxLength(50)]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
        /// <para>Display Name: Back Office Customer</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        [DisplayName("Back Office Customer")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(101)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that directed the contact to your organization.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        [DisplayName("Manager")]
        [MaxLength(100)]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's manager.</para>
        /// <para>Display Name: Manager Phone</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        [DisplayName("Manager Phone")]
        [MaxLength(50)]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master contact for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with a master contact.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the contact.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(50)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's nickname.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(100)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: No. of Children</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        [DisplayName("No. of Children")]
        [Range(0, 1000000000)]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the contact.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the contact.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the contact.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the contact.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent contact.</para>
        /// <para>Display Name: Parent Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        [DisplayName("Company Name")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
        /// <para>Display Name: Spouse/Partner Name</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        [DisplayName("Spouse/Partner Name")]
        [MaxLength(100)]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Suffix</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        [DisplayName("Suffix")]
        [MaxLength(10)]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this contact.</para>
        /// <para>Display Name: Business Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Business Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this contact.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this contact.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contact.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's professional or personal website or blog URL.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Business Card Validated</para>
        /// </summary>
        [AttributeLogicalName("dsn_businesscardvalidated")]
        [DisplayName("Business Card Validated")]
        public bool? dsn_BusinessCardValidated {
            get {
                return GetAttributeValue<bool?>("dsn_businesscardvalidated");
            }
            set {
                SetAttributeValue("dsn_businesscardvalidated", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Export to IMOS</para>
        /// </summary>
        [AttributeLogicalName("dsn_exporttoimos")]
        [DisplayName("Export to IMOS")]
        public bool? dsn_ExporttoIMOS {
            get {
                return GetAttributeValue<bool?>("dsn_exporttoimos");
            }
            set {
                SetAttributeValue("dsn_exporttoimos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last Sedna Activity On</para>
        /// </summary>
        [AttributeLogicalName("dsn_lastsednaactivityon")]
        [DisplayName("Last Sedna Activity On")]
        public DateTime? dsn_LastSednaActivityOn {
            get {
                return GetAttributeValue<DateTime?>("dsn_lastsednaactivityon");
            }
            set {
                SetAttributeValue("dsn_lastsednaactivityon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Request Send By</para>
        /// </summary>
        [AttributeLogicalName("dsn_requestsendby")]
        [DisplayName("Request Send By")]
        public EntityReference dsn_RequestSendBy {
            get {
                return GetAttributeValue<EntityReference>("dsn_requestsendby");
            }
            set {
                SetAttributeValue("dsn_requestsendby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("dsn_salutation")]
        [DisplayName("Salutation")]
        public Contact_dsn_Salutation? dsn_Salutation {
            get {
                return GetOptionSetValue<Contact_dsn_Salutation>("dsn_salutation");
            }
            set {
                SetOptionSetValue("dsn_salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sedna ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_sednaid")]
        [DisplayName("Sedna ID")]
        [MaxLength(100)]
        public string dsn_SednaID {
            get {
                return GetAttributeValue<string>("dsn_sednaid");
            }
            set {
                SetAttributeValue("dsn_sednaid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sent to IMOS</para>
        /// </summary>
        [AttributeLogicalName("dsn_senttoimos")]
        [DisplayName("Sent to IMOS")]
        public DateTime? dsn_SenttoIMOS {
            get {
                return GetAttributeValue<DateTime?>("dsn_senttoimos");
            }
            set {
                SetAttributeValue("dsn_senttoimos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validation Login Token</para>
        /// </summary>
        [AttributeLogicalName("dsn_validationlogintoken")]
        [DisplayName("Validation Login Token")]
        [MaxLength(100)]
        public string dsn_ValidationLoginToken {
            get {
                return GetAttributeValue<string>("dsn_validationlogintoken");
            }
            set {
                SetAttributeValue("dsn_validationlogintoken", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validation Login Token Valid To</para>
        /// </summary>
        [AttributeLogicalName("dsn_validationlogintokenvalidto")]
        [DisplayName("Validation Login Token Valid To")]
        public DateTime? dsn_ValidationLoginTokenValidTo {
            get {
                return GetAttributeValue<DateTime?>("dsn_validationlogintokenvalidto");
            }
            set {
                SetAttributeValue("dsn_validationlogintokenvalidto", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validation Status</para>
        /// </summary>
        [AttributeLogicalName("dsn_validationstatus")]
        [DisplayName("Validation Status")]
        public Contact_dsn_ValidationStatus? dsn_ValidationStatus {
            get {
                return GetOptionSetValue<Contact_dsn_ValidationStatus>("dsn_validationstatus");
            }
            set {
                SetOptionSetValue("dsn_validationstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Validation URL</para>
        /// </summary>
        [AttributeLogicalName("dsn_validationurl")]
        [DisplayName("Validation URL")]
        [MaxLength(500)]
        public string dsn_ValidationUrl {
            get {
                return GetAttributeValue<string>("dsn_validationurl");
            }
            set {
                SetAttributeValue("dsn_validationurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Handling</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandling")]
        [DisplayName("Contract Handling")]
        public EntityReference dsn_contracthandling {
            get {
                return GetAttributeValue<EntityReference>("dsn_contracthandling");
            }
            set {
                SetAttributeValue("dsn_contracthandling", value);
            }
        }
        
        /// <summary>
        /// <para>Use this checkbox as a flag to indicate if this person is a Commissions Contcat to send to IMOS if they are attached to an Account which has a Counterparty Type B.</para>
        /// <para>Display Name: Commissions Contact</para>
        /// </summary>
        [AttributeLogicalName("gs365_commissionscontact")]
        [DisplayName("Commissions Contact")]
        public bool? gs365_CommissionsContact {
            get {
                return GetAttributeValue<bool?>("gs365_commissionscontact");
            }
            set {
                SetAttributeValue("gs365_commissionscontact", value);
            }
        }
        
        [RelationshipSchemaName("Contact_Annotation")]
        public IEnumerable<Annotation> Contact_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Contact_Annotation", null);
            }
            set {
                SetRelatedEntities("Contact_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_AsyncOperations")]
        public IEnumerable<AsyncOperation> Contact_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Contact_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Contact_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public IEnumerable<Email> Contact_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Contact_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Emails")]
        public IEnumerable<Email> Contact_Emails {
            get {
                return GetRelatedEntities<Email>("Contact_Emails", null);
            }
            set {
                SetRelatedEntities("Contact_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_contacts")]
        public BusinessUnit business_unit_contacts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntity("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_activity_parties")]
        public IEnumerable<ActivityParty> contact_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntities("contact_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("contact_owning_user")]
        public SystemUser contact_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("contact_owning_user", null);
            }
            set {
                SetRelatedEntity("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_account_dsn_KYCContact_contact")]
        public IEnumerable<Account> dsn_account_dsn_KYCContact_contact {
            get {
                return GetRelatedEntities<Account>("dsn_account_dsn_KYCContact_contact", null);
            }
            set {
                SetRelatedEntities("dsn_account_dsn_KYCContact_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contact_account_cpcontactid")]
        public IEnumerable<Account> dsn_contact_account_cpcontactid {
            get {
                return GetRelatedEntities<Account>("dsn_contact_account_cpcontactid", null);
            }
            set {
                SetRelatedEntities("dsn_contact_account_cpcontactid", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_requestsendby")]
        [RelationshipSchemaName("dsn_systemuser_contact_RequestSendBy")]
        public SystemUser dsn_systemuser_contact_RequestSendBy {
            get {
                return GetRelatedEntity<SystemUser>("dsn_systemuser_contact_RequestSendBy", null);
            }
            set {
                SetRelatedEntity("dsn_systemuser_contact_RequestSendBy", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public SystemUser lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public SystemUser lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public SystemUser lk_contactbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public SystemUser lk_contactbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_contacts")]
        public SystemUser system_user_contacts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_contacts", null);
            }
            set {
                SetRelatedEntity("system_user_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_contacts")]
        public Team team_contacts {
            get {
                return GetRelatedEntity<Team>("team_contacts", null);
            }
            set {
                SetRelatedEntity("team_contacts", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that is delivered using email protocols.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [EntityLogicalName("email")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Email : ExtendedEntity<EmailState, Email_StatusCode> {
        
        public const string EntityLogicalName = "email";
        
        public const int EntityTypeCode = 4202;
        
        public Email() : 
                base(EntityLogicalName) {
        }
        
        public Email(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email activity.</para>
        /// <para>Display Name: Email Message</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Email Message")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>The Entity that Accepted the Email</para>
        /// <para>Display Name: Accepting Entity</para>
        /// </summary>
        [AttributeLogicalName("acceptingentityid")]
        [DisplayName("Accepting Entity")]
        public EntityReference AcceptingEntityId {
            get {
                return GetAttributeValue<EntityReference>("acceptingentityid");
            }
            set {
                SetAttributeValue("acceptingentityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent creating and sending the email. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the umber of attachments of the email message.</para>
        /// <para>Display Name: Attachment Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentcount")]
        [DisplayName("Attachment Count")]
        [Range(0, 2147483647)]
        public int? AttachmentCount {
            get {
                return GetAttributeValue<int?>("attachmentcount");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email attachment has been viewed.</para>
        /// <para>Display Name: Attachment Open Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentopencount")]
        [DisplayName("Attachment Open Count")]
        [Range(0, 2147483647)]
        public int? AttachmentOpenCount {
            get {
                return GetAttributeValue<int?>("attachmentopencount");
            }
            set {
                SetAttributeValue("attachmentopencount", value);
            }
        }
        
        /// <summary>
        /// <para>Hash of base of conversation index.</para>
        /// <para>Display Name: Conversation Index (Hash)</para>
        /// </summary>
        [AttributeLogicalName("baseconversationindexhash")]
        [DisplayName("Conversation Index (Hash)")]
        [Range(-2147483648, 2147483647)]
        public int? BaseConversationIndexHash {
            get {
                return GetAttributeValue<int?>("baseconversationindexhash");
            }
            set {
                SetAttributeValue("baseconversationindexhash", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that are included on the email distribution, but are not displayed to other recipients.</para>
        /// <para>Display Name: Bcc</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("Bcc")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that should be copied on the email.</para>
        /// <para>Display Name: Cc</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("Cc")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the body is compressed.</para>
        /// <para>Display Name: Compression</para>
        /// </summary>
        [AttributeLogicalName("compressed")]
        [DisplayName("Compression")]
        public bool? Compressed {
            get {
                return GetAttributeValue<bool?>("compressed");
            }
        }
        
        /// <summary>
        /// <para>Identifier for all the email responses for this conversation.</para>
        /// <para>Display Name: Conversation Index</para>
        /// </summary>
        [AttributeLogicalName("conversationindex")]
        [DisplayName("Conversation Index")]
        [MaxLength(2048)]
        public string ConversationIndex {
            get {
                return GetAttributeValue<string>("conversationindex");
            }
        }
        
        /// <summary>
        /// <para>Conversation Tracking Id.</para>
        /// <para>Display Name: Conversation Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("conversationtrackingid")]
        [DisplayName("Conversation Tracking Id")]
        public Guid? ConversationTrackingId {
            get {
                return GetAttributeValue<Guid?>("conversationtrackingid");
            }
            set {
                SetAttributeValue("conversationtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Correlated Activity Id</para>
        /// <para>Display Name: Correlated Activity Id</para>
        /// </summary>
        [AttributeLogicalName("correlatedactivityid")]
        [DisplayName("Correlated Activity Id")]
        public EntityReference CorrelatedActivityId {
            get {
                return GetAttributeValue<EntityReference>("correlatedactivityid");
            }
            set {
                SetAttributeValue("correlatedactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how an email is matched to an existing email in Microsoft Dynamics 365. For system use only.</para>
        /// <para>Display Name: Correlation Method</para>
        /// </summary>
        [AttributeLogicalName("correlationmethod")]
        [DisplayName("Correlation Method")]
        public Email_CorrelationMethod? CorrelationMethod {
            get {
                return GetOptionSetValue<Email_CorrelationMethod>("correlationmethod");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected date and time when email will be sent.</para>
        /// <para>Display Name: Send Later</para>
        /// </summary>
        [AttributeLogicalName("delayedemailsendtime")]
        [DisplayName("Send Later")]
        public DateTime? DelayedEmailSendTime {
            get {
                return GetAttributeValue<DateTime?>("delayedemailsendtime");
            }
            set {
                SetAttributeValue("delayedemailsendtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.</para>
        /// <para>Display Name: No. of Delivery Attempts</para>
        /// </summary>
        [AttributeLogicalName("deliveryattempts")]
        [DisplayName("No. of Delivery Attempts")]
        [Range(0, 1000000000)]
        public int? DeliveryAttempts {
            get {
                return GetAttributeValue<int?>("deliveryattempts");
            }
            set {
                SetAttributeValue("deliveryattempts", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority of delivery of the email to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the sender should receive confirmation that the email was delivered.</para>
        /// <para>Display Name: Delivery Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("deliveryreceiptrequested")]
        [DisplayName("Delivery Receipt Requested")]
        public bool? DeliveryReceiptRequested {
            get {
                return GetAttributeValue<bool?>("deliveryreceiptrequested");
            }
            set {
                SetAttributeValue("deliveryreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>Type the greeting and message text of the email.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the email as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when an email reminder expires.</para>
        /// <para>Display Name: Email Reminder Expiry Time</para>
        /// </summary>
        [AttributeLogicalName("emailreminderexpirytime")]
        [DisplayName("Email Reminder Expiry Time")]
        public DateTime? EmailReminderExpiryTime {
            get {
                return GetAttributeValue<DateTime?>("emailreminderexpirytime");
            }
            set {
                SetAttributeValue("emailreminderexpirytime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the email reminder.</para>
        /// <para>Display Name: Email Reminder Status</para>
        /// </summary>
        [AttributeLogicalName("emailreminderstatus")]
        [DisplayName("Email Reminder Status")]
        public Email_EmailReminderStatus? EmailReminderStatus {
            get {
                return GetOptionSetValue<Email_EmailReminderStatus>("emailreminderstatus");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Email Reminder Text</para>
        /// </summary>
        [AttributeLogicalName("emailremindertext")]
        [DisplayName("Email Reminder Text")]
        [MaxLength(1250)]
        public string EmailReminderText {
            get {
                return GetAttributeValue<string>("emailremindertext");
            }
            set {
                SetAttributeValue("emailremindertext", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of the email reminder.</para>
        /// <para>Display Name: Email Reminder Type</para>
        /// </summary>
        [AttributeLogicalName("emailremindertype")]
        [DisplayName("Email Reminder Type")]
        public Email_EmailReminderType? EmailReminderType {
            get {
                return GetOptionSetValue<Email_EmailReminderType>("emailremindertype");
            }
            set {
                SetOptionSetValue("emailremindertype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the sender of the email.</para>
        /// <para>Display Name: Sender</para>
        /// </summary>
        [AttributeLogicalName("emailsender")]
        [DisplayName("Sender")]
        public EntityReference EmailSender {
            get {
                return GetAttributeValue<EntityReference>("emailsender");
            }
        }
        
        /// <summary>
        /// <para>Email Tracking Id.</para>
        /// <para>Display Name: Email Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("emailtrackingid")]
        [DisplayName("Email Tracking Id")]
        public Guid? EmailTrackingId {
            get {
                return GetAttributeValue<Guid?>("emailtrackingid");
            }
            set {
                SetAttributeValue("emailtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.</para>
        /// <para>Display Name: Following</para>
        /// </summary>
        [AttributeLogicalName("followemailuserpreference")]
        [DisplayName("Following")]
        public bool? FollowEmailUserPreference {
            get {
                return GetAttributeValue<bool?>("followemailuserpreference");
            }
            set {
                SetAttributeValue("followemailuserpreference", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ID of the email message that this email activity is a response to.</para>
        /// <para>Display Name: In Reply To Message</para>
        /// </summary>
        [AttributeLogicalName("inreplyto")]
        [DisplayName("In Reply To Message")]
        [MaxLength(320)]
        public string InReplyTo {
            get {
                return GetAttributeValue<string>("inreplyto");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the email activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.</para>
        /// <para>Display Name: Followed</para>
        /// </summary>
        [AttributeLogicalName("isemailfollowed")]
        [DisplayName("Followed")]
        public bool? IsEmailFollowed {
            get {
                return GetAttributeValue<bool?>("isemailfollowed");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email Reminder is Set.</para>
        /// <para>Display Name: Reminder Set</para>
        /// </summary>
        [AttributeLogicalName("isemailreminderset")]
        [DisplayName("Reminder Set")]
        public bool? IsEmailReminderSet {
            get {
                return GetAttributeValue<bool?>("isemailreminderset");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Indication if the email was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the latest date and time when email was opened.</para>
        /// <para>Display Name: Last Opened Time</para>
        /// </summary>
        [AttributeLogicalName("lastopenedtime")]
        [DisplayName("Last Opened Time")]
        public DateTime? LastOpenedTime {
            get {
                return GetAttributeValue<DateTime?>("lastopenedtime");
            }
            set {
                SetAttributeValue("lastopenedtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times a link in an email has been clicked.</para>
        /// <para>Display Name: Links Clicked Count</para>
        /// </summary>
        [AttributeLogicalName("linksclickedcount")]
        [DisplayName("Links Clicked Count")]
        [Range(0, 2147483647)]
        public int? LinksClickedCount {
            get {
                return GetAttributeValue<int?>("linksclickedcount");
            }
            set {
                SetAttributeValue("linksclickedcount", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email message. Used only for email that is received.</para>
        /// <para>Display Name: Message ID</para>
        /// </summary>
        [AttributeLogicalName("messageid")]
        [DisplayName("Message ID")]
        [MaxLength(320)]
        public string MessageId {
            get {
                return GetAttributeValue<string>("messageid");
            }
            set {
                SetAttributeValue("messageid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Message ID Dup Check</para>
        /// </summary>
        [AttributeLogicalName("messageiddupcheck")]
        [DisplayName("Message ID Dup Check")]
        public Guid? MessageIdDupCheck {
            get {
                return GetAttributeValue<Guid?>("messageiddupcheck");
            }
            set {
                SetAttributeValue("messageiddupcheck", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the email message data.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.</para>
        /// <para>Display Name: Notifications</para>
        /// </summary>
        [AttributeLogicalName("notifications")]
        [DisplayName("Notifications")]
        public Email_Notifications? Notifications {
            get {
                return GetOptionSetValue<Email_Notifications>("notifications");
            }
            set {
                SetOptionSetValue("notifications", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email has been opened.</para>
        /// <para>Display Name: Open Count</para>
        /// </summary>
        [AttributeLogicalName("opencount")]
        [DisplayName("Open Count")]
        [Range(0, 2147483647)]
        public int? OpenCount {
            get {
                return GetAttributeValue<int?>("opencount");
            }
            set {
                SetAttributeValue("opencount", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the email activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the email activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the email activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the activity that the email is associated with.</para>
        /// <para>Display Name: Parent Activity Id</para>
        /// </summary>
        [AttributeLogicalName("parentactivityid")]
        [DisplayName("Parent Activity Id")]
        public EntityReference ParentActivityId {
            get {
                return GetAttributeValue<EntityReference>("parentactivityid");
            }
            set {
                SetAttributeValue("parentactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay email processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeemailprocessinguntil")]
        [DisplayName("Delay email processing until")]
        public DateTime? PostponeEmailProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeemailprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Email_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Email_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that a read receipt is requested.</para>
        /// <para>Display Name: Read Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("readreceiptrequested")]
        [DisplayName("Read Receipt Requested")]
        public bool? ReadReceiptRequested {
            get {
                return GetAttributeValue<bool?>("readreceiptrequested");
            }
            set {
                SetAttributeValue("readreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>The Mailbox that Received the Email.</para>
        /// <para>Display Name: Receiving Mailbox</para>
        /// </summary>
        [AttributeLogicalName("receivingmailboxid")]
        [DisplayName("Receiving Mailbox")]
        public EntityReference ReceivingMailboxId {
            get {
                return GetAttributeValue<EntityReference>("receivingmailboxid");
            }
            set {
                SetAttributeValue("receivingmailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the email relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Reminder Action Card Id.</para>
        /// <para>Display Name: Reminder Action Card Id.</para>
        /// </summary>
        [AttributeLogicalName("reminderactioncardid")]
        [DisplayName("Reminder Action Card Id.")]
        public Guid? ReminderActionCardId {
            get {
                return GetAttributeValue<Guid?>("reminderactioncardid");
            }
            set {
                SetAttributeValue("reminderactioncardid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of replies received for an email.</para>
        /// <para>Display Name: Reply Count</para>
        /// </summary>
        [AttributeLogicalName("replycount")]
        [DisplayName("Reply Count")]
        [Range(0, 2147483647)]
        public int? ReplyCount {
            get {
                return GetAttributeValue<int?>("replycount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Reserved for internal use</para>
        /// </summary>
        [AttributeLogicalName("reservedforinternaluse")]
        [DisplayName("Reserved for internal use")]
        public string ReservedForInternalUse {
            get {
                return GetAttributeValue<string>("reservedforinternaluse");
            }
            set {
                SetAttributeValue("reservedforinternaluse", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the email record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the email activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("sender")]
        [DisplayName("From")]
        [MaxLength(250)]
        public string Sender {
            get {
                return GetAttributeValue<string>("sender");
            }
            set {
                SetAttributeValue("sender", value);
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Shows the parent account of the sender of the email.</para>
        /// <para>Display Name: Senders Account</para>
        /// </summary>
        [AttributeLogicalName("sendersaccount")]
        [DisplayName("Senders Account")]
        public EntityReference SendersAccount {
            get {
                return GetAttributeValue<EntityReference>("sendersaccount");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time that the email was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public EmailState? StateCode {
            get {
                return GetOptionSetValue<EmailState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the email's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Email_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Email_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.</para>
        /// <para>Display Name: Submitted By</para>
        /// </summary>
        [AttributeLogicalName("submittedby")]
        [DisplayName("Submitted By")]
        [MaxLength(250)]
        public string SubmittedBy {
            get {
                return GetAttributeValue<string>("submittedby");
            }
            set {
                SetAttributeValue("submittedby", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. ID for template used in email.</para>
        /// <para>Display Name: ID for template used.</para>
        /// </summary>
        [AttributeLogicalName("templateid")]
        [DisplayName("ID for template used.")]
        public EntityReference TemplateId {
            get {
                return GetAttributeValue<EntityReference>("templateid");
            }
            set {
                SetAttributeValue("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, queue, or user recipients for the email.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the email addresses corresponding to the recipients.</para>
        /// <para>Display Name: To Recipients</para>
        /// </summary>
        [AttributeLogicalName("torecipients")]
        [DisplayName("To Recipients")]
        [MaxLength(500)]
        public string ToRecipients {
            get {
                return GetAttributeValue<string>("torecipients");
            }
            set {
                SetAttributeValue("torecipients", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Tracking Token</para>
        /// </summary>
        [AttributeLogicalName("trackingtoken")]
        [DisplayName("Tracking Token")]
        [MaxLength(50)]
        public string TrackingToken {
            get {
                return GetAttributeValue<string>("trackingtoken");
            }
            set {
                SetAttributeValue("trackingtoken", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the email message.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public Account Account_Email_EmailSender {
            get {
                return GetRelatedEntity<Account>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Account_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("sendersaccount")]
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public Account Account_Email_SendersAccount {
            get {
                return GetRelatedEntity<Account>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntity("Account_Email_SendersAccount", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Emails")]
        public Account Account_Emails {
            get {
                return GetRelatedEntity<Account>("Account_Emails", null);
            }
            set {
                SetRelatedEntity("Account_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("AsyncOperation_Emails")]
        public AsyncOperation AsyncOperation_Emails {
            get {
                return GetRelatedEntity<AsyncOperation>("AsyncOperation_Emails", null);
            }
            set {
                SetRelatedEntity("AsyncOperation_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public Contact Contact_Email_EmailSender {
            get {
                return GetRelatedEntity<Contact>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Contact_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Emails")]
        public Contact Contact_Emails {
            get {
                return GetRelatedEntity<Contact>("Contact_Emails", null);
            }
            set {
                SetRelatedEntity("Contact_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_Annotation")]
        public IEnumerable<Annotation> Email_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Email_Annotation", null);
            }
            set {
                SetRelatedEntities("Email_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_AsyncOperations")]
        public IEnumerable<AsyncOperation> Email_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Email_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Email_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("templateid")]
        [RelationshipSchemaName("Email_EmailTemplate")]
        public Template Email_EmailTemplate {
            get {
                return GetRelatedEntity<Template>("Email_EmailTemplate", null);
            }
            set {
                SetRelatedEntity("Email_EmailTemplate", null, value);
            }
        }
        
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntities<Email>("email_email_CorrelatedActivityId", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_CorrelatedActivityId", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_parentactivityid {
            get {
                return GetRelatedEntities<Email>("email_email_parentactivityid", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_parentactivityid", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("correlatedactivityid")]
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referencing)]
        public Email Referencingemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntity<Email>("email_email_CorrelatedActivityId", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_CorrelatedActivityId", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentactivityid")]
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referencing)]
        public Email Referencingemail_email_parentactivityid {
            get {
                return GetRelatedEntity<Email>("email_email_parentactivityid", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_parentactivityid", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public SystemUser SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_email_activities")]
        public BusinessUnit business_unit_email_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_email_activities", null, value);
            }
        }
        
        [AttributeLogicalName("acceptingentityid")]
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public SystemUser email_acceptingentity_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntity("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("email_activity_parties")]
        public IEnumerable<ActivityParty> email_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("email_activity_parties", null);
            }
            set {
                SetRelatedEntities("email_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_email_createdby")]
        public SystemUser lk_email_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public SystemUser lk_email_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_email_modifiedby")]
        public SystemUser lk_email_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public SystemUser lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_email")]
        public Team team_email {
            get {
                return GetRelatedEntity<Team>("team_email", null);
            }
            set {
                SetRelatedEntity("team_email", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_email")]
        public SystemUser user_email {
            get {
                return GetRelatedEntity<SystemUser>("user_email", null);
            }
            set {
                SetRelatedEntity("user_email", null, value);
            }
        }
        
        public static Email Retrieve(IOrganizationService service, Guid id, params Expression<Func<Email,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Top level of the Microsoft Dynamics 365 business hierarchy. The organization can be a specific business, holding company, or corporation.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [EntityLogicalName("organization")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Organization : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "organization";
        
        public const int EntityTypeCode = 1019;
        
        public Organization() : 
                base(EntityLogicalName) {
        }
        
        public Organization(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("organizationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("organizationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
            set {
                SetId("organizationid", value);
            }
        }
        
        /// <summary>
        /// <para>ACI Web Endpoint URL.</para>
        /// <para>Display Name: ACI Tenant URL.</para>
        /// </summary>
        [AttributeLogicalName("aciwebendpointurl")]
        [DisplayName("ACI Tenant URL.")]
        [MaxLength(500)]
        public string ACIWebEndpointUrl {
            get {
                return GetAttributeValue<string>("aciwebendpointurl");
            }
            set {
                SetAttributeValue("aciwebendpointurl", value);
            }
        }
        
        /// <summary>
        /// <para>AM designator to use throughout Microsoft Dynamics CRM.</para>
        /// <para>Display Name: AM Designator</para>
        /// </summary>
        [AttributeLogicalName("amdesignator")]
        [DisplayName("AM Designator")]
        [MaxLength(25)]
        public string AMDesignator {
            get {
                return GetAttributeValue<string>("amdesignator");
            }
            set {
                SetAttributeValue("amdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the template to be used for acknowledgement when a user unsubscribes.</para>
        /// <para>Display Name: Acknowledgement Template</para>
        /// </summary>
        [AttributeLogicalName("acknowledgementtemplateid")]
        [DisplayName("Acknowledgement Template")]
        public EntityReference AcknowledgementTemplateId {
            get {
                return GetAttributeValue<EntityReference>("acknowledgementtemplateid");
            }
            set {
                SetAttributeValue("acknowledgementtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether filtering activity based on entity in app.</para>
        /// <para>Display Name: Enable Rich Editing Experience for Appointment</para>
        /// </summary>
        [AttributeLogicalName("activitytypefilter")]
        [DisplayName("Enable Rich Editing Experience for Appointment")]
        public bool? ActivityTypeFilter {
            get {
                return GetAttributeValue<bool?>("activitytypefilter");
            }
            set {
                SetAttributeValue("activitytypefilter", value);
            }
        }
        
        /// <summary>
        /// <para>Whether to show only activities configured in this app or all activities in the 'New activity' button.</para>
        /// <para>Display Name: Show only activities configured in the app when accessing 'New activity' button</para>
        /// </summary>
        [AttributeLogicalName("activitytypefilterv2")]
        [DisplayName("Show only activities configured in the app when accessing \'New activity\' button")]
        public bool? ActivityTypeFilterV2 {
            get {
                return GetAttributeValue<bool?>("activitytypefilterv2");
            }
            set {
                SetAttributeValue("activitytypefilterv2", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the display column options on a view in model-driven apps is enabled</para>
        /// <para>Display Name: Advanced column editor enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedcolumneditorenabled")]
        [DisplayName("Advanced column editor enabled")]
        public bool? AdvancedColumnEditorEnabled {
            get {
                return GetAttributeValue<bool?>("advancedcolumneditorenabled");
            }
            set {
                SetAttributeValue("advancedcolumneditorenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the advanced column filtering in a view in model-driven apps is enabled</para>
        /// <para>Display Name: Advanced column filtering enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedcolumnfilteringenabled")]
        [DisplayName("Advanced column filtering enabled")]
        public bool? AdvancedColumnFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("advancedcolumnfilteringenabled");
            }
            set {
                SetAttributeValue("advancedcolumnfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the advanced filtering on all tables in a model-driven app is enabled</para>
        /// <para>Display Name: Advanced filtering enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedfilteringenabled")]
        [DisplayName("Advanced filtering enabled")]
        public bool? AdvancedFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("advancedfilteringenabled");
            }
            set {
                SetAttributeValue("advancedfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the Advanced Lookup feature is enabled for lookup controls</para>
        /// <para>Display Name: Advanced lookup enabled</para>
        /// </summary>
        [AttributeLogicalName("advancedlookupenabled")]
        [DisplayName("Advanced lookup enabled")]
        public bool? AdvancedLookupEnabled {
            get {
                return GetAttributeValue<bool?>("advancedlookupenabled");
            }
            set {
                SetAttributeValue("advancedlookupenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.</para>
        /// <para>Display Name: Allow Address Book Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowaddressbooksyncs")]
        [DisplayName("Allow Address Book Synchronization")]
        public bool? AllowAddressBookSyncs {
            get {
                return GetAttributeValue<bool?>("allowaddressbooksyncs");
            }
            set {
                SetAttributeValue("allowaddressbooksyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether all application users are allowed to access the environment</para>
        /// <para>Display Name: Allow All Application Users Access.</para>
        /// </summary>
        [AttributeLogicalName("allowapplicationuseraccess")]
        [DisplayName("Allow All Application Users Access.")]
        public bool? AllowApplicationUserAccess {
            get {
                return GetAttributeValue<bool?>("allowapplicationuseraccess");
            }
            set {
                SetAttributeValue("allowapplicationuseraccess", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic response creation is allowed.</para>
        /// <para>Display Name: Allow Automatic Response Creation</para>
        /// </summary>
        [AttributeLogicalName("allowautoresponsecreation")]
        [DisplayName("Allow Automatic Response Creation")]
        public bool? AllowAutoResponseCreation {
            get {
                return GetAttributeValue<bool?>("allowautoresponsecreation");
            }
            set {
                SetAttributeValue("allowautoresponsecreation", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic unsubscribe is allowed.</para>
        /// <para>Display Name: Allow Automatic Unsubscribe</para>
        /// </summary>
        [AttributeLogicalName("allowautounsubscribe")]
        [DisplayName("Allow Automatic Unsubscribe")]
        public bool? AllowAutoUnsubscribe {
            get {
                return GetAttributeValue<bool?>("allowautounsubscribe");
            }
            set {
                SetAttributeValue("allowautounsubscribe", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether automatic unsubscribe acknowledgement email is allowed to send.</para>
        /// <para>Display Name: Allow Automatic Unsubscribe Acknowledgement</para>
        /// </summary>
        [AttributeLogicalName("allowautounsubscribeacknowledgement")]
        [DisplayName("Allow Automatic Unsubscribe Acknowledgement")]
        public bool? AllowAutoUnsubscribeAcknowledgement {
            get {
                return GetAttributeValue<bool?>("allowautounsubscribeacknowledgement");
            }
            set {
                SetAttributeValue("allowautounsubscribeacknowledgement", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Outlook Client message bar advertisement is allowed.</para>
        /// <para>Display Name: Allow Outlook Client Message Bar Advertisement</para>
        /// </summary>
        [AttributeLogicalName("allowclientmessagebarad")]
        [DisplayName("Allow Outlook Client Message Bar Advertisement")]
        public bool? AllowClientMessageBarAd {
            get {
                return GetAttributeValue<bool?>("allowclientmessagebarad");
            }
            set {
                SetAttributeValue("allowclientmessagebarad", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether auditing of changes to entity is allowed when no attributes have changed.</para>
        /// <para>Display Name: Allow Entity Level Auditing</para>
        /// </summary>
        [AttributeLogicalName("allowentityonlyaudit")]
        [DisplayName("Allow Entity Level Auditing")]
        public bool? AllowEntityOnlyAudit {
            get {
                return GetAttributeValue<bool?>("allowentityonlyaudit");
            }
            set {
                SetAttributeValue("allowentityonlyaudit", value);
            }
        }
        
        /// <summary>
        /// <para>Enables ends-with searches in grids with the use of a leading wildcard on all tables in the environment</para>
        /// <para>Display Name: Allow Leading Wildcards In Grid Search</para>
        /// </summary>
        [AttributeLogicalName("allowleadingwildcardsingridsearch")]
        [DisplayName("Allow Leading Wildcards In Grid Search")]
        public bool? AllowLeadingWildcardsInGridSearch {
            get {
                return GetAttributeValue<bool?>("allowleadingwildcardsingridsearch");
            }
            set {
                SetAttributeValue("allowleadingwildcardsingridsearch", value);
            }
        }
        
        /// <summary>
        /// <para>Enables ends-with searches in grids with the use of a leading wildcard on all tables in the environment</para>
        /// <para>Display Name: Allow Leading Wildcards In Quick Find</para>
        /// </summary>
        [AttributeLogicalName("allowleadingwildcardsinquickfind")]
        [DisplayName("Allow Leading Wildcards In Quick Find")]
        [Range(0, 100)]
        public int? AllowLeadingWildcardsInQuickFind {
            get {
                return GetAttributeValue<int?>("allowleadingwildcardsinquickfind");
            }
            set {
                SetAttributeValue("allowleadingwildcardsinquickfind", value);
            }
        }
        
        /// <summary>
        /// <para>Enable access to legacy web client UI</para>
        /// <para>Display Name: Enable access to legacy web client UI</para>
        /// </summary>
        [AttributeLogicalName("allowlegacyclientexperience")]
        [DisplayName("Enable access to legacy web client UI")]
        public bool? AllowLegacyClientExperience {
            get {
                return GetAttributeValue<bool?>("allowlegacyclientexperience");
            }
            set {
                SetAttributeValue("allowlegacyclientexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Enable embedding of certain legacy dialogs in Unified Interface browser client</para>
        /// <para>Display Name: Enable embedding of certain legacy dialogs in Unified Interface browser client</para>
        /// </summary>
        [AttributeLogicalName("allowlegacydialogsembedding")]
        [DisplayName("Enable embedding of certain legacy dialogs in Unified Interface browser client")]
        public bool? AllowLegacyDialogsEmbedding {
            get {
                return GetAttributeValue<bool?>("allowlegacydialogsembedding");
            }
            set {
                SetAttributeValue("allowlegacydialogsembedding", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether marketing emails execution is allowed.</para>
        /// <para>Display Name: Allow Marketing Email Execution</para>
        /// </summary>
        [AttributeLogicalName("allowmarketingemailexecution")]
        [DisplayName("Allow Marketing Email Execution")]
        public bool? AllowMarketingEmailExecution {
            get {
                return GetAttributeValue<bool?>("allowmarketingemailexecution");
            }
            set {
                SetAttributeValue("allowmarketingemailexecution", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether Microsoft Trusted Service Tags are allowed</para>
        /// <para>Display Name: Allow Microsoft Trusted Service Tags</para>
        /// </summary>
        [AttributeLogicalName("allowmicrosofttrustedservicetags")]
        [DisplayName("Allow Microsoft Trusted Service Tags")]
        public bool? AllowMicrosoftTrustedServiceTags {
            get {
                return GetAttributeValue<bool?>("allowmicrosofttrustedservicetags");
            }
            set {
                SetAttributeValue("allowmicrosofttrustedservicetags", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.</para>
        /// <para>Display Name: Allow Offline Scheduled Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowofflinescheduledsyncs")]
        [DisplayName("Allow Offline Scheduled Synchronization")]
        public bool? AllowOfflineScheduledSyncs {
            get {
                return GetAttributeValue<bool?>("allowofflinescheduledsyncs");
            }
            set {
                SetAttributeValue("allowofflinescheduledsyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether scheduled synchronizations to Outlook are allowed.</para>
        /// <para>Display Name: Allow Scheduled Synchronization</para>
        /// </summary>
        [AttributeLogicalName("allowoutlookscheduledsyncs")]
        [DisplayName("Allow Scheduled Synchronization")]
        public bool? AllowOutlookScheduledSyncs {
            get {
                return GetAttributeValue<bool?>("allowoutlookscheduledsyncs");
            }
            set {
                SetAttributeValue("allowoutlookscheduledsyncs", value);
            }
        }
        
        /// <summary>
        /// <para>Control whether the organization Allow Redirect Legacy Admin Settings To Modern UI</para>
        /// <para>Display Name: Allow Redirect Legacy Admin Settings To Modern UI</para>
        /// </summary>
        [AttributeLogicalName("allowredirectadminsettingstomodernui")]
        [DisplayName("Allow Redirect Legacy Admin Settings To Modern UI")]
        public bool? AllowRedirectAdminSettingsToModernUI {
            get {
                return GetAttributeValue<bool?>("allowredirectadminsettingstomodernui");
            }
            set {
                SetAttributeValue("allowredirectadminsettingstomodernui", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).</para>
        /// <para>Display Name: Allow Unresolved Address Email Send</para>
        /// </summary>
        [AttributeLogicalName("allowunresolvedpartiesonemailsend")]
        [DisplayName("Allow Unresolved Address Email Send")]
        public bool? AllowUnresolvedPartiesOnEmailSend {
            get {
                return GetAttributeValue<bool?>("allowunresolvedpartiesonemailsend");
            }
            set {
                SetAttributeValue("allowunresolvedpartiesonemailsend", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether individuals can select their form mode preference in their personal options.</para>
        /// <para>Display Name: Allow User Form Mode Preference</para>
        /// </summary>
        [AttributeLogicalName("allowuserformmodepreference")]
        [DisplayName("Allow User Form Mode Preference")]
        public bool? AllowUserFormModePreference {
            get {
                return GetAttributeValue<bool?>("allowuserformmodepreference");
            }
            set {
                SetAttributeValue("allowuserformmodepreference", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if allow end users to hide system views in model-driven apps is enabled</para>
        /// <para>Display Name: Allow users hiding system views</para>
        /// </summary>
        [AttributeLogicalName("allowusershidingsystemviews")]
        [DisplayName("Allow users hiding system views")]
        public bool? AllowUsersHidingSystemViews {
            get {
                return GetAttributeValue<bool?>("allowusershidingsystemviews");
            }
            set {
                SetAttributeValue("allowusershidingsystemviews", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the showing tablet application notification bars in a browser is allowed.</para>
        /// <para>Display Name: Allow the showing tablet application notification bars in a browser.</para>
        /// </summary>
        [AttributeLogicalName("allowusersseeappdownloadmessage")]
        [DisplayName("Allow the showing tablet application notification bars in a browser.")]
        public bool? AllowUsersSeeAppdownloadMessage {
            get {
                return GetAttributeValue<bool?>("allowusersseeappdownloadmessage");
            }
            set {
                SetAttributeValue("allowusersseeappdownloadmessage", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.</para>
        /// <para>Display Name: Allow Export to Excel</para>
        /// </summary>
        [AttributeLogicalName("allowwebexcelexport")]
        [DisplayName("Allow Export to Excel")]
        public bool? AllowWebExcelExport {
            get {
                return GetAttributeValue<bool?>("allowwebexcelexport");
            }
            set {
                SetAttributeValue("allowwebexcelexport", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies the range of IP addresses that are in allow list for the firewall.</para>
        /// <para>Display Name: List of IP Ranges to be allowed by the firewall rule</para>
        /// </summary>
        [AttributeLogicalName("allowediprangeforfirewall")]
        [DisplayName("List of IP Ranges to be allowed by the firewall rule")]
        [MaxLength(4000)]
        public string AllowedIpRangeForFirewall {
            get {
                return GetAttributeValue<string>("allowediprangeforfirewall");
            }
            set {
                SetAttributeValue("allowediprangeforfirewall", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the appDesignerExperience is enabled for the organization.</para>
        /// <para>Display Name: Enable App Designer Experience for this Organization</para>
        /// </summary>
        [AttributeLogicalName("appdesignerexperienceenabled")]
        [DisplayName("Enable App Designer Experience for this Organization")]
        public bool? AppDesignerExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("appdesignerexperienceenabled");
            }
            set {
                SetAttributeValue("appdesignerexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether rich editing experience for Appointment is enabled.</para>
        /// <para>Display Name: Enable Rich Editing Experience for Appointment</para>
        /// </summary>
        [AttributeLogicalName("appointmentricheditorexperience")]
        [DisplayName("Enable Rich Editing Experience for Appointment")]
        public bool? AppointmentRichEditorExperience {
            get {
                return GetAttributeValue<bool?>("appointmentricheditorexperience");
            }
            set {
                SetAttributeValue("appointmentricheditorexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether Teams meeting experience for Appointment is enabled.</para>
        /// <para>Display Name: Enable teams Meeting experience for appointment</para>
        /// </summary>
        [AttributeLogicalName("appointmentwithteamsmeeting")]
        [DisplayName("Enable teams Meeting experience for appointment")]
        public bool? AppointmentWithTeamsMeeting {
            get {
                return GetAttributeValue<bool?>("appointmentwithteamsmeeting");
            }
            set {
                SetAttributeValue("appointmentwithteamsmeeting", value);
            }
        }
        
        /// <summary>
        /// <para>Whether Teams meetings experience for appointments is enabled.</para>
        /// <para>Display Name: Enable Teams meetings for appointments</para>
        /// </summary>
        [AttributeLogicalName("appointmentwithteamsmeetingv2")]
        [DisplayName("Enable Teams meetings for appointments")]
        public bool? AppointmentWithTeamsMeetingV2 {
            get {
                return GetAttributeValue<bool?>("appointmentwithteamsmeetingv2");
            }
            set {
                SetAttributeValue("appointmentwithteamsmeetingv2", value);
            }
        }
        
        /// <summary>
        /// <para>Audit Retention Period settings stored in Organization Database.</para>
        /// <para>Display Name: Audit Retention Period Settings</para>
        /// </summary>
        [AttributeLogicalName("auditretentionperiod")]
        [DisplayName("Audit Retention Period Settings")]
        [Range(30, 2147483647)]
        public int? AuditRetentionPeriod {
            get {
                return GetAttributeValue<int?>("auditretentionperiod");
            }
            set {
                SetAttributeValue("auditretentionperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Audit Retention Period settings stored in Organization Database.</para>
        /// <para>Display Name: Audit Retention Period Settings</para>
        /// </summary>
        [AttributeLogicalName("auditretentionperiodv2")]
        [DisplayName("Audit Retention Period Settings")]
        [Range(-2147483648, 2147483647)]
        public int? AuditRetentionPeriodV2 {
            get {
                return GetAttributeValue<int?>("auditretentionperiodv2");
            }
            set {
                SetAttributeValue("auditretentionperiodv2", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to auto apply the default customer entitlement on case creation.</para>
        /// <para>Display Name: Auto Apply Default Entitlement on Case Create</para>
        /// </summary>
        [AttributeLogicalName("autoapplydefaultoncasecreate")]
        [DisplayName("Auto Apply Default Entitlement on Case Create")]
        public bool? AutoApplyDefaultonCaseCreate {
            get {
                return GetAttributeValue<bool?>("autoapplydefaultoncasecreate");
            }
            set {
                SetAttributeValue("autoapplydefaultoncasecreate", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to auto apply the default customer entitlement on case update.</para>
        /// <para>Display Name: Auto Apply Default Entitlement on Case Update</para>
        /// </summary>
        [AttributeLogicalName("autoapplydefaultoncaseupdate")]
        [DisplayName("Auto Apply Default Entitlement on Case Update")]
        public bool? AutoApplyDefaultonCaseUpdate {
            get {
                return GetAttributeValue<bool?>("autoapplydefaultoncaseupdate");
            }
            set {
                SetAttributeValue("autoapplydefaultoncaseupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.</para>
        /// <para>Display Name: Is Auto-apply SLA After Manually Over-riding</para>
        /// </summary>
        [AttributeLogicalName("autoapplysla")]
        [DisplayName("Is Auto-apply SLA After Manually Over-riding")]
        public bool? AutoApplySLA {
            get {
                return GetAttributeValue<bool?>("autoapplysla");
            }
            set {
                SetAttributeValue("autoapplysla", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("azureschedulerjobcollectionname")]
        [DisplayName("For internal use only.")]
        [MaxLength(100)]
        public string AzureSchedulerJobCollectionName {
            get {
                return GetAttributeValue<string>("azureschedulerjobcollectionname");
            }
            set {
                SetAttributeValue("azureschedulerjobcollectionname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the base currency of the organization.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("basecurrencyid")]
        [DisplayName("Currency")]
        public EntityReference BaseCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("basecurrencyid");
            }
            set {
                SetAttributeValue("basecurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for the base currency.</para>
        /// <para>Display Name: Base Currency Precision</para>
        /// </summary>
        [AttributeLogicalName("basecurrencyprecision")]
        [DisplayName("Base Currency Precision")]
        [Range(0, 4)]
        public int? BaseCurrencyPrecision {
            get {
                return GetAttributeValue<int?>("basecurrencyprecision");
            }
        }
        
        /// <summary>
        /// <para>Symbol used for the base currency.</para>
        /// <para>Display Name: Base Currency Symbol</para>
        /// </summary>
        [AttributeLogicalName("basecurrencysymbol")]
        [DisplayName("Base Currency Symbol")]
        [MaxLength(5)]
        public string BaseCurrencySymbol {
            get {
                return GetAttributeValue<string>("basecurrencysymbol");
            }
        }
        
        /// <summary>
        /// <para>Api Key to be used in requests to Bing Maps services.</para>
        /// <para>Display Name: Bing Maps API Key</para>
        /// </summary>
        [AttributeLogicalName("bingmapsapikey")]
        [DisplayName("Bing Maps API Key")]
        [MaxLength(1024)]
        public string BingMapsApiKey {
            get {
                return GetAttributeValue<string>("bingmapsapikey");
            }
            set {
                SetAttributeValue("bingmapsapikey", value);
            }
        }
        
        /// <summary>
        /// <para>Prevent upload or download of certain attachment types that are considered dangerous.</para>
        /// <para>Display Name: Block Attachments</para>
        /// </summary>
        [AttributeLogicalName("blockedattachments")]
        [DisplayName("Block Attachments")]
        [MaxLength(1073741823)]
        public string BlockedAttachments {
            get {
                return GetAttributeValue<string>("blockedattachments");
            }
            set {
                SetAttributeValue("blockedattachments", value);
            }
        }
        
        /// <summary>
        /// <para>Display cards in expanded state for interactive dashboard</para>
        /// <para>Display Name: Display cards in expanded state for Interactive Dashboard</para>
        /// </summary>
        [AttributeLogicalName("bounddashboarddefaultcardexpanded")]
        [DisplayName("Display cards in expanded state for Interactive Dashboard")]
        public bool? BoundDashboardDefaultCardExpanded {
            get {
                return GetAttributeValue<bool?>("bounddashboarddefaultcardexpanded");
            }
            set {
                SetAttributeValue("bounddashboarddefaultcardexpanded", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for bulk operation numbering.</para>
        /// <para>Display Name: Bulk Operation Prefix</para>
        /// </summary>
        [AttributeLogicalName("bulkoperationprefix")]
        [DisplayName("Bulk Operation Prefix")]
        [MaxLength(20)]
        public string BulkOperationPrefix {
            get {
                return GetAttributeValue<string>("bulkoperationprefix");
            }
            set {
                SetAttributeValue("bulkoperationprefix", value);
            }
        }
        
        /// <summary>
        /// <para>BusinessCardOptions</para>
        /// <para>Display Name: Enable New BusinessCardOptions</para>
        /// </summary>
        [AttributeLogicalName("businesscardoptions")]
        [DisplayName("Enable New BusinessCardOptions")]
        [MaxLength(1000)]
        public string BusinessCardOptions {
            get {
                return GetAttributeValue<string>("businesscardoptions");
            }
            set {
                SetAttributeValue("businesscardoptions", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business closure calendar of organization.</para>
        /// <para>Display Name: Business Closure Calendar</para>
        /// </summary>
        [AttributeLogicalName("businessclosurecalendarid")]
        [DisplayName("Business Closure Calendar")]
        public Guid? BusinessClosureCalendarId {
            get {
                return GetAttributeValue<Guid?>("businessclosurecalendarid");
            }
            set {
                SetAttributeValue("businessclosurecalendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Calendar type for the system. Set to Gregorian US by default.</para>
        /// <para>Display Name: Calendar Type</para>
        /// </summary>
        [AttributeLogicalName("calendartype")]
        [DisplayName("Calendar Type")]
        [Range(-2147483648, 2147483647)]
        public int? CalendarType {
            get {
                return GetAttributeValue<int?>("calendartype");
            }
            set {
                SetAttributeValue("calendartype", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for campaign numbering.</para>
        /// <para>Display Name: Campaign Prefix</para>
        /// </summary>
        [AttributeLogicalName("campaignprefix")]
        [DisplayName("Campaign Prefix")]
        [MaxLength(20)]
        public string CampaignPrefix {
            get {
                return GetAttributeValue<string>("campaignprefix");
            }
            set {
                SetAttributeValue("campaignprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the organization can opt out of the new Relevance search experience (released in Oct 2020)</para>
        /// <para>Display Name: Can disable Oct 2020 Search</para>
        /// </summary>
        [AttributeLogicalName("canoptoutnewsearchexperience")]
        [DisplayName("Can disable Oct 2020 Search")]
        public bool? CanOptOutNewSearchExperience {
            get {
                return GetAttributeValue<bool?>("canoptoutnewsearchexperience");
            }
            set {
                SetAttributeValue("canoptoutnewsearchexperience", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to cascade Update on incident.</para>
        /// <para>Display Name: Cascade Status Update</para>
        /// </summary>
        [AttributeLogicalName("cascadestatusupdate")]
        [DisplayName("Cascade Status Update")]
        public bool? CascadeStatusUpdate {
            get {
                return GetAttributeValue<bool?>("cascadestatusupdate");
            }
            set {
                SetAttributeValue("cascadestatusupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all cases throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Case Prefix</para>
        /// </summary>
        [AttributeLogicalName("caseprefix")]
        [DisplayName("Case Prefix")]
        [MaxLength(20)]
        public string CasePrefix {
            get {
                return GetAttributeValue<string>("caseprefix");
            }
            set {
                SetAttributeValue("caseprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Type the prefix to use for all categories in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Category Prefix</para>
        /// </summary>
        [AttributeLogicalName("categoryprefix")]
        [DisplayName("Category Prefix")]
        [MaxLength(20)]
        public string CategoryPrefix {
            get {
                return GetAttributeValue<string>("categoryprefix");
            }
            set {
                SetAttributeValue("categoryprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Client Features to be enabled as an XML BLOB.</para>
        /// <para>Display Name: Client Feature Set</para>
        /// </summary>
        [AttributeLogicalName("clientfeatureset")]
        [DisplayName("Client Feature Set")]
        [MaxLength(1073741823)]
        public string ClientFeatureSet {
            get {
                return GetAttributeValue<string>("clientfeatureset");
            }
            set {
                SetAttributeValue("clientfeatureset", value);
            }
        }
        
        /// <summary>
        /// <para>Policy configuration for CSP</para>
        /// <para>Display Name: Content Security Policy Configuration</para>
        /// </summary>
        [AttributeLogicalName("contentsecuritypolicyconfiguration")]
        [DisplayName("Content Security Policy Configuration")]
        [MaxLength(1073741823)]
        public string ContentSecurityPolicyConfiguration {
            get {
                return GetAttributeValue<string>("contentsecuritypolicyconfiguration");
            }
            set {
                SetAttributeValue("contentsecuritypolicyconfiguration", value);
            }
        }
        
        /// <summary>
        /// <para>Content Security Policy configuration for Canvas apps.</para>
        /// <para>Display Name: Content Security Policy Configuration for Canvas apps</para>
        /// </summary>
        [AttributeLogicalName("contentsecuritypolicyconfigurationforcanvas")]
        [DisplayName("Content Security Policy Configuration for Canvas apps")]
        [MaxLength(100)]
        public string ContentSecurityPolicyConfigurationForCanvas {
            get {
                return GetAttributeValue<string>("contentsecuritypolicyconfigurationforcanvas");
            }
            set {
                SetAttributeValue("contentsecuritypolicyconfigurationforcanvas", value);
            }
        }
        
        /// <summary>
        /// <para>Content Security Policy Report Uri.</para>
        /// <para>Display Name: Content Security Policy Report Uri</para>
        /// </summary>
        [AttributeLogicalName("contentsecuritypolicyreporturi")]
        [DisplayName("Content Security Policy Report Uri")]
        [MaxLength(100)]
        public string ContentSecurityPolicyReportUri {
            get {
                return GetAttributeValue<string>("contentsecuritypolicyreporturi");
            }
            set {
                SetAttributeValue("contentsecuritypolicyreporturi", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all contracts throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Contract Prefix</para>
        /// </summary>
        [AttributeLogicalName("contractprefix")]
        [DisplayName("Contract Prefix")]
        [MaxLength(20)]
        public string ContractPrefix {
            get {
                return GetAttributeValue<string>("contractprefix");
            }
            set {
                SetAttributeValue("contractprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Refresh rate for copresence data in seconds.</para>
        /// <para>Display Name: CopresenceRefreshRate</para>
        /// </summary>
        [AttributeLogicalName("copresencerefreshrate")]
        [DisplayName("CopresenceRefreshRate")]
        [Range(30, 2147483647)]
        public int? CopresenceRefreshRate {
            get {
                return GetAttributeValue<int?>("copresencerefreshrate");
            }
            set {
                SetAttributeValue("copresencerefreshrate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.</para>
        /// <para>Display Name: Enable Cortana Proactive Experience Flow processes for this Organization</para>
        /// </summary>
        [AttributeLogicalName("cortanaproactiveexperienceenabled")]
        [DisplayName("Enable Cortana Proactive Experience Flow processes for this Organization")]
        public bool? CortanaProactiveExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("cortanaproactiveexperienceenabled");
            }
            set {
                SetAttributeValue("cortanaproactiveexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Initial state of newly created products to be Active instead of Draft</para>
        /// <para>Display Name: Enable Active Initial Product State</para>
        /// </summary>
        [AttributeLogicalName("createproductswithoutparentinactivestate")]
        [DisplayName("Enable Active Initial Product State")]
        public bool? CreateProductsWithoutParentInActiveState {
            get {
                return GetAttributeValue<bool?>("createproductswithoutparentinactivestate");
            }
            set {
                SetAttributeValue("createproductswithoutparentinactivestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the organization.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the organization was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the organization.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for currency.</para>
        /// <para>Display Name: Currency Decimal Precision</para>
        /// </summary>
        [AttributeLogicalName("currencydecimalprecision")]
        [DisplayName("Currency Decimal Precision")]
        [Range(-2147483648, 2147483647)]
        public int? CurrencyDecimalPrecision {
            get {
                return GetAttributeValue<int?>("currencydecimalprecision");
            }
            set {
                SetAttributeValue("currencydecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to display money fields with currency code or currency symbol.</para>
        /// <para>Display Name: Display Currencies Using</para>
        /// </summary>
        [AttributeLogicalName("currencydisplayoption")]
        [DisplayName("Display Currencies Using")]
        public Organization_CurrencyDisplayOption? CurrencyDisplayOption {
            get {
                return GetOptionSetValue<Organization_CurrencyDisplayOption>("currencydisplayoption");
            }
            set {
                SetOptionSetValue("currencydisplayoption", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how currency symbols are placed throughout Microsoft Dynamics CRM.</para>
        /// <para>Display Name: Currency Format Code</para>
        /// </summary>
        [AttributeLogicalName("currencyformatcode")]
        [DisplayName("Currency Format Code")]
        public Organization_CurrencyFormatCode? CurrencyFormatCode {
            get {
                return GetOptionSetValue<Organization_CurrencyFormatCode>("currencyformatcode");
            }
            set {
                SetOptionSetValue("currencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for currency throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Currency Symbol</para>
        /// </summary>
        [AttributeLogicalName("currencysymbol")]
        [DisplayName("Currency Symbol")]
        [MaxLength(13)]
        public string CurrencySymbol {
            get {
                return GetAttributeValue<string>("currencysymbol");
            }
            set {
                SetAttributeValue("currencysymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Current bulk operation number. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Bulk Operation Number</para>
        /// </summary>
        [AttributeLogicalName("currentbulkoperationnumber")]
        [DisplayName("Current Bulk Operation Number")]
        [Range(0, 2147483647)]
        public int? CurrentBulkOperationNumber {
            get {
                return GetAttributeValue<int?>("currentbulkoperationnumber");
            }
            set {
                SetAttributeValue("currentbulkoperationnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Current campaign number. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Campaign Number</para>
        /// </summary>
        [AttributeLogicalName("currentcampaignnumber")]
        [DisplayName("Current Campaign Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentCampaignNumber {
            get {
                return GetAttributeValue<int?>("currentcampaignnumber");
            }
            set {
                SetAttributeValue("currentcampaignnumber", value);
            }
        }
        
        /// <summary>
        /// <para>First case number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Case Number</para>
        /// </summary>
        [AttributeLogicalName("currentcasenumber")]
        [DisplayName("Current Case Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentCaseNumber {
            get {
                return GetAttributeValue<int?>("currentcasenumber");
            }
            set {
                SetAttributeValue("currentcasenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the first number to use for Categories. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Category Number</para>
        /// </summary>
        [AttributeLogicalName("currentcategorynumber")]
        [DisplayName("Current Category Number")]
        [Range(-1, 2147483647)]
        public int? CurrentCategoryNumber {
            get {
                return GetAttributeValue<int?>("currentcategorynumber");
            }
            set {
                SetAttributeValue("currentcategorynumber", value);
            }
        }
        
        /// <summary>
        /// <para>First contract number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Contract Number</para>
        /// </summary>
        [AttributeLogicalName("currentcontractnumber")]
        [DisplayName("Current Contract Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentContractNumber {
            get {
                return GetAttributeValue<int?>("currentcontractnumber");
            }
            set {
                SetAttributeValue("currentcontractnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Import sequence to use.</para>
        /// <para>Display Name: Current Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("currentimportsequencenumber")]
        [DisplayName("Current Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("currentimportsequencenumber");
            }
        }
        
        /// <summary>
        /// <para>First invoice number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Invoice Number</para>
        /// </summary>
        [AttributeLogicalName("currentinvoicenumber")]
        [DisplayName("Current Invoice Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentInvoiceNumber {
            get {
                return GetAttributeValue<int?>("currentinvoicenumber");
            }
            set {
                SetAttributeValue("currentinvoicenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the first number to use for knowledge articles. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Knowledge Article Number</para>
        /// </summary>
        [AttributeLogicalName("currentkanumber")]
        [DisplayName("Current Knowledge Article Number")]
        [Range(-1, 2147483647)]
        public int? CurrentKaNumber {
            get {
                return GetAttributeValue<int?>("currentkanumber");
            }
            set {
                SetAttributeValue("currentkanumber", value);
            }
        }
        
        /// <summary>
        /// <para>First article number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Article Number</para>
        /// </summary>
        [AttributeLogicalName("currentkbnumber")]
        [DisplayName("Current Article Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentKbNumber {
            get {
                return GetAttributeValue<int?>("currentkbnumber");
            }
            set {
                SetAttributeValue("currentkbnumber", value);
            }
        }
        
        /// <summary>
        /// <para>First order number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Order Number</para>
        /// </summary>
        [AttributeLogicalName("currentordernumber")]
        [DisplayName("Current Order Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentOrderNumber {
            get {
                return GetAttributeValue<int?>("currentordernumber");
            }
            set {
                SetAttributeValue("currentordernumber", value);
            }
        }
        
        /// <summary>
        /// <para>First parsed table number to use.</para>
        /// <para>Display Name: Current Parsed Table Number</para>
        /// </summary>
        [AttributeLogicalName("currentparsedtablenumber")]
        [DisplayName("Current Parsed Table Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentParsedTableNumber {
            get {
                return GetAttributeValue<int?>("currentparsedtablenumber");
            }
        }
        
        /// <summary>
        /// <para>First quote number to use. Deprecated. Use SetAutoNumberSeed message.</para>
        /// <para>Display Name: Current Quote Number</para>
        /// </summary>
        [AttributeLogicalName("currentquotenumber")]
        [DisplayName("Current Quote Number")]
        [Range(-2147483648, 2147483647)]
        public int? CurrentQuoteNumber {
            get {
                return GetAttributeValue<int?>("currentquotenumber");
            }
            set {
                SetAttributeValue("currentquotenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how the date is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Date Format Code</para>
        /// </summary>
        [AttributeLogicalName("dateformatcode")]
        [DisplayName("Date Format Code")]
        public Object DateFormatCode {
            get {
                return GetAttributeValue<Object>("dateformatcode");
            }
            set {
                SetAttributeValue("dateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>String showing how the date is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Date Format String</para>
        /// </summary>
        [AttributeLogicalName("dateformatstring")]
        [DisplayName("Date Format String")]
        [MaxLength(255)]
        public string DateFormatString {
            get {
                return GetAttributeValue<string>("dateformatstring");
            }
            set {
                SetAttributeValue("dateformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Date Separator</para>
        /// </summary>
        [AttributeLogicalName("dateseparator")]
        [DisplayName("Date Separator")]
        [MaxLength(5)]
        public string DateSeparator {
            get {
                return GetAttributeValue<string>("dateseparator");
            }
            set {
                SetAttributeValue("dateseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Days of inactivity before sync is disabled for a Teams Chat.</para>
        /// <para>Display Name: Days Before Inactive Teams Chat Sync Disabled</para>
        /// </summary>
        [AttributeLogicalName("daysbeforeinactiveteamschatsyncdisabled")]
        [DisplayName("Days Before Inactive Teams Chat Sync Disabled")]
        [Range(1, 28)]
        public int? DaysBeforeInactiveTeamsChatSyncDisabled {
            get {
                return GetAttributeValue<int?>("daysbeforeinactiveteamschatsyncdisabled");
            }
            set {
                SetAttributeValue("daysbeforeinactiveteamschatsyncdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>The maximum value for the Mobile Offline setting Days since record last modified</para>
        /// <para>Display Name: Max value of Days since record last modified</para>
        /// </summary>
        [AttributeLogicalName("dayssincerecordlastmodifiedmaxvalue")]
        [DisplayName("Max value of Days since record last modified")]
        [Range(0, 2147483647)]
        public int? DaysSinceRecordLastModifiedMaxValue {
            get {
                return GetAttributeValue<int?>("dayssincerecordlastmodifiedmaxvalue");
            }
        }
        
        /// <summary>
        /// <para>Symbol used for decimal in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Decimal Symbol</para>
        /// </summary>
        [AttributeLogicalName("decimalsymbol")]
        [DisplayName("Decimal Symbol")]
        [MaxLength(5)]
        public string DecimalSymbol {
            get {
                return GetAttributeValue<string>("decimalsymbol");
            }
            set {
                SetAttributeValue("decimalsymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Text area to enter default country code.</para>
        /// <para>Display Name: Default Country Code</para>
        /// </summary>
        [AttributeLogicalName("defaultcountrycode")]
        [DisplayName("Default Country Code")]
        [MaxLength(30)]
        public string DefaultCountryCode {
            get {
                return GetAttributeValue<string>("defaultcountrycode");
            }
            set {
                SetAttributeValue("defaultcountrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the default crm custom.</para>
        /// <para>Display Name: Name of the default app</para>
        /// </summary>
        [AttributeLogicalName("defaultcrmcustomname")]
        [DisplayName("Name of the default app")]
        [MaxLength(100)]
        public string DefaultCrmCustomName {
            get {
                return GetAttributeValue<string>("defaultcrmcustomname");
            }
            set {
                SetAttributeValue("defaultcrmcustomname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default email server profile.</para>
        /// <para>Display Name: Email Server Profile</para>
        /// </summary>
        [AttributeLogicalName("defaultemailserverprofileid")]
        [DisplayName("Email Server Profile")]
        public EntityReference DefaultEmailServerProfileId {
            get {
                return GetAttributeValue<EntityReference>("defaultemailserverprofileid");
            }
            set {
                SetAttributeValue("defaultemailserverprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the default email settings that are applied when a user or queue is created.</para>
        /// <para>Display Name: Default Email Settings</para>
        /// </summary>
        [AttributeLogicalName("defaultemailsettings")]
        [DisplayName("Default Email Settings")]
        [MaxLength(1073741823)]
        public string DefaultEmailSettings {
            get {
                return GetAttributeValue<string>("defaultemailsettings");
            }
            set {
                SetAttributeValue("defaultemailsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default mobile offline profile.</para>
        /// <para>Display Name: Default Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("defaultmobileofflineprofileid")]
        [DisplayName("Default Mobile Offline Profile")]
        public EntityReference DefaultMobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("defaultmobileofflineprofileid");
            }
            set {
                SetAttributeValue("defaultmobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of default recurrence end range date.</para>
        /// <para>Display Name: Default Recurrence End Range Type</para>
        /// </summary>
        [AttributeLogicalName("defaultrecurrenceendrangetype")]
        [DisplayName("Default Recurrence End Range Type")]
        public Organization_DefaultRecurrenceEndRangeType? DefaultRecurrenceEndRangeType {
            get {
                return GetOptionSetValue<Organization_DefaultRecurrenceEndRangeType>("defaultrecurrenceendrangetype");
            }
            set {
                SetOptionSetValue("defaultrecurrenceendrangetype", value);
            }
        }
        
        /// <summary>
        /// <para>Default theme data for the organization.</para>
        /// <para>Display Name: Default Theme Data</para>
        /// </summary>
        [AttributeLogicalName("defaultthemedata")]
        [DisplayName("Default Theme Data")]
        public string DefaultThemeData {
            get {
                return GetAttributeValue<string>("defaultthemedata");
            }
            set {
                SetAttributeValue("defaultthemedata", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegated admin user for the organization.</para>
        /// <para>Display Name: Delegated Admin</para>
        /// </summary>
        [AttributeLogicalName("delegatedadminuserid")]
        [DisplayName("Delegated Admin")]
        public Guid? DelegatedAdminUserId {
            get {
                return GetAttributeValue<Guid?>("delegatedadminuserid");
            }
            set {
                SetAttributeValue("delegatedadminuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Social Care is disabled.</para>
        /// <para>Display Name: Is Social Care disabled</para>
        /// </summary>
        [AttributeLogicalName("disablesocialcare")]
        [DisplayName("Is Social Care disabled")]
        public bool? DisableSocialCare {
            get {
                return GetAttributeValue<bool?>("disablesocialcare");
            }
            set {
                SetAttributeValue("disablesocialcare", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the organization.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Discount calculation method for the QOOI product.</para>
        /// <para>Display Name: Discount calculation method</para>
        /// </summary>
        [AttributeLogicalName("discountcalculationmethod")]
        [DisplayName("Discount calculation method")]
        public Organization_DiscountCalculationMethod? DiscountCalculationMethod {
            get {
                return GetOptionSetValue<Organization_DiscountCalculationMethod>("discountcalculationmethod");
            }
            set {
                SetOptionSetValue("discountcalculationmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether or not navigation tour is displayed.</para>
        /// <para>Display Name: Display Navigation Tour</para>
        /// </summary>
        [AttributeLogicalName("displaynavigationtour")]
        [DisplayName("Display Navigation Tour")]
        public bool? DisplayNavigationTour {
            get {
                return GetAttributeValue<bool?>("displaynavigationtour");
            }
            set {
                SetAttributeValue("displaynavigationtour", value);
            }
        }
        
        /// <summary>
        /// <para>Select if you want to use the Email Router or server-side synchronization for email processing.</para>
        /// <para>Display Name: Email Connection Channel</para>
        /// </summary>
        [AttributeLogicalName("emailconnectionchannel")]
        [DisplayName("Email Connection Channel")]
        public Organization_EmailConnectionChannel? EmailConnectionChannel {
            get {
                return GetOptionSetValue<Organization_EmailConnectionChannel>("emailconnectionchannel");
            }
            set {
                SetOptionSetValue("emailconnectionchannel", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to turn email correlation on or off.</para>
        /// <para>Display Name: Use Email Correlation</para>
        /// </summary>
        [AttributeLogicalName("emailcorrelationenabled")]
        [DisplayName("Use Email Correlation")]
        public bool? EmailCorrelationEnabled {
            get {
                return GetAttributeValue<bool?>("emailcorrelationenabled");
            }
            set {
                SetAttributeValue("emailcorrelationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for sending email in Microsoft Office Outlook.</para>
        /// <para>Display Name: Email Send Polling Frequency</para>
        /// </summary>
        [AttributeLogicalName("emailsendpollingperiod")]
        [DisplayName("Email Send Polling Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? EmailSendPollingPeriod {
            get {
                return GetAttributeValue<int?>("emailsendpollingperiod");
            }
            set {
                SetAttributeValue("emailsendpollingperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Determines whether records merged through the merge dialog in UCI are merged asynchronously</para>
        /// <para>Display Name: Asynchronous merge enabled for UCI</para>
        /// </summary>
        [AttributeLogicalName("enableasyncmergeapiforuci")]
        [DisplayName("Asynchronous merge enabled for UCI")]
        public bool? EnableAsyncMergeAPIForUCI {
            get {
                return GetAttributeValue<bool?>("enableasyncmergeapiforuci");
            }
            set {
                SetAttributeValue("enableasyncmergeapiforuci", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Bing Maps</para>
        /// <para>Display Name: Enable Integration with Bing Maps</para>
        /// </summary>
        [AttributeLogicalName("enablebingmapsintegration")]
        [DisplayName("Enable Integration with Bing Maps")]
        public bool? EnableBingMapsIntegration {
            get {
                return GetAttributeValue<bool?>("enablebingmapsintegration");
            }
            set {
                SetAttributeValue("enablebingmapsintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Note: By enabling this feature, you will also enable the automatic creation of enviornment variables when adding data sources for your apps.</para>
        /// <para>Display Name: Enable the creation of Canvas apps in Dataverse / Solution by default</para>
        /// </summary>
        [AttributeLogicalName("enablecanvasappsinsolutionsbydefault")]
        [DisplayName("Enable the creation of Canvas apps in Dataverse / Solution by default")]
        public bool? EnableCanvasAppsInSolutionsByDefault {
            get {
                return GetAttributeValue<bool?>("enablecanvasappsinsolutionsbydefault");
            }
            set {
                SetAttributeValue("enablecanvasappsinsolutionsbydefault", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the creation of flows is within a solution by default for this organization.</para>
        /// <para>Display Name: Enable the creation of flows within a solution by default.</para>
        /// </summary>
        [AttributeLogicalName("enableflowsinsolutionbydefault")]
        [DisplayName("Enable the creation of flows within a solution by default.")]
        public bool? EnableFlowsInSolutionByDefault {
            get {
                return GetAttributeValue<bool?>("enableflowsinsolutionbydefault");
            }
            set {
                SetAttributeValue("enableflowsinsolutionbydefault", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Immersive Skype</para>
        /// <para>Display Name: Enable Integration with Immersive Skype</para>
        /// </summary>
        [AttributeLogicalName("enableimmersiveskypeintegration")]
        [DisplayName("Enable Integration with Immersive Skype")]
        public bool? EnableImmersiveSkypeIntegration {
            get {
                return GetAttributeValue<bool?>("enableimmersiveskypeintegration");
            }
            set {
                SetAttributeValue("enableimmersiveskypeintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether IP based cookie binding is enabled</para>
        /// <para>Display Name: Enable IP Address Based Cookie Binding</para>
        /// </summary>
        [AttributeLogicalName("enableipbasedcookiebinding")]
        [DisplayName("Enable IP Address Based Cookie Binding")]
        public bool? EnableIpBasedCookieBinding {
            get {
                return GetAttributeValue<bool?>("enableipbasedcookiebinding");
            }
            set {
                SetAttributeValue("enableipbasedcookiebinding", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether IP based firewall rule is enabled</para>
        /// <para>Display Name: Enable IP Range based Firewall</para>
        /// </summary>
        [AttributeLogicalName("enableipbasedfirewallrule")]
        [DisplayName("Enable IP Range based Firewall")]
        public bool? EnableIpBasedFirewallRule {
            get {
                return GetAttributeValue<bool?>("enableipbasedfirewallrule");
            }
            set {
                SetAttributeValue("enableipbasedfirewallrule", value);
            }
        }
        
        /// <summary>
        /// <para>Select to enable learning path auhtoring.</para>
        /// <para>Display Name: Enable Learning Path Authoring</para>
        /// </summary>
        [AttributeLogicalName("enablelpauthoring")]
        [DisplayName("Enable Learning Path Authoring")]
        public bool? EnableLPAuthoring {
            get {
                return GetAttributeValue<bool?>("enablelpauthoring");
            }
            set {
                SetAttributeValue("enablelpauthoring", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.</para>
        /// <para>Display Name: Indicates whether the user has enabled or disabled LivePersonCardIntegration in Office.</para>
        /// </summary>
        [AttributeLogicalName("enablelivepersoncardintegrationinoffice")]
        [DisplayName("Indicates whether the user has enabled or disabled LivePersonCardIntegration in O" +
            "ffice.")]
        public bool? EnableLivePersonCardIntegrationInOffice {
            get {
                return GetAttributeValue<bool?>("enablelivepersoncardintegrationinoffice");
            }
            set {
                SetAttributeValue("enablelivepersoncardintegrationinoffice", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.</para>
        /// <para>Display Name: Indicates whether the user has enabled or disabled Live Persona Card feature in UCI.</para>
        /// </summary>
        [AttributeLogicalName("enablelivepersonacarduci")]
        [DisplayName("Indicates whether the user has enabled or disabled Live Persona Card feature in U" +
            "CI.")]
        public bool? EnableLivePersonaCardUCI {
            get {
                return GetAttributeValue<bool?>("enablelivepersonacarduci");
            }
            set {
                SetAttributeValue("enablelivepersonacarduci", value);
            }
        }
        
        /// <summary>
        /// <para>Control whether the organization Switch Maker Portal to Classic</para>
        /// <para>Display Name: Switch Maker Portal to Classic</para>
        /// </summary>
        [AttributeLogicalName("enablemakerswitchtoclassic")]
        [DisplayName("Switch Maker Portal to Classic")]
        public bool? EnableMakerSwitchToClassic {
            get {
                return GetAttributeValue<bool?>("enablemakerswitchtoclassic");
            }
            set {
                SetAttributeValue("enablemakerswitchtoclassic", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Integration with Microsoft Flow</para>
        /// <para>Display Name: Enable Integration with Microsoft Flow</para>
        /// </summary>
        [AttributeLogicalName("enablemicrosoftflowintegration")]
        [DisplayName("Enable Integration with Microsoft Flow")]
        public bool? EnableMicrosoftFlowIntegration {
            get {
                return GetAttributeValue<bool?>("enablemicrosoftflowintegration");
            }
            set {
                SetAttributeValue("enablemicrosoftflowintegration", value);
            }
        }
        
        /// <summary>
        /// <para>Enable pricing calculations on a Create call.</para>
        /// <para>Display Name: Enable Pricing On Create</para>
        /// </summary>
        [AttributeLogicalName("enablepricingoncreate")]
        [DisplayName("Enable Pricing On Create")]
        public bool? EnablePricingOnCreate {
            get {
                return GetAttributeValue<bool?>("enablepricingoncreate");
            }
            set {
                SetAttributeValue("enablepricingoncreate", value);
            }
        }
        
        /// <summary>
        /// <para>Use Smart Matching.</para>
        /// <para>Display Name: Enable Smart Matching</para>
        /// </summary>
        [AttributeLogicalName("enablesmartmatching")]
        [DisplayName("Enable Smart Matching")]
        public bool? EnableSmartMatching {
            get {
                return GetAttributeValue<bool?>("enablesmartmatching");
            }
            set {
                SetAttributeValue("enablesmartmatching", value);
            }
        }
        
        /// <summary>
        /// <para>Leave empty to use default setting. Set to on/off to enable/disable CDN for UCI.</para>
        /// <para>Display Name: Enable UCI CDN for organization</para>
        /// </summary>
        [AttributeLogicalName("enableunifiedclientcdn")]
        [DisplayName("Enable UCI CDN for organization")]
        public bool? EnableUnifiedClientCDN {
            get {
                return GetAttributeValue<bool?>("enableunifiedclientcdn");
            }
            set {
                SetAttributeValue("enableunifiedclientcdn", value);
            }
        }
        
        /// <summary>
        /// <para>Enable site map and commanding update</para>
        /// <para>Display Name: Enable site map and commanding update</para>
        /// </summary>
        [AttributeLogicalName("enableunifiedinterfaceshellrefresh")]
        [DisplayName("Enable site map and commanding update")]
        public bool? EnableUnifiedInterfaceShellRefresh {
            get {
                return GetAttributeValue<bool?>("enableunifiedinterfaceshellrefresh");
            }
            set {
                SetAttributeValue("enableunifiedinterfaceshellrefresh", value);
            }
        }
        
        /// <summary>
        /// <para>Organization setting to enforce read only plugins.</para>
        /// <para>Display Name: Organization setting to enforce read only plugins.</para>
        /// </summary>
        [AttributeLogicalName("enforcereadonlyplugins")]
        [DisplayName("Organization setting to enforce read only plugins.")]
        public bool? EnforceReadOnlyPlugins {
            get {
                return GetAttributeValue<bool?>("enforcereadonlyplugins");
            }
            set {
                SetAttributeValue("enforcereadonlyplugins", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether validation enforcement has been enabled for this organization's apps.</para>
        /// <para>Display Name: Enforce validations for this organization's apps</para>
        /// </summary>
        [AttributeLogicalName("enforcevalidations")]
        [DisplayName("Enforce validations for this organization\'s apps")]
        public bool? EnforceValidations {
            get {
                return GetAttributeValue<bool?>("enforcevalidations");
            }
            set {
                SetAttributeValue("enforcevalidations", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days to keep change tracking deleted records</para>
        /// <para>Display Name: Days to Expire Change Tracking Deleted Records</para>
        /// </summary>
        [AttributeLogicalName("expirechangetrackingindays")]
        [DisplayName("Days to Expire Change Tracking Deleted Records")]
        [Range(0, 365)]
        public int? ExpireChangeTrackingInDays {
            get {
                return GetAttributeValue<int?>("expirechangetrackingindays");
            }
            set {
                SetAttributeValue("expirechangetrackingindays", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days before deleting inactive subscriptions.</para>
        /// <para>Display Name: Days to Expire Subscriptions</para>
        /// </summary>
        [AttributeLogicalName("expiresubscriptionsindays")]
        [DisplayName("Days to Expire Subscriptions")]
        [Range(0, 2147483647)]
        public int? ExpireSubscriptionsInDays {
            get {
                return GetAttributeValue<int?>("expiresubscriptionsindays");
            }
            set {
                SetAttributeValue("expiresubscriptionsindays", value);
            }
        }
        
        /// <summary>
        /// <para>Specify the base URL to use to look for external document suggestions.</para>
        /// <para>Display Name: External Base URL</para>
        /// </summary>
        [AttributeLogicalName("externalbaseurl")]
        [DisplayName("External Base URL")]
        [MaxLength(500)]
        public string ExternalBaseUrl {
            get {
                return GetAttributeValue<string>("externalbaseurl");
            }
            set {
                SetAttributeValue("externalbaseurl", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only</para>
        /// <para>Display Name: ExternalPartyEnabled Entities correlation Keys</para>
        /// </summary>
        [AttributeLogicalName("externalpartycorrelationkeys")]
        [DisplayName("ExternalPartyEnabled Entities correlation Keys")]
        [MaxLength(1073741823)]
        public string ExternalPartyCorrelationKeys {
            get {
                return GetAttributeValue<string>("externalpartycorrelationkeys");
            }
            set {
                SetAttributeValue("externalpartycorrelationkeys", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the ExternalPartyEnabled entities settings.</para>
        /// <para>Display Name: ExternalPartyEnabled Entities Settings.For internal use only</para>
        /// </summary>
        [AttributeLogicalName("externalpartyentitysettings")]
        [DisplayName("ExternalPartyEnabled Entities Settings.For internal use only")]
        [MaxLength(1073741823)]
        public string ExternalPartyEntitySettings {
            get {
                return GetAttributeValue<string>("externalpartyentitysettings");
            }
            set {
                SetAttributeValue("externalpartyentitysettings", value);
            }
        }
        
        /// <summary>
        /// <para>Features to be enabled as an XML BLOB.</para>
        /// <para>Display Name: Feature Set</para>
        /// </summary>
        [AttributeLogicalName("featureset")]
        [DisplayName("Feature Set")]
        [MaxLength(1073741823)]
        public string FeatureSet {
            get {
                return GetAttributeValue<string>("featureset");
            }
            set {
                SetAttributeValue("featureset", value);
            }
        }
        
        /// <summary>
        /// <para>Start date for the fiscal period that is to be used throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Calendar Start</para>
        /// </summary>
        [AttributeLogicalName("fiscalcalendarstart")]
        [DisplayName("Fiscal Calendar Start")]
        public DateTime? FiscalCalendarStart {
            get {
                return GetAttributeValue<DateTime?>("fiscalcalendarstart");
            }
            set {
                SetAttributeValue("fiscalcalendarstart", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Period Format</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodformat")]
        [DisplayName("Fiscal Period Format")]
        [MaxLength(25)]
        public string FiscalPeriodFormat {
            get {
                return GetAttributeValue<string>("fiscalperiodformat");
            }
            set {
                SetAttributeValue("fiscalperiodformat", value);
            }
        }
        
        /// <summary>
        /// <para>Format in which the fiscal period will be displayed.</para>
        /// <para>Display Name: Format for Fiscal Period</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodformatperiod")]
        [DisplayName("Format for Fiscal Period")]
        public Organization_FiscalPeriodFormatPeriod? FiscalPeriodFormatPeriod {
            get {
                return GetOptionSetValue<Organization_FiscalPeriodFormatPeriod>("fiscalperiodformatperiod");
            }
            set {
                SetOptionSetValue("fiscalperiodformatperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Type of fiscal period used throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Period Type</para>
        /// </summary>
        [AttributeLogicalName("fiscalperiodtype")]
        [DisplayName("Fiscal Period Type")]
        [Range(-2147483648, 2147483647)]
        public int? FiscalPeriodType {
            get {
                return GetAttributeValue<int?>("fiscalperiodtype");
            }
            set {
                SetAttributeValue("fiscalperiodtype", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the fiscal settings have been updated.</para>
        /// <para>Display Name: Is Fiscal Settings Updated</para>
        /// </summary>
        [AttributeLogicalName("fiscalsettingsupdated")]
        [DisplayName("Is Fiscal Settings Updated")]
        public bool? FiscalSettingsUpdated {
            get {
                return GetAttributeValue<bool?>("fiscalsettingsupdated");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.</para>
        /// <para>Display Name: Fiscal Year Display</para>
        /// </summary>
        [AttributeLogicalName("fiscalyeardisplaycode")]
        [DisplayName("Fiscal Year Display")]
        public int? FiscalYearDisplayCode {
            get {
                return GetAttributeValue<int?>("fiscalyeardisplaycode");
            }
            set {
                SetAttributeValue("fiscalyeardisplaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Fiscal Year Format</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformat")]
        [DisplayName("Fiscal Year Format")]
        [MaxLength(25)]
        public string FiscalYearFormat {
            get {
                return GetAttributeValue<string>("fiscalyearformat");
            }
            set {
                SetAttributeValue("fiscalyearformat", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix for the display of the fiscal year.</para>
        /// <para>Display Name: Prefix for Fiscal Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatprefix")]
        [DisplayName("Prefix for Fiscal Year")]
        public Organization_FiscalYearFormatPrefix? FiscalYearFormatPrefix {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatPrefix>("fiscalyearformatprefix");
            }
            set {
                SetOptionSetValue("fiscalyearformatprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Suffix for the display of the fiscal year.</para>
        /// <para>Display Name: Suffix for Fiscal Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatsuffix")]
        [DisplayName("Suffix for Fiscal Year")]
        public Organization_FiscalYearFormatSuffix? FiscalYearFormatSuffix {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatSuffix>("fiscalyearformatsuffix");
            }
            set {
                SetOptionSetValue("fiscalyearformatsuffix", value);
            }
        }
        
        /// <summary>
        /// <para>Format for the year.</para>
        /// <para>Display Name: Fiscal Year Format Year</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearformatyear")]
        [DisplayName("Fiscal Year Format Year")]
        public Organization_FiscalYearFormatYear? FiscalYearFormatYear {
            get {
                return GetOptionSetValue<Organization_FiscalYearFormatYear>("fiscalyearformatyear");
            }
            set {
                SetOptionSetValue("fiscalyearformatyear", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.</para>
        /// <para>Display Name: Fiscal Year Period Connector</para>
        /// </summary>
        [AttributeLogicalName("fiscalyearperiodconnect")]
        [DisplayName("Fiscal Year Period Connector")]
        [MaxLength(5)]
        public string FiscalYearPeriodConnect {
            get {
                return GetAttributeValue<string>("fiscalyearperiodconnect");
            }
            set {
                SetAttributeValue("fiscalyearperiodconnect", value);
            }
        }
        
        /// <summary>
        /// <para>Order in which names are to be displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Full Name Display Order</para>
        /// </summary>
        [AttributeLogicalName("fullnameconventioncode")]
        [DisplayName("Full Name Display Order")]
        public Organization_FullNameConventionCode? FullNameConventionCode {
            get {
                return GetOptionSetValue<Organization_FullNameConventionCode>("fullnameconventioncode");
            }
            set {
                SetOptionSetValue("fullnameconventioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of months in future for which the recurring activities can be created.</para>
        /// <para>Display Name: Future Expansion Window</para>
        /// </summary>
        [AttributeLogicalName("futureexpansionwindow")]
        [DisplayName("Future Expansion Window")]
        [Range(1, 140)]
        public int? FutureExpansionWindow {
            get {
                return GetAttributeValue<int?>("futureexpansionwindow");
            }
            set {
                SetAttributeValue("futureexpansionwindow", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for errors.</para>
        /// <para>Display Name: Generate Alerts For Errors</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforerrors")]
        [DisplayName("Generate Alerts For Errors")]
        public bool? GenerateAlertsForErrors {
            get {
                return GetAttributeValue<bool?>("generatealertsforerrors");
            }
            set {
                SetAttributeValue("generatealertsforerrors", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for information.</para>
        /// <para>Display Name: Generate Alerts For Information</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforinformation")]
        [DisplayName("Generate Alerts For Information")]
        public bool? GenerateAlertsForInformation {
            get {
                return GetAttributeValue<bool?>("generatealertsforinformation");
            }
            set {
                SetAttributeValue("generatealertsforinformation", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether alerts will be generated for warnings.</para>
        /// <para>Display Name: Generate Alerts For Warnings</para>
        /// </summary>
        [AttributeLogicalName("generatealertsforwarnings")]
        [DisplayName("Generate Alerts For Warnings")]
        public bool? GenerateAlertsForWarnings {
            get {
                return GetAttributeValue<bool?>("generatealertsforwarnings");
            }
            set {
                SetAttributeValue("generatealertsforwarnings", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Get Started content is enabled for this organization.</para>
        /// <para>Display Name: Is Get Started Pane Content Enabled</para>
        /// </summary>
        [AttributeLogicalName("getstartedpanecontentenabled")]
        [DisplayName("Is Get Started Pane Content Enabled")]
        public bool? GetStartedPaneContentEnabled {
            get {
                return GetAttributeValue<bool?>("getstartedpanecontentenabled");
            }
            set {
                SetAttributeValue("getstartedpanecontentenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the append URL parameters is enabled.</para>
        /// <para>Display Name: Is AppendUrl Parameters enabled</para>
        /// </summary>
        [AttributeLogicalName("globalappendurlparametersenabled")]
        [DisplayName("Is AppendUrl Parameters enabled")]
        public bool? GlobalAppendUrlParametersEnabled {
            get {
                return GetAttributeValue<bool?>("globalappendurlparametersenabled");
            }
            set {
                SetAttributeValue("globalappendurlparametersenabled", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the web page global help.</para>
        /// <para>Display Name: Global Help URL.</para>
        /// </summary>
        [AttributeLogicalName("globalhelpurl")]
        [DisplayName("Global Help URL.")]
        [MaxLength(500)]
        public string GlobalHelpUrl {
            get {
                return GetAttributeValue<string>("globalhelpurl");
            }
            set {
                SetAttributeValue("globalhelpurl", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the customizable global help is enabled.</para>
        /// <para>Display Name: Is Customizable Global Help enabled</para>
        /// </summary>
        [AttributeLogicalName("globalhelpurlenabled")]
        [DisplayName("Is Customizable Global Help enabled")]
        public bool? GlobalHelpUrlEnabled {
            get {
                return GetAttributeValue<bool?>("globalhelpurlenabled");
            }
            set {
                SetAttributeValue("globalhelpurlenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Number of days after the goal's end date after which the rollup of the goal stops automatically.</para>
        /// <para>Display Name: Rollup Expiration Time for Goal</para>
        /// </summary>
        [AttributeLogicalName("goalrollupexpirytime")]
        [DisplayName("Rollup Expiration Time for Goal")]
        [Range(0, 400)]
        public int? GoalRollupExpiryTime {
            get {
                return GetAttributeValue<int?>("goalrollupexpirytime");
            }
            set {
                SetAttributeValue("goalrollupexpirytime", value);
            }
        }
        
        /// <summary>
        /// <para>Number of hours between automatic rollup jobs .</para>
        /// <para>Display Name: Automatic Rollup Frequency for Goal</para>
        /// </summary>
        [AttributeLogicalName("goalrollupfrequency")]
        [DisplayName("Automatic Rollup Frequency for Goal")]
        [Range(1, 2147483647)]
        public int? GoalRollupFrequency {
            get {
                return GetAttributeValue<int?>("goalrollupfrequency");
            }
            set {
                SetAttributeValue("goalrollupfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Grant Access To Network Service</para>
        /// </summary>
        [AttributeLogicalName("grantaccesstonetworkservice")]
        [DisplayName("Grant Access To Network Service")]
        public bool? GrantAccessToNetworkService {
            get {
                return GetAttributeValue<bool?>("grantaccesstonetworkservice");
            }
            set {
                SetAttributeValue("grantaccesstonetworkservice", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum difference allowed between subject keywords count of the email messaged to be correlated</para>
        /// <para>Display Name: Hash Delta Subject Count</para>
        /// </summary>
        [AttributeLogicalName("hashdeltasubjectcount")]
        [DisplayName("Hash Delta Subject Count")]
        [Range(0, 2147483647)]
        public int? HashDeltaSubjectCount {
            get {
                return GetAttributeValue<int?>("hashdeltasubjectcount");
            }
            set {
                SetAttributeValue("hashdeltasubjectcount", value);
            }
        }
        
        /// <summary>
        /// <para>Filter Subject Keywords</para>
        /// <para>Display Name: Hash Filter Keywords</para>
        /// </summary>
        [AttributeLogicalName("hashfilterkeywords")]
        [DisplayName("Hash Filter Keywords")]
        [MaxLength(1073741823)]
        public string HashFilterKeywords {
            get {
                return GetAttributeValue<string>("hashfilterkeywords");
            }
            set {
                SetAttributeValue("hashfilterkeywords", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of subject keywords or recipients used for correlation</para>
        /// <para>Display Name: Hash Max Count</para>
        /// </summary>
        [AttributeLogicalName("hashmaxcount")]
        [DisplayName("Hash Max Count")]
        [Range(0, 2147483647)]
        public int? HashMaxCount {
            get {
                return GetAttributeValue<int?>("hashmaxcount");
            }
            set {
                SetAttributeValue("hashmaxcount", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of recipients required to match for email messaged to be correlated</para>
        /// <para>Display Name: Hash Min Address Count</para>
        /// </summary>
        [AttributeLogicalName("hashminaddresscount")]
        [DisplayName("Hash Min Address Count")]
        [Range(0, 2147483647)]
        public int? HashMinAddressCount {
            get {
                return GetAttributeValue<int?>("hashminaddresscount");
            }
            set {
                SetAttributeValue("hashminaddresscount", value);
            }
        }
        
        /// <summary>
        /// <para>High contrast theme data for the organization.</para>
        /// <para>Display Name: High contrast Theme Data</para>
        /// </summary>
        [AttributeLogicalName("highcontrastthemedata")]
        [DisplayName("High contrast Theme Data")]
        public string HighContrastThemeData {
            get {
                return GetAttributeValue<string>("highcontrastthemedata");
            }
            set {
                SetAttributeValue("highcontrastthemedata", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.</para>
        /// <para>Display Name: ISV Integration Mode</para>
        /// </summary>
        [AttributeLogicalName("isvintegrationcode")]
        [DisplayName("ISV Integration Mode")]
        public Organization_ISVIntegrationCode? ISVIntegrationCode {
            get {
                return GetOptionSetValue<Organization_ISVIntegrationCode>("isvintegrationcode");
            }
            set {
                SetOptionSetValue("isvintegrationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether incoming email sent by internal Microsoft Dynamics 365 users or queues should be tracked.</para>
        /// <para>Display Name: Ignore Internal Email</para>
        /// </summary>
        [AttributeLogicalName("ignoreinternalemail")]
        [DisplayName("Ignore Internal Email")]
        public bool? IgnoreInternalEmail {
            get {
                return GetAttributeValue<bool?>("ignoreinternalemail");
            }
            set {
                SetAttributeValue("ignoreinternalemail", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether an organization has consented to sharing search query data to help improve search results</para>
        /// <para>Display Name: Share search query data</para>
        /// </summary>
        [AttributeLogicalName("improvesearchloggingenabled")]
        [DisplayName("Share search query data")]
        public bool? ImproveSearchLoggingEnabled {
            get {
                return GetAttributeValue<bool?>("improvesearchloggingenabled");
            }
            set {
                SetAttributeValue("improvesearchloggingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether Inactivity timeout is enabled</para>
        /// <para>Display Name: Inactivity timeout enabled</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutenabled")]
        [DisplayName("Inactivity timeout enabled")]
        public bool? InactivityTimeoutEnabled {
            get {
                return GetAttributeValue<bool?>("inactivitytimeoutenabled");
            }
            set {
                SetAttributeValue("inactivitytimeoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Inactivity timeout in minutes</para>
        /// <para>Display Name: Inactivity timeout in minutes</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutinmins")]
        [DisplayName("Inactivity timeout in minutes")]
        [Range(0, 2147483647)]
        public int? InactivityTimeoutInMins {
            get {
                return GetAttributeValue<int?>("inactivitytimeoutinmins");
            }
            set {
                SetAttributeValue("inactivitytimeoutinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Inactivity timeout reminder in minutes</para>
        /// <para>Display Name: Inactivity timeout reminder in minutes</para>
        /// </summary>
        [AttributeLogicalName("inactivitytimeoutreminderinmins")]
        [DisplayName("Inactivity timeout reminder in minutes")]
        [Range(0, 2147483647)]
        public int? InactivityTimeoutReminderInMins {
            get {
                return GetAttributeValue<int?>("inactivitytimeoutreminderinmins");
            }
            set {
                SetAttributeValue("inactivitytimeoutreminderinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.</para>
        /// <para>Display Name: Exchange Email Retrieval Batch Size</para>
        /// </summary>
        [AttributeLogicalName("incomingemailexchangeemailretrievalbatchsize")]
        [DisplayName("Exchange Email Retrieval Batch Size")]
        [Range(1, 2147483647)]
        public int? IncomingEmailExchangeEmailRetrievalBatchSize {
            get {
                return GetAttributeValue<int?>("incomingemailexchangeemailretrievalbatchsize");
            }
            set {
                SetAttributeValue("incomingemailexchangeemailretrievalbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Initial version of the organization.</para>
        /// <para>Display Name: Initial Version</para>
        /// </summary>
        [AttributeLogicalName("initialversion")]
        [DisplayName("Initial Version")]
        [MaxLength(20)]
        public string InitialVersion {
            get {
                return GetAttributeValue<string>("initialversion");
            }
            set {
                SetAttributeValue("initialversion", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the integration user for the organization.</para>
        /// <para>Display Name: Integration User</para>
        /// </summary>
        [AttributeLogicalName("integrationuserid")]
        [DisplayName("Integration User")]
        public Guid? IntegrationUserId {
            get {
                return GetAttributeValue<Guid?>("integrationuserid");
            }
            set {
                SetAttributeValue("integrationuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all invoice numbers throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Invoice Prefix</para>
        /// </summary>
        [AttributeLogicalName("invoiceprefix")]
        [DisplayName("Invoice Prefix")]
        [MaxLength(20)]
        public string InvoicePrefix {
            get {
                return GetAttributeValue<string>("invoiceprefix");
            }
            set {
                SetAttributeValue("invoiceprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Action Card should be enabled for the organization.</para>
        /// <para>Display Name: Enable Action Card for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isactioncardenabled")]
        [DisplayName("Enable Action Card for this Organization")]
        public bool? IsActionCardEnabled {
            get {
                return GetAttributeValue<bool?>("isactioncardenabled");
            }
            set {
                SetAttributeValue("isactioncardenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether Action Support Feature is enabled</para>
        /// <para>Display Name: Action Support Feature enabled</para>
        /// </summary>
        [AttributeLogicalName("isactionsupportfeatureenabled")]
        [DisplayName("Action Support Feature enabled")]
        public bool? IsActionSupportFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("isactionsupportfeatureenabled");
            }
            set {
                SetAttributeValue("isactionsupportfeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Relationship Analytics should be enabled for the organization.</para>
        /// <para>Display Name: Enable Relationship Analytics for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isactivityanalysisenabled")]
        [DisplayName("Enable Relationship Analytics for this Organization")]
        public bool? IsActivityAnalysisEnabled {
            get {
                return GetAttributeValue<bool?>("isactivityanalysisenabled");
            }
            set {
                SetAttributeValue("isactivityanalysisenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether all money attributes are converted to decimal.</para>
        /// <para>Display Name: Set if all money attributes are converted to decimal</para>
        /// </summary>
        [AttributeLogicalName("isallmoneydecimal")]
        [DisplayName("Set if all money attributes are converted to decimal")]
        public bool? IsAllMoneyDecimal {
            get {
                return GetAttributeValue<bool?>("isallmoneydecimal");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether loading of Microsoft Dynamics 365 in a browser window that does not have address, tool, and menu bars is enabled.</para>
        /// <para>Display Name: Is Application Mode Enabled</para>
        /// </summary>
        [AttributeLogicalName("isappmode")]
        [DisplayName("Is Application Mode Enabled")]
        public bool? IsAppMode {
            get {
                return GetAttributeValue<bool?>("isappmode");
            }
            set {
                SetAttributeValue("isappmode", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable attachments sync for outlook and exchange.</para>
        /// <para>Display Name: Is Attachment Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("isappointmentattachmentsyncenabled")]
        [DisplayName("Is Attachment Sync Enabled")]
        public bool? IsAppointmentAttachmentSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isappointmentattachmentsyncenabled");
            }
            set {
                SetAttributeValue("isappointmentattachmentsyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable assigned tasks sync for outlook and exchange.</para>
        /// <para>Display Name: Is Assigned Tasks Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("isassignedtaskssyncenabled")]
        [DisplayName("Is Assigned Tasks Sync Enabled")]
        public bool? IsAssignedTasksSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isassignedtaskssyncenabled");
            }
            set {
                SetAttributeValue("isassignedtaskssyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of changes.</para>
        /// <para>Display Name: Is Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isauditenabled")]
        [DisplayName("Is Auditing Enabled")]
        public bool? IsAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isauditenabled");
            }
            set {
                SetAttributeValue("isauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Auto Capture should be enabled for the organization.</para>
        /// <para>Display Name: Enable Auto Capture for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isautodatacaptureenabled")]
        [DisplayName("Enable Auto Capture for this Organization")]
        public bool? IsAutoDataCaptureEnabled {
            get {
                return GetAttributeValue<bool?>("isautodatacaptureenabled");
            }
            set {
                SetAttributeValue("isautodatacaptureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the V2 feature of Auto Capture should be enabled for the organization.</para>
        /// <para>Display Name: Enable Auto Capture V2 for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isautodatacapturev2enabled")]
        [DisplayName("Enable Auto Capture V2 for this Organization")]
        public bool? IsAutoDataCaptureV2Enabled {
            get {
                return GetAttributeValue<bool?>("isautodatacapturev2enabled");
            }
            set {
                SetAttributeValue("isautodatacapturev2enabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether auto save is enabled.</para>
        /// <para>Display Name: Auto Save Enabled</para>
        /// </summary>
        [AttributeLogicalName("isautosaveenabled")]
        [DisplayName("Auto Save Enabled")]
        public bool? IsAutoSaveEnabled {
            get {
                return GetAttributeValue<bool?>("isautosaveenabled");
            }
            set {
                SetAttributeValue("isautosaveenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether BPF Entity Customization Feature is enabled</para>
        /// <para>Display Name: BPF Entity Customization Feature enabled</para>
        /// </summary>
        [AttributeLogicalName("isbpfentitycustomizationfeatureenabled")]
        [DisplayName("BPF Entity Customization Feature enabled")]
        public bool? IsBPFEntityCustomizationFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("isbpfentitycustomizationfeatureenabled");
            }
            set {
                SetAttributeValue("isbpfentitycustomizationfeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Determines whether users can make use of basic Geospatial featuers in Canvas apps.</para>
        /// <para>Display Name: Enable the basic Geospatial features in Canvas Apps</para>
        /// </summary>
        [AttributeLogicalName("isbasicgeospatialintegrationenabled")]
        [DisplayName("Enable the basic Geospatial features in Canvas Apps")]
        public bool? IsBasicGeospatialIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("isbasicgeospatialintegrationenabled");
            }
            set {
                SetAttributeValue("isbasicgeospatialintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IsCollaborationExperienceEnabled</para>
        /// </summary>
        [AttributeLogicalName("iscollaborationexperienceenabled")]
        [DisplayName("IsCollaborationExperienceEnabled")]
        public bool? IsCollaborationExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("iscollaborationexperienceenabled");
            }
            set {
                SetAttributeValue("iscollaborationexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether conflict detection for mobile client is enabled.</para>
        /// <para>Display Name: Is Conflict Detection for Mobile Client enabled</para>
        /// </summary>
        [AttributeLogicalName("isconflictdetectionenabledformobileclient")]
        [DisplayName("Is Conflict Detection for Mobile Client enabled")]
        public bool? IsConflictDetectionEnabledForMobileClient {
            get {
                return GetAttributeValue<bool?>("isconflictdetectionenabledformobileclient");
            }
            set {
                SetAttributeValue("isconflictdetectionenabledformobileclient", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable mailing address sync for outlook and exchange.</para>
        /// <para>Display Name: Is Mailing Address Sync Enabled</para>
        /// </summary>
        [AttributeLogicalName("iscontactmailingaddresssyncenabled")]
        [DisplayName("Is Mailing Address Sync Enabled")]
        public bool? IsContactMailingAddressSyncEnabled {
            get {
                return GetAttributeValue<bool?>("iscontactmailingaddresssyncenabled");
            }
            set {
                SetAttributeValue("iscontactmailingaddresssyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Content Security Policy has been enabled for the organization.</para>
        /// <para>Display Name: Enable Content Security Policy for this organization</para>
        /// </summary>
        [AttributeLogicalName("iscontentsecuritypolicyenabled")]
        [DisplayName("Enable Content Security Policy for this organization")]
        public bool? IsContentSecurityPolicyEnabled {
            get {
                return GetAttributeValue<bool?>("iscontentsecuritypolicyenabled");
            }
            set {
                SetAttributeValue("iscontentsecuritypolicyenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Content Security Policy has been enabled for this organization's Canvas apps.</para>
        /// <para>Display Name: Enable Content Security Policy for this organization's Canvas apps</para>
        /// </summary>
        [AttributeLogicalName("iscontentsecuritypolicyenabledforcanvas")]
        [DisplayName("Enable Content Security Policy for this organization\'s Canvas apps")]
        public bool? IsContentSecurityPolicyEnabledForCanvas {
            get {
                return GetAttributeValue<bool?>("iscontentsecuritypolicyenabledforcanvas");
            }
            set {
                SetAttributeValue("iscontentsecuritypolicyenabledforcanvas", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Contextual email experience is enabled on this organization</para>
        /// <para>Display Name: Indicates whether Contextual email experience is enabled on this organization</para>
        /// </summary>
        [AttributeLogicalName("iscontextualemailenabled")]
        [DisplayName("Indicates whether Contextual email experience is enabled on this organization")]
        public bool? IsContextualEmailEnabled {
            get {
                return GetAttributeValue<bool?>("iscontextualemailenabled");
            }
            set {
                SetAttributeValue("iscontextualemailenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Select to enable Contextual Help in UCI.</para>
        /// <para>Display Name: Enables Contextual Help in UCI</para>
        /// </summary>
        [AttributeLogicalName("iscontextualhelpenabled")]
        [DisplayName("Enables Contextual Help in UCI")]
        public bool? IsContextualHelpEnabled {
            get {
                return GetAttributeValue<bool?>("iscontextualhelpenabled");
            }
            set {
                SetAttributeValue("iscontextualhelpenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Custom Controls in canvas PowerApps feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Custom Controls in canvas PowerApps feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("iscustomcontrolsincanvasappsenabled")]
        [DisplayName("Enable Custom Controls in canvas PowerApps feature for this organization")]
        public bool? IsCustomControlsInCanvasAppsEnabled {
            get {
                return GetAttributeValue<bool?>("iscustomcontrolsincanvasappsenabled");
            }
            set {
                SetAttributeValue("iscustomcontrolsincanvasappsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable country code selection.</para>
        /// <para>Display Name: Enable or disable country code selection</para>
        /// </summary>
        [AttributeLogicalName("isdefaultcountrycodecheckenabled")]
        [DisplayName("Enable or disable country code selection")]
        public bool? IsDefaultCountryCodeCheckEnabled {
            get {
                return GetAttributeValue<bool?>("isdefaultcountrycodecheckenabled");
            }
            set {
                SetAttributeValue("isdefaultcountrycodecheckenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Delegation Access content</para>
        /// <para>Display Name: Is Delegation Access Enabled</para>
        /// </summary>
        [AttributeLogicalName("isdelegateaccessenabled")]
        [DisplayName("Is Delegation Access Enabled")]
        public bool? IsDelegateAccessEnabled {
            get {
                return GetAttributeValue<bool?>("isdelegateaccessenabled");
            }
            set {
                SetAttributeValue("isdelegateaccessenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Action Hub should be enabled for the organization.</para>
        /// <para>Display Name: Enable Action Hub for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isdelveactionhubintegrationenabled")]
        [DisplayName("Enable Action Hub for this Organization")]
        public bool? IsDelveActionHubIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("isdelveactionhubintegrationenabled");
            }
            set {
                SetAttributeValue("isdelveactionhubintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether v2 schema for Desktop Flows is enabled in this organization.</para>
        /// <para>Display Name: Enable v2 schema for Desktop Flows in this organization.</para>
        /// </summary>
        [AttributeLogicalName("isdesktopflowschemav2enabled")]
        [DisplayName("Enable v2 schema for Desktop Flows in this organization.")]
        public bool? IsDesktopFlowSchemaV2Enabled {
            get {
                return GetAttributeValue<bool?>("isdesktopflowschemav2enabled");
            }
            set {
                SetAttributeValue("isdesktopflowschemav2enabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the organization is disabled.</para>
        /// <para>Display Name: Is Organization Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Organization Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabled")]
        [DisplayName("Is Duplicate Detection Enabled")]
        public bool? IsDuplicateDetectionEnabled {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabled");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records during import is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled For Import</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforimport")]
        [DisplayName("Is Duplicate Detection Enabled For Import")]
        public bool? IsDuplicateDetectionEnabledForImport {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforimport");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforimport", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection of records during offline synchronization is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled For Offline Synchronization</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforofflinesync")]
        [DisplayName("Is Duplicate Detection Enabled For Offline Synchronization")]
        public bool? IsDuplicateDetectionEnabledForOfflineSync {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforofflinesync");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforofflinesync", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether duplicate detection during online create or update is enabled.</para>
        /// <para>Display Name: Is Duplicate Detection Enabled for Online Create/Update</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledforonlinecreateupdate")]
        [DisplayName("Is Duplicate Detection Enabled for Online Create/Update")]
        public bool? IsDuplicateDetectionEnabledForOnlineCreateUpdate {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledforonlinecreateupdate");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledforonlinecreateupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Allow tracking recipient activity on sent emails.</para>
        /// <para>Display Name: Allow tracking recipient activity on sent emails</para>
        /// </summary>
        [AttributeLogicalName("isemailmonitoringallowed")]
        [DisplayName("Allow tracking recipient activity on sent emails")]
        public bool? IsEmailMonitoringAllowed {
            get {
                return GetAttributeValue<bool?>("isemailmonitoringallowed");
            }
            set {
                SetAttributeValue("isemailmonitoringallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Email Server Profile content filtering</para>
        /// <para>Display Name: Is Email Server Profile Content Filtering Enabled</para>
        /// </summary>
        [AttributeLogicalName("isemailserverprofilecontentfilteringenabled")]
        [DisplayName("Is Email Server Profile Content Filtering Enabled")]
        public bool? IsEmailServerProfileContentFilteringEnabled {
            get {
                return GetAttributeValue<bool?>("isemailserverprofilecontentfilteringenabled");
            }
            set {
                SetAttributeValue("isemailserverprofilecontentfilteringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether appmodule is enabled for all roles</para>
        /// <para>Display Name: option set values for isenabledforallroles</para>
        /// </summary>
        [AttributeLogicalName("isenabledforallroles")]
        [DisplayName("option set values for isenabledforallroles")]
        public bool? IsEnabledForAllRoles {
            get {
                return GetAttributeValue<bool?>("isenabledforallroles");
            }
            set {
                SetAttributeValue("isenabledforallroles", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the organization's files are being stored in Azure.</para>
        /// <para>Display Name: Enable external file storage</para>
        /// </summary>
        [AttributeLogicalName("isexternalfilestorageenabled")]
        [DisplayName("Enable external file storage")]
        public bool? IsExternalFileStorageEnabled {
            get {
                return GetAttributeValue<bool?>("isexternalfilestorageenabled");
            }
            set {
                SetAttributeValue("isexternalfilestorageenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether data can be synchronized with an external search index.</para>
        /// <para>Display Name: Enable external search data syncing</para>
        /// </summary>
        [AttributeLogicalName("isexternalsearchindexenabled")]
        [DisplayName("Enable external search data syncing")]
        public bool? IsExternalSearchIndexEnabled {
            get {
                return GetAttributeValue<bool?>("isexternalsearchindexenabled");
            }
            set {
                SetAttributeValue("isexternalsearchindexenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the fiscal period is displayed as the month number.</para>
        /// <para>Display Name: Is Fiscal Period Monthly</para>
        /// </summary>
        [AttributeLogicalName("isfiscalperiodmonthbased")]
        [DisplayName("Is Fiscal Period Monthly")]
        public bool? IsFiscalPeriodMonthBased {
            get {
                return GetAttributeValue<bool?>("isfiscalperiodmonthbased");
            }
            set {
                SetAttributeValue("isfiscalperiodmonthbased", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether folders should be automatically created on SharePoint.</para>
        /// <para>Display Name: Automatically create folders</para>
        /// </summary>
        [AttributeLogicalName("isfolderautocreatedonsp")]
        [DisplayName("Automatically create folders")]
        public bool? IsFolderAutoCreatedonSP {
            get {
                return GetAttributeValue<bool?>("isfolderautocreatedonsp");
            }
            set {
                SetAttributeValue("isfolderautocreatedonsp", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable folder based tracking for Server Side Sync.</para>
        /// <para>Display Name: Is Folder Based Tracking Enabled</para>
        /// </summary>
        [AttributeLogicalName("isfolderbasedtrackingenabled")]
        [DisplayName("Is Folder Based Tracking Enabled")]
        public bool? IsFolderBasedTrackingEnabled {
            get {
                return GetAttributeValue<bool?>("isfolderbasedtrackingenabled");
            }
            set {
                SetAttributeValue("isfolderbasedtrackingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether full-text search for Quick Find entities should be enabled for the organization.</para>
        /// <para>Display Name: Enable Full-text search for Quick Find</para>
        /// </summary>
        [AttributeLogicalName("isfulltextsearchenabled")]
        [DisplayName("Enable Full-text search for Quick Find")]
        public bool? IsFullTextSearchEnabled {
            get {
                return GetAttributeValue<bool?>("isfulltextsearchenabled");
            }
            set {
                SetAttributeValue("isfulltextsearchenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether geospatial capabilities leveraging Azure Maps are enabled.</para>
        /// <para>Display Name: Enable geospatial Azure Maps integration.</para>
        /// </summary>
        [AttributeLogicalName("isgeospatialazuremapsintegrationenabled")]
        [DisplayName("Enable geospatial Azure Maps integration.")]
        public bool? IsGeospatialAzureMapsIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("isgeospatialazuremapsintegrationenabled");
            }
            set {
                SetAttributeValue("isgeospatialazuremapsintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable Hierarchical Security Model</para>
        /// <para>Display Name: Enable Hierarchical Security Model</para>
        /// </summary>
        [AttributeLogicalName("ishierarchicalsecuritymodelenabled")]
        [DisplayName("Enable Hierarchical Security Model")]
        public bool? IsHierarchicalSecurityModelEnabled {
            get {
                return GetAttributeValue<bool?>("ishierarchicalsecuritymodelenabled");
            }
            set {
                SetAttributeValue("ishierarchicalsecuritymodelenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether data collection for ideas in canvas PowerApps has been enabled.</para>
        /// <para>Display Name: Enable Ideas data collection.</para>
        /// </summary>
        [AttributeLogicalName("isideasdatacollectionenabled")]
        [DisplayName("Enable Ideas data collection.")]
        public bool? IsIdeasDataCollectionEnabled {
            get {
                return GetAttributeValue<bool?>("isideasdatacollectionenabled");
            }
            set {
                SetAttributeValue("isideasdatacollectionenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Give Consent to use LUIS in Dynamics 365 Bot</para>
        /// <para>Display Name: LUIS Consent for Dynamics 365 Bot</para>
        /// </summary>
        [AttributeLogicalName("isluisenabledford365bot")]
        [DisplayName("LUIS Consent for Dynamics 365 Bot")]
        public bool? IsLUISEnabledforD365Bot {
            get {
                return GetAttributeValue<bool?>("isluisenabledford365bot");
            }
            set {
                SetAttributeValue("isluisenabledford365bot", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams Collaboration feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams Collaboration for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismsteamscollaborationenabled")]
        [DisplayName("Enable Microsoft Teams Collaboration for this organization")]
        public bool? IsMSTeamsCollaborationEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamscollaborationenabled");
            }
            set {
                SetAttributeValue("ismsteamscollaborationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams integration has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams integration</para>
        /// </summary>
        [AttributeLogicalName("ismsteamsenabled")]
        [DisplayName("Enable Microsoft Teams integration")]
        public bool? IsMSTeamsEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamsenabled");
            }
            set {
                SetAttributeValue("ismsteamsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the user has enabled or disabled Microsoft Teams integration.</para>
        /// <para>Display Name: Microsoft Teams integration changed by user</para>
        /// </summary>
        [AttributeLogicalName("ismsteamssettingchangedbyuser")]
        [DisplayName("Microsoft Teams integration changed by user")]
        public bool? IsMSTeamsSettingChangedByUser {
            get {
                return GetAttributeValue<bool?>("ismsteamssettingchangedbyuser");
            }
            set {
                SetAttributeValue("ismsteamssettingchangedbyuser", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Microsoft Teams User Sync feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Microsoft Teams User Sync for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismsteamsusersyncenabled")]
        [DisplayName("Enable Microsoft Teams User Sync for this organization")]
        public bool? IsMSTeamsUserSyncEnabled {
            get {
                return GetAttributeValue<bool?>("ismsteamsusersyncenabled");
            }
            set {
                SetAttributeValue("ismsteamsusersyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable forced unlocking for Server Side Sync mailboxes.</para>
        /// <para>Display Name: Is Mailbox Forced Unlocking Enabled</para>
        /// </summary>
        [AttributeLogicalName("ismailboxforcedunlockingenabled")]
        [DisplayName("Is Mailbox Forced Unlocking Enabled")]
        public bool? IsMailboxForcedUnlockingEnabled {
            get {
                return GetAttributeValue<bool?>("ismailboxforcedunlockingenabled");
            }
            set {
                SetAttributeValue("ismailboxforcedunlockingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable mailbox keep alive for Server Side Sync.</para>
        /// <para>Display Name: Is Mailbox Keep Alive Enabled</para>
        /// </summary>
        [AttributeLogicalName("ismailboxinactivebackoffenabled")]
        [DisplayName("Is Mailbox Keep Alive Enabled")]
        public bool? IsMailboxInactiveBackoffEnabled {
            get {
                return GetAttributeValue<bool?>("ismailboxinactivebackoffenabled");
            }
            set {
                SetAttributeValue("ismailboxinactivebackoffenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Manual Sales Forecasting feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable Manual Sales Forecasting feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ismanualsalesforecastingenabled")]
        [DisplayName("Enable Manual Sales Forecasting feature for this organization")]
        public bool? IsManualSalesForecastingEnabled {
            get {
                return GetAttributeValue<bool?>("ismanualsalesforecastingenabled");
            }
            set {
                SetAttributeValue("ismanualsalesforecastingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether mobile client on demand sync is enabled.</para>
        /// <para>Display Name: Is Mobile Client On Demand Sync enabled</para>
        /// </summary>
        [AttributeLogicalName("ismobileclientondemandsyncenabled")]
        [DisplayName("Is Mobile Client On Demand Sync enabled")]
        public bool? IsMobileClientOnDemandSyncEnabled {
            get {
                return GetAttributeValue<bool?>("ismobileclientondemandsyncenabled");
            }
            set {
                SetAttributeValue("ismobileclientondemandsyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature MobileOffline should be enabled for the organization.</para>
        /// <para>Display Name: Enable MobileOffline for this Organization</para>
        /// </summary>
        [AttributeLogicalName("ismobileofflineenabled")]
        [DisplayName("Enable MobileOffline for this Organization")]
        public bool? IsMobileOfflineEnabled {
            get {
                return GetAttributeValue<bool?>("ismobileofflineenabled");
            }
            set {
                SetAttributeValue("ismobileofflineenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Model Apps can be embedded within Microsoft Teams. This is a tenant admin controlled preview/experimental feature.</para>
        /// <para>Display Name: Enable embedding Model Apps in Microsoft Teams</para>
        /// </summary>
        [AttributeLogicalName("ismodeldrivenappsinmsteamsenabled")]
        [DisplayName("Enable embedding Model Apps in Microsoft Teams")]
        public bool? IsModelDrivenAppsInMSTeamsEnabled {
            get {
                return GetAttributeValue<bool?>("ismodeldrivenappsinmsteamsenabled");
            }
            set {
                SetAttributeValue("ismodeldrivenappsinmsteamsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether new add product experience is enabled.</para>
        /// <para>Display Name: Indicates whether new add product experience is enabled in opportunity form</para>
        /// </summary>
        [AttributeLogicalName("isnewaddproductexperienceenabled")]
        [DisplayName("Indicates whether new add product experience is enabled in opportunity form")]
        public bool? IsNewAddProductExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("isnewaddproductexperienceenabled");
            }
            set {
                SetAttributeValue("isnewaddproductexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Notes Analysis should be enabled for the organization.</para>
        /// <para>Display Name: Enable Notes Analysis for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isnotesanalysisenabled")]
        [DisplayName("Enable Notes Analysis for this Organization")]
        public bool? IsNotesAnalysisEnabled {
            get {
                return GetAttributeValue<bool?>("isnotesanalysisenabled");
            }
            set {
                SetAttributeValue("isnotesanalysisenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature OfficeGraph should be enabled for the organization.</para>
        /// <para>Display Name: Enable OfficeGraph for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isofficegraphenabled")]
        [DisplayName("Enable OfficeGraph for this Organization")]
        public bool? IsOfficeGraphEnabled {
            get {
                return GetAttributeValue<bool?>("isofficegraphenabled");
            }
            set {
                SetAttributeValue("isofficegraphenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature One Drive should be enabled for the organization.</para>
        /// <para>Display Name: Enable One Drive for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isonedriveenabled")]
        [DisplayName("Enable One Drive for this Organization")]
        public bool? IsOneDriveEnabled {
            get {
                return GetAttributeValue<bool?>("isonedriveenabled");
            }
            set {
                SetAttributeValue("isonedriveenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PAI feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable PAI feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ispaienabled")]
        [DisplayName("Enable PAI feature for this organization")]
        public bool? IsPAIEnabled {
            get {
                return GetAttributeValue<bool?>("ispaienabled");
            }
            set {
                SetAttributeValue("ispaienabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PDF Generation feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable PDF Generation feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("ispdfgenerationenabled")]
        [DisplayName("Enable PDF Generation feature for this organization")]
        [MaxLength(1000)]
        public string IsPDFGenerationEnabled {
            get {
                return GetAttributeValue<string>("ispdfgenerationenabled");
            }
            set {
                SetAttributeValue("ispdfgenerationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether playbook feature has been enabled for the organization.</para>
        /// <para>Display Name: Enable playbook feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isplaybookenabled")]
        [DisplayName("Enable playbook feature for this organization")]
        public bool? IsPlaybookEnabled {
            get {
                return GetAttributeValue<bool?>("isplaybookenabled");
            }
            set {
                SetAttributeValue("isplaybookenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether IM presence is enabled.</para>
        /// <para>Display Name: Presence Enabled</para>
        /// </summary>
        [AttributeLogicalName("ispresenceenabled")]
        [DisplayName("Presence Enabled")]
        public bool? IsPresenceEnabled {
            get {
                return GetAttributeValue<bool?>("ispresenceenabled");
            }
            set {
                SetAttributeValue("ispresenceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Preview feature for Action Card should be enabled for the organization.</para>
        /// <para>Display Name: Enable Preview Action Card feature for this Organization</para>
        /// </summary>
        [AttributeLogicalName("ispreviewenabledforactioncard")]
        [DisplayName("Enable Preview Action Card feature for this Organization")]
        public bool? IsPreviewEnabledForActionCard {
            get {
                return GetAttributeValue<bool?>("ispreviewenabledforactioncard");
            }
            set {
                SetAttributeValue("ispreviewenabledforactioncard", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.</para>
        /// <para>Display Name: Enable Auto Capture for this Organization at Preview Settings</para>
        /// </summary>
        [AttributeLogicalName("ispreviewforautocaptureenabled")]
        [DisplayName("Enable Auto Capture for this Organization at Preview Settings")]
        public bool? IsPreviewForAutoCaptureEnabled {
            get {
                return GetAttributeValue<bool?>("ispreviewforautocaptureenabled");
            }
            set {
                SetAttributeValue("ispreviewforautocaptureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Is Preview For Email Monitoring Allowed.</para>
        /// <para>Display Name: Allows Preview For Email Monitoring</para>
        /// </summary>
        [AttributeLogicalName("ispreviewforemailmonitoringallowed")]
        [DisplayName("Allows Preview For Email Monitoring")]
        public bool? IsPreviewForEmailMonitoringAllowed {
            get {
                return GetAttributeValue<bool?>("ispreviewforemailmonitoringallowed");
            }
            set {
                SetAttributeValue("ispreviewforemailmonitoringallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether PriceList is mandatory for adding existing products to sales entities.</para>
        /// <para>Display Name: Indicates whether PriceList is mandatory for adding existing products to sales entities</para>
        /// </summary>
        [AttributeLogicalName("ispricelistmandatory")]
        [DisplayName("Indicates whether PriceList is mandatory for adding existing products to sales en" +
            "tities")]
        public bool? IsPriceListMandatory {
            get {
                return GetAttributeValue<bool?>("ispricelistmandatory");
            }
            set {
                SetAttributeValue("ispricelistmandatory", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use the standard Out-of-box Opportunity Close experience or opt to for a customized experience.</para>
        /// <para>Display Name: Enable quick create form for opportunity close feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isquickcreateenabledforopportunityclose")]
        [DisplayName("Enable quick create form for opportunity close feature for this organization")]
        public bool? IsQuickCreateEnabledForOpportunityClose {
            get {
                return GetAttributeValue<bool?>("isquickcreateenabledforopportunityclose");
            }
            set {
                SetAttributeValue("isquickcreateenabledforopportunityclose", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of read operations.</para>
        /// <para>Display Name: Is Read Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isreadauditenabled")]
        [DisplayName("Is Read Auditing Enabled")]
        public bool? IsReadAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isreadauditenabled");
            }
            set {
                SetAttributeValue("isreadauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the feature Relationship Insights should be enabled for the organization.</para>
        /// <para>Display Name: Enable Relationship Insights for this Organization</para>
        /// </summary>
        [AttributeLogicalName("isrelationshipinsightsenabled")]
        [DisplayName("Enable Relationship Insights for this Organization")]
        public bool? IsRelationshipInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("isrelationshipinsightsenabled");
            }
            set {
                SetAttributeValue("isrelationshipinsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the synchronization of user resource booking with Exchange is enabled at organization level.</para>
        /// <para>Display Name: Resource booking synchronization enabled</para>
        /// </summary>
        [AttributeLogicalName("isresourcebookingexchangesyncenabled")]
        [DisplayName("Resource booking synchronization enabled")]
        public bool? IsResourceBookingExchangeSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isresourcebookingexchangesyncenabled");
            }
            set {
                SetAttributeValue("isresourcebookingexchangesyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether rich text editor for notes experience is enabled on this organization</para>
        /// <para>Display Name: Indicates whether rich text editor for notes experience is enabled on this organization</para>
        /// </summary>
        [AttributeLogicalName("isrichtextnotesenabled")]
        [DisplayName("Indicates whether rich text editor for notes experience is enabled on this organi" +
            "zation")]
        public bool? IsRichTextNotesEnabled {
            get {
                return GetAttributeValue<bool?>("isrichtextnotesenabled");
            }
            set {
                SetAttributeValue("isrichtextnotesenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether AAD Join for RPA Autoscale is enabled in this organization..</para>
        /// <para>Display Name: Enable AAD Join for RPA Autoscale feature for this organization.</para>
        /// </summary>
        [AttributeLogicalName("isrpaautoscaleaadjoinenabled")]
        [DisplayName("Enable AAD Join for RPA Autoscale feature for this organization.")]
        public bool? IsRpaAutoscaleAadJoinEnabled {
            get {
                return GetAttributeValue<bool?>("isrpaautoscaleaadjoinenabled");
            }
            set {
                SetAttributeValue("isrpaautoscaleaadjoinenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Autoscale feature for RPA is enabled in this organization.</para>
        /// <para>Display Name: Enable RPA Autoscale feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isrpaautoscaleenabled")]
        [DisplayName("Enable RPA Autoscale feature for this organization")]
        public bool? IsRpaAutoscaleEnabled {
            get {
                return GetAttributeValue<bool?>("isrpaautoscaleenabled");
            }
            set {
                SetAttributeValue("isrpaautoscaleenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether RPA Box feature is enabled in this organization.</para>
        /// <para>Display Name: Enable RPA Box feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isrpaboxenabled")]
        [DisplayName("Enable RPA Box feature for this organization")]
        public bool? IsRpaBoxEnabled {
            get {
                return GetAttributeValue<bool?>("isrpaboxenabled");
            }
            set {
                SetAttributeValue("isrpaboxenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Unattended runs feature for RPA is enabled in this organization.</para>
        /// <para>Display Name: Enable RPA Unattended feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("isrpaunattendedenabled")]
        [DisplayName("Enable RPA Unattended feature for this organization")]
        public bool? IsRpaUnattendedEnabled {
            get {
                return GetAttributeValue<bool?>("isrpaunattendedenabled");
            }
            set {
                SetAttributeValue("isrpaunattendedenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable sales order processing integration.</para>
        /// <para>Display Name: Is Sales Order Integration Enabled</para>
        /// </summary>
        [AttributeLogicalName("issopintegrationenabled")]
        [DisplayName("Is Sales Order Integration Enabled")]
        public bool? IsSOPIntegrationEnabled {
            get {
                return GetAttributeValue<bool?>("issopintegrationenabled");
            }
            set {
                SetAttributeValue("issopintegrationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Sales Assistant mobile app has been enabled for the organization.</para>
        /// <para>Display Name: Enable Sales Assistant mobile app</para>
        /// </summary>
        [AttributeLogicalName("issalesassistantenabled")]
        [DisplayName("Enable Sales Assistant mobile app")]
        public bool? IsSalesAssistantEnabled {
            get {
                return GetAttributeValue<bool?>("issalesassistantenabled");
            }
            set {
                SetAttributeValue("issalesassistantenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IsSharingInOrgAllowed</para>
        /// </summary>
        [AttributeLogicalName("issharinginorgallowed")]
        [DisplayName("IsSharingInOrgAllowed")]
        public bool? IsSharingInOrgAllowed {
            get {
                return GetAttributeValue<bool?>("issharinginorgallowed");
            }
            set {
                SetAttributeValue("issharinginorgallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether text wrap is enabled.</para>
        /// <para>Display Name: Enable Text Wrap</para>
        /// </summary>
        [AttributeLogicalName("istextwrapenabled")]
        [DisplayName("Enable Text Wrap")]
        public bool? IsTextWrapEnabled {
            get {
                return GetAttributeValue<bool?>("istextwrapenabled");
            }
            set {
                SetAttributeValue("istextwrapenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable auditing of user access.</para>
        /// <para>Display Name: Is User Access Auditing Enabled</para>
        /// </summary>
        [AttributeLogicalName("isuseraccessauditenabled")]
        [DisplayName("Is User Access Auditing Enabled")]
        public bool? IsUserAccessAuditEnabled {
            get {
                return GetAttributeValue<bool?>("isuseraccessauditenabled");
            }
            set {
                SetAttributeValue("isuseraccessauditenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoice or not.</para>
        /// <para>Display Name: Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoice or not</para>
        /// </summary>
        [AttributeLogicalName("iswriteinproductsallowed")]
        [DisplayName("Indicates whether Write-in Products can be added to Opportunity/Quote/Order/Invoi" +
            "ce or not")]
        public bool? IsWriteInProductsAllowed {
            get {
                return GetAttributeValue<bool?>("iswriteinproductsallowed");
            }
            set {
                SetAttributeValue("iswriteinproductsallowed", value);
            }
        }
        
        /// <summary>
        /// <para>XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.</para>
        /// <para>Display Name: Knowledge Management Settings</para>
        /// </summary>
        [AttributeLogicalName("kmsettings")]
        [DisplayName("Knowledge Management Settings")]
        [MaxLength(1073741823)]
        public string KMSettings {
            get {
                return GetAttributeValue<string>("kmsettings");
            }
            set {
                SetAttributeValue("kmsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Type the prefix to use for all knowledge articles in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Knowledge Article Prefix</para>
        /// </summary>
        [AttributeLogicalName("kaprefix")]
        [DisplayName("Knowledge Article Prefix")]
        [MaxLength(20)]
        public string KaPrefix {
            get {
                return GetAttributeValue<string>("kaprefix");
            }
            set {
                SetAttributeValue("kaprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all articles in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Article Prefix</para>
        /// </summary>
        [AttributeLogicalName("kbprefix")]
        [DisplayName("Article Prefix")]
        [MaxLength(20)]
        public string KbPrefix {
            get {
                return GetAttributeValue<string>("kbprefix");
            }
            set {
                SetAttributeValue("kbprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred language for the organization.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the locale of the organization.</para>
        /// <para>Display Name: Locale</para>
        /// </summary>
        [AttributeLogicalName("localeid")]
        [DisplayName("Locale")]
        [Range(0, 2147483647)]
        public int? LocaleId {
            get {
                return GetAttributeValue<int?>("localeid");
            }
            set {
                SetAttributeValue("localeid", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the Long Date format is displayed in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Long Date Format</para>
        /// </summary>
        [AttributeLogicalName("longdateformatcode")]
        [DisplayName("Long Date Format")]
        [Range(-2147483648, 2147483647)]
        public int? LongDateFormatCode {
            get {
                return GetAttributeValue<int?>("longdateformatcode");
            }
            set {
                SetAttributeValue("longdateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of characters that should be entered in the lookup control before resolving for suggestions</para>
        /// <para>Display Name: Minimum number of characters before resolving suggestions in lookup</para>
        /// </summary>
        [AttributeLogicalName("lookupcharactercountbeforeresolve")]
        [DisplayName("Minimum number of characters before resolving suggestions in lookup")]
        [Range(0, 2147483647)]
        public int? LookupCharacterCountBeforeResolve {
            get {
                return GetAttributeValue<int?>("lookupcharactercountbeforeresolve");
            }
            set {
                SetAttributeValue("lookupcharactercountbeforeresolve", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum delay (in milliseconds) between consecutive inputs in a lookup control that will trigger a search for suggestions</para>
        /// <para>Display Name: Minimum delay (in milliseconds) for debouncing lookup control input</para>
        /// </summary>
        [AttributeLogicalName("lookupresolvedelayms")]
        [DisplayName("Minimum delay (in milliseconds) for debouncing lookup control input")]
        [Range(250, 2147483647)]
        public int? LookupResolveDelayMS {
            get {
                return GetAttributeValue<int?>("lookupresolvedelayms");
            }
            set {
                SetAttributeValue("lookupresolvedelayms", value);
            }
        }
        
        /// <summary>
        /// <para>Lower Threshold For Mailbox Intermittent Issue.</para>
        /// <para>Display Name: Lower Threshold For Mailbox Intermittent Issue</para>
        /// </summary>
        [AttributeLogicalName("mailboxintermittentissueminrange")]
        [DisplayName("Lower Threshold For Mailbox Intermittent Issue")]
        [Range(-2147483648, 2147483647)]
        public int? MailboxIntermittentIssueMinRange {
            get {
                return GetAttributeValue<int?>("mailboxintermittentissueminrange");
            }
            set {
                SetAttributeValue("mailboxintermittentissueminrange", value);
            }
        }
        
        /// <summary>
        /// <para>Lower Threshold For Mailbox Permanent Issue.</para>
        /// <para>Display Name: Lower Threshold For Mailbox Permanent Issue.</para>
        /// </summary>
        [AttributeLogicalName("mailboxpermanentissueminrange")]
        [DisplayName("Lower Threshold For Mailbox Permanent Issue.")]
        [Range(-2147483648, 2147483647)]
        public int? MailboxPermanentIssueMinRange {
            get {
                return GetAttributeValue<int?>("mailboxpermanentissueminrange");
            }
            set {
                SetAttributeValue("mailboxpermanentissueminrange", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of actionsteps allowed in a BPF</para>
        /// <para>Display Name: Maximum number of actionsteps allowed in a BPF</para>
        /// </summary>
        [AttributeLogicalName("maxactionstepsinbpf")]
        [DisplayName("Maximum number of actionsteps allowed in a BPF")]
        [Range(0, 100)]
        public int? MaxActionStepsInBPF {
            get {
                return GetAttributeValue<int?>("maxactionstepsinbpf");
            }
            set {
                SetAttributeValue("maxactionstepsinbpf", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum Allowed Pending Rollup Job Count</para>
        /// <para>Display Name: MaxAllowedPendingRollupJobCount</para>
        /// </summary>
        [AttributeLogicalName("maxallowedpendingrollupjobcount")]
        [DisplayName("MaxAllowedPendingRollupJobCount")]
        [Range(0, 2147483647)]
        public int? MaxAllowedPendingRollupJobCount {
            get {
                return GetAttributeValue<int?>("maxallowedpendingrollupjobcount");
            }
            set {
                SetAttributeValue("maxallowedpendingrollupjobcount", value);
            }
        }
        
        /// <summary>
        /// <para>Percentage Of Entity Table Size For Kicking Off Bootstrap Job</para>
        /// <para>Display Name: MaxAllowedPendingRollupJobPercentage</para>
        /// </summary>
        [AttributeLogicalName("maxallowedpendingrollupjobpercentage")]
        [DisplayName("MaxAllowedPendingRollupJobPercentage")]
        [Range(0, 100)]
        public int? MaxAllowedPendingRollupJobPercentage {
            get {
                return GetAttributeValue<int?>("maxallowedpendingrollupjobpercentage");
            }
            set {
                SetAttributeValue("maxallowedpendingrollupjobpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of days an appointment can last.</para>
        /// <para>Display Name: Max Appointment Duration</para>
        /// </summary>
        [AttributeLogicalName("maxappointmentdurationdays")]
        [DisplayName("Max Appointment Duration")]
        [Range(0, 2147483647)]
        public int? MaxAppointmentDurationDays {
            get {
                return GetAttributeValue<int?>("maxappointmentdurationdays");
            }
            set {
                SetAttributeValue("maxappointmentdurationdays", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of conditions allowed for mobile offline filters</para>
        /// <para>Display Name: Maximum number of conditions allowed for mobile offline filters</para>
        /// </summary>
        [AttributeLogicalName("maxconditionsformobileofflinefilters")]
        [DisplayName("Maximum number of conditions allowed for mobile offline filters")]
        [Range(0, 2147483647)]
        public int? MaxConditionsForMobileOfflineFilters {
            get {
                return GetAttributeValue<int?>("maxconditionsformobileofflinefilters");
            }
            set {
                SetAttributeValue("maxconditionsformobileofflinefilters", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum depth for hierarchy security propagation.</para>
        /// <para>Display Name: Maximum depth for hierarchy security propagation.</para>
        /// </summary>
        [AttributeLogicalName("maxdepthforhierarchicalsecuritymodel")]
        [DisplayName("Maximum depth for hierarchy security propagation.")]
        [Range(-2147483648, 2147483647)]
        public int? MaxDepthForHierarchicalSecurityModel {
            get {
                return GetAttributeValue<int?>("maxdepthforhierarchicalsecuritymodel");
            }
            set {
                SetAttributeValue("maxdepthforhierarchicalsecuritymodel", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of Folder Based Tracking mappings user can add</para>
        /// <para>Display Name: Max Folder Based Tracking Mappings</para>
        /// </summary>
        [AttributeLogicalName("maxfolderbasedtrackingmappings")]
        [DisplayName("Max Folder Based Tracking Mappings")]
        [Range(1, 25)]
        public int? MaxFolderBasedTrackingMappings {
            get {
                return GetAttributeValue<int?>("maxfolderbasedtrackingmappings");
            }
            set {
                SetAttributeValue("maxfolderbasedtrackingmappings", value);
            }
        }
        
        /// <summary>
        /// <para>Restrict the maximum no of items in a bundle</para>
        /// <para>Display Name: Bundle Item Limit</para>
        /// </summary>
        [AttributeLogicalName("maxproductsinbundle")]
        [DisplayName("Bundle Item Limit")]
        [Range(0, 2147483647)]
        public int? MaxProductsInBundle {
            get {
                return GetAttributeValue<int?>("maxproductsinbundle");
            }
            set {
                SetAttributeValue("maxproductsinbundle", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.</para>
        /// <para>Display Name: Max Records For Excel Export</para>
        /// </summary>
        [AttributeLogicalName("maxrecordsforexporttoexcel")]
        [DisplayName("Max Records For Excel Export")]
        [Range(0, 2147483647)]
        public int? MaxRecordsForExportToExcel {
            get {
                return GetAttributeValue<int?>("maxrecordsforexporttoexcel");
            }
            set {
                SetAttributeValue("maxrecordsforexporttoexcel", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of lookup and picklist records that can be selected by user for filtering.</para>
        /// <para>Display Name: Max Records Filter Selection</para>
        /// </summary>
        [AttributeLogicalName("maxrecordsforlookupfilters")]
        [DisplayName("Max Records Filter Selection")]
        [Range(0, 2147483647)]
        public int? MaxRecordsForLookupFilters {
            get {
                return GetAttributeValue<int?>("maxrecordsforlookupfilters");
            }
            set {
                SetAttributeValue("maxrecordsforlookupfilters", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Max SLA Items Per SLA</para>
        /// </summary>
        [AttributeLogicalName("maxslaitemspersla")]
        [DisplayName("Max SLA Items Per SLA")]
        [Range(0, 2147483647)]
        public int? MaxSLAItemsPerSLA {
            get {
                return GetAttributeValue<int?>("maxslaitemspersla");
            }
            set {
                SetAttributeValue("maxslaitemspersla", value);
            }
        }
        
        /// <summary>
        /// <para>The maximum version of IE to run browser emulation for in Outlook client</para>
        /// <para>Display Name: Max supported IE version</para>
        /// </summary>
        [AttributeLogicalName("maxsupportedinternetexplorerversion")]
        [DisplayName("Max supported IE version")]
        [Range(0, 2147483647)]
        public int? MaxSupportedInternetExplorerVersion {
            get {
                return GetAttributeValue<int?>("maxsupportedinternetexplorerversion");
            }
        }
        
        /// <summary>
        /// <para>Maximum allowed size of an attachment.</para>
        /// <para>Display Name: Max Upload File Size</para>
        /// </summary>
        [AttributeLogicalName("maxuploadfilesize")]
        [DisplayName("Max Upload File Size")]
        [Range(0, 2147483647)]
        public int? MaxUploadFileSize {
            get {
                return GetAttributeValue<int?>("maxuploadfilesize");
            }
            set {
                SetAttributeValue("maxuploadfilesize", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of mailboxes that can be toggled for verbose logging</para>
        /// <para>Display Name: Max No Of Mailboxes To Enable For Verbose Logging</para>
        /// </summary>
        [AttributeLogicalName("maxverboseloggingmailbox")]
        [DisplayName("Max No Of Mailboxes To Enable For Verbose Logging")]
        [Range(-2147483648, 2147483647)]
        public int? MaxVerboseLoggingMailbox {
            get {
                return GetAttributeValue<int?>("maxverboseloggingmailbox");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of sync cycles for which verbose logging will be enabled by default</para>
        /// <para>Display Name: Maximum number of sync cycles for which verbose logging will be enabled by default</para>
        /// </summary>
        [AttributeLogicalName("maxverboseloggingsynccycles")]
        [DisplayName("Maximum number of sync cycles for which verbose logging will be enabled by defaul" +
            "t")]
        [Range(-2147483648, 2147483647)]
        public int? MaxVerboseLoggingSyncCycles {
            get {
                return GetAttributeValue<int?>("maxverboseloggingsynccycles");
            }
        }
        
        /// <summary>
        /// <para>Maximum number of active business process flows allowed per entity</para>
        /// <para>Display Name: Maximum active business process flows per entity</para>
        /// </summary>
        [AttributeLogicalName("maximumactivebusinessprocessflowsallowedperentity")]
        [DisplayName("Maximum active business process flows per entity")]
        [Range(1, 2147483647)]
        public int? MaximumActiveBusinessProcessFlowsAllowedPerEntity {
            get {
                return GetAttributeValue<int?>("maximumactivebusinessprocessflowsallowedperentity");
            }
            set {
                SetAttributeValue("maximumactivebusinessprocessflowsallowedperentity", value);
            }
        }
        
        /// <summary>
        /// <para>Restrict the maximum number of product properties for a product family/bundle</para>
        /// <para>Display Name: Product Properties Item Limit</para>
        /// </summary>
        [AttributeLogicalName("maximumdynamicpropertiesallowed")]
        [DisplayName("Product Properties Item Limit")]
        [Range(0, 2147483647)]
        public int? MaximumDynamicPropertiesAllowed {
            get {
                return GetAttributeValue<int?>("maximumdynamicpropertiesallowed");
            }
            set {
                SetAttributeValue("maximumdynamicpropertiesallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of active SLA allowed per entity in online</para>
        /// <para>Display Name: Maximum number of active SLA allowed per entity in online</para>
        /// </summary>
        [AttributeLogicalName("maximumentitieswithactivesla")]
        [DisplayName("Maximum number of active SLA allowed per entity in online")]
        [Range(0, 2147483647)]
        public int? MaximumEntitiesWithActiveSLA {
            get {
                return GetAttributeValue<int?>("maximumentitieswithactivesla");
            }
            set {
                SetAttributeValue("maximumentitieswithactivesla", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of SLA KPI per active SLA allowed for entity in online</para>
        /// <para>Display Name: Maximum number of active SLA KPI allowed per entity in online</para>
        /// </summary>
        [AttributeLogicalName("maximumslakpiperentitywithactivesla")]
        [DisplayName("Maximum number of active SLA KPI allowed per entity in online")]
        [Range(0, 2147483647)]
        public int? MaximumSLAKPIPerEntityWithActiveSLA {
            get {
                return GetAttributeValue<int?>("maximumslakpiperentitywithactivesla");
            }
            set {
                SetAttributeValue("maximumslakpiperentitywithactivesla", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum tracking number before recycling takes place.</para>
        /// <para>Display Name: Max Tracking Number</para>
        /// </summary>
        [AttributeLogicalName("maximumtrackingnumber")]
        [DisplayName("Max Tracking Number")]
        [Range(0, 2147483647)]
        public int? MaximumTrackingNumber {
            get {
                return GetAttributeValue<int?>("maximumtrackingnumber");
            }
            set {
                SetAttributeValue("maximumtrackingnumber", value);
            }
        }
        
        /// <summary>
        /// <para>(Deprecated) Environment selected for Integration with Microsoft Flow</para>
        /// <para>Display Name: (Deprecated) Environment selected for Integration with Microsoft Flow</para>
        /// </summary>
        [AttributeLogicalName("microsoftflowenvironment")]
        [DisplayName("(Deprecated) Environment selected for Integration with Microsoft Flow")]
        [MaxLength(1024)]
        public string MicrosoftFlowEnvironment {
            get {
                return GetAttributeValue<string>("microsoftflowenvironment");
            }
            set {
                SetAttributeValue("microsoftflowenvironment", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for address book synchronization in Microsoft Office Outlook.</para>
        /// <para>Display Name: Min Address Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minaddressbooksyncinterval")]
        [DisplayName("Min Address Synchronization Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? MinAddressBookSyncInterval {
            get {
                return GetAttributeValue<int?>("minaddressbooksyncinterval");
            }
            set {
                SetAttributeValue("minaddressbooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.</para>
        /// <para>Display Name: Min Offline Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minofflinesyncinterval")]
        [DisplayName("Min Offline Synchronization Frequency")]
        [Range(-2147483648, 2147483647)]
        public int? MinOfflineSyncInterval {
            get {
                return GetAttributeValue<int?>("minofflinesyncinterval");
            }
            set {
                SetAttributeValue("minofflinesyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum allowed time between scheduled Outlook synchronizations.</para>
        /// <para>Display Name: Min Synchronization Frequency</para>
        /// </summary>
        [AttributeLogicalName("minoutlooksyncinterval")]
        [DisplayName("Min Synchronization Frequency")]
        [Range(0, 2147483647)]
        public int? MinOutlookSyncInterval {
            get {
                return GetAttributeValue<int?>("minoutlooksyncinterval");
            }
            set {
                SetAttributeValue("minoutlooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Minimum number of user license required for mobile offline service by production/preview organization</para>
        /// <para>Display Name: Minimum number of user license required for mobile offline service by production/preview organization</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineminlicenseprod")]
        [DisplayName("Minimum number of user license required for mobile offline service by production/" +
            "preview organization")]
        [Range(-2147483648, 2147483647)]
        public int? MobileOfflineMinLicenseProd {
            get {
                return GetAttributeValue<int?>("mobileofflineminlicenseprod");
            }
        }
        
        /// <summary>
        /// <para>Minimum number of user license required for mobile offline service by trial organization</para>
        /// <para>Display Name: Minimum number of user license required for mobile offline service by trial organization</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineminlicensetrial")]
        [DisplayName("Minimum number of user license required for mobile offline service by trial organ" +
            "ization")]
        [Range(-2147483648, 2147483647)]
        public int? MobileOfflineMinLicenseTrial {
            get {
                return GetAttributeValue<int?>("mobileofflineminlicensetrial");
            }
        }
        
        /// <summary>
        /// <para>Sync interval for mobile offline.</para>
        /// <para>Display Name: Sync interval for mobile offline.</para>
        /// </summary>
        [AttributeLogicalName("mobileofflinesyncinterval")]
        [DisplayName("Sync interval for mobile offline.")]
        [Range(0, 2147483647)]
        public int? MobileOfflineSyncInterval {
            get {
                return GetAttributeValue<int?>("mobileofflinesyncinterval");
            }
            set {
                SetAttributeValue("mobileofflinesyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the modern advanced find filtering on all tables in a model-driven app is enabled</para>
        /// <para>Display Name: Modern advanced find filtering</para>
        /// </summary>
        [AttributeLogicalName("modernadvancedfindfiltering")]
        [DisplayName("Modern advanced find filtering")]
        public bool? ModernAdvancedFindFiltering {
            get {
                return GetAttributeValue<bool?>("modernadvancedfindfiltering");
            }
            set {
                SetAttributeValue("modernadvancedfindfiltering", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether coauthoring is enabled in modern app designer</para>
        /// <para>Display Name: Coauthoring in Modern App Designer Enabled</para>
        /// </summary>
        [AttributeLogicalName("modernappdesignercoauthoringenabled")]
        [DisplayName("Coauthoring in Modern App Designer Enabled")]
        public bool? ModernAppDesignerCoauthoringEnabled {
            get {
                return GetAttributeValue<bool?>("modernappdesignercoauthoringenabled");
            }
            set {
                SetAttributeValue("modernappdesignercoauthoringenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the organization.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the organization was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the organization.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.</para>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Organization Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Enables Natural Language Assist Filter.</para>
        /// <para>Display Name: Natural Language Assist</para>
        /// </summary>
        [AttributeLogicalName("naturallanguageassistfilter")]
        [DisplayName("Natural Language Assist")]
        public bool? NaturalLanguageAssistFilter {
            get {
                return GetAttributeValue<bool?>("naturallanguageassistfilter");
            }
            set {
                SetAttributeValue("naturallanguageassistfilter", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Negative Currency Format</para>
        /// </summary>
        [AttributeLogicalName("negativecurrencyformatcode")]
        [DisplayName("Negative Currency Format")]
        [Range(-2147483648, 2147483647)]
        public int? NegativeCurrencyFormatCode {
            get {
                return GetAttributeValue<int?>("negativecurrencyformatcode");
            }
            set {
                SetAttributeValue("negativecurrencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative numbers are displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Negative Format</para>
        /// </summary>
        [AttributeLogicalName("negativeformatcode")]
        [DisplayName("Negative Format")]
        public Organization_NegativeFormatCode? NegativeFormatCode {
            get {
                return GetOptionSetValue<Organization_NegativeFormatCode>("negativeformatcode");
            }
            set {
                SetOptionSetValue("negativeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether an organization has enabled the new Relevance search experience (released in Oct 2020) for the organization</para>
        /// <para>Display Name: Oct 2020 Search enabled</para>
        /// </summary>
        [AttributeLogicalName("newsearchexperienceenabled")]
        [DisplayName("Oct 2020 Search enabled")]
        public bool? NewSearchExperienceEnabled {
            get {
                return GetAttributeValue<bool?>("newsearchexperienceenabled");
            }
            set {
                SetAttributeValue("newsearchexperienceenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Next token to be placed on the subject line of an email message.</para>
        /// <para>Display Name: Next Tracking Number</para>
        /// </summary>
        [AttributeLogicalName("nexttrackingnumber")]
        [DisplayName("Next Tracking Number")]
        [Range(-2147483648, 2147483647)]
        public int? NextTrackingNumber {
            get {
                return GetAttributeValue<int?>("nexttrackingnumber");
            }
            set {
                SetAttributeValue("nexttrackingnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether mailbox owners will be notified of email server profile level alerts.</para>
        /// <para>Display Name: Notify Mailbox Owner Of Email Server Level Alerts</para>
        /// </summary>
        [AttributeLogicalName("notifymailboxownerofemailserverlevelalerts")]
        [DisplayName("Notify Mailbox Owner Of Email Server Level Alerts")]
        public bool? NotifyMailboxOwnerOfEmailServerLevelAlerts {
            get {
                return GetAttributeValue<bool?>("notifymailboxownerofemailserverlevelalerts");
            }
            set {
                SetAttributeValue("notifymailboxownerofemailserverlevelalerts", value);
            }
        }
        
        /// <summary>
        /// <para>Specification of how numbers are displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Number Format</para>
        /// </summary>
        [AttributeLogicalName("numberformat")]
        [DisplayName("Number Format")]
        [MaxLength(2)]
        public string NumberFormat {
            get {
                return GetAttributeValue<string>("numberformat");
            }
            set {
                SetAttributeValue("numberformat", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies how numbers are grouped in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Number Grouping Format</para>
        /// </summary>
        [AttributeLogicalName("numbergroupformat")]
        [DisplayName("Number Grouping Format")]
        [MaxLength(50)]
        public string NumberGroupFormat {
            get {
                return GetAttributeValue<string>("numbergroupformat");
            }
            set {
                SetAttributeValue("numbergroupformat", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for number separation in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Number Separator</para>
        /// </summary>
        [AttributeLogicalName("numberseparator")]
        [DisplayName("Number Separator")]
        [MaxLength(5)]
        public string NumberSeparator {
            get {
                return GetAttributeValue<string>("numberseparator");
            }
            set {
                SetAttributeValue("numberseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.</para>
        /// <para>Display Name: Enable OOB Price calculation</para>
        /// </summary>
        [AttributeLogicalName("oobpricecalculationenabled")]
        [DisplayName("Enable OOB Price calculation")]
        public bool? OOBPriceCalculationEnabled {
            get {
                return GetAttributeValue<bool?>("oobpricecalculationenabled");
            }
            set {
                SetAttributeValue("oobpricecalculationenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Office Apps auto deployment is enabled for the organization.</para>
        /// <para>Display Name: Enable Office Apps Auto Deployment for this Organization</para>
        /// </summary>
        [AttributeLogicalName("officeappsautodeploymentenabled")]
        [DisplayName("Enable Office Apps Auto Deployment for this Organization")]
        public bool? OfficeAppsAutoDeploymentEnabled {
            get {
                return GetAttributeValue<bool?>("officeappsautodeploymentenabled");
            }
            set {
                SetAttributeValue("officeappsautodeploymentenabled", value);
            }
        }
        
        /// <summary>
        /// <para>The url to open the Delve for the organization.</para>
        /// <para>Display Name: The url to open the Delve</para>
        /// </summary>
        [AttributeLogicalName("officegraphdelveurl")]
        [DisplayName("The url to open the Delve")]
        [MaxLength(1000)]
        public string OfficeGraphDelveUrl {
            get {
                return GetAttributeValue<string>("officegraphdelveurl");
            }
            set {
                SetAttributeValue("officegraphdelveurl", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all orders throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Order Prefix</para>
        /// </summary>
        [AttributeLogicalName("orderprefix")]
        [DisplayName("Order Prefix")]
        [MaxLength(20)]
        public string OrderPrefix {
            get {
                return GetAttributeValue<string>("orderprefix");
            }
            set {
                SetAttributeValue("orderprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Organization settings stored in Organization Database.</para>
        /// <para>Display Name: Organization Database Organization Settings</para>
        /// </summary>
        [AttributeLogicalName("orgdborgsettings")]
        [DisplayName("Organization Database Organization Settings")]
        [MaxLength(1073741823)]
        public string OrgDbOrgSettings {
            get {
                return GetAttributeValue<string>("orgdborgsettings");
            }
            set {
                SetAttributeValue("orgdborgsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on OrgInsights for the organization.</para>
        /// <para>Display Name: Enable OrgInsights for this Organization</para>
        /// </summary>
        [AttributeLogicalName("orginsightsenabled")]
        [DisplayName("Enable OrgInsights for this Organization")]
        public bool? OrgInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("orginsightsenabled");
            }
            set {
                SetAttributeValue("orginsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the organization lifecycle state</para>
        /// <para>Display Name: Organization State</para>
        /// </summary>
        [AttributeLogicalName("organizationstate")]
        [DisplayName("Organization State")]
        public Organization_OrganizationState? OrganizationState {
            get {
                return GetOptionSetValue<Organization_OrganizationState>("organizationstate");
            }
        }
        
        /// <summary>
        /// <para>PM designator to use throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: PM Designator</para>
        /// </summary>
        [AttributeLogicalName("pmdesignator")]
        [DisplayName("PM Designator")]
        [MaxLength(25)]
        public string PMDesignator {
            get {
                return GetAttributeValue<string>("pmdesignator");
            }
            set {
                SetAttributeValue("pmdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Preview feature has been enabled for the organization.</para>
        /// <para>Display Name: Display Preview Feature for this organization</para>
        /// </summary>
        [AttributeLogicalName("paipreviewscenarioenabled")]
        [DisplayName("Display Preview Feature for this organization")]
        public bool? PaiPreviewScenarioEnabled {
            get {
                return GetAttributeValue<bool?>("paipreviewscenarioenabled");
            }
            set {
                SetAttributeValue("paipreviewscenarioenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for parsed table columns.</para>
        /// <para>Display Name: Parsed Table Column Prefix</para>
        /// </summary>
        [AttributeLogicalName("parsedtablecolumnprefix")]
        [DisplayName("Parsed Table Column Prefix")]
        [MaxLength(20)]
        public string ParsedTableColumnPrefix {
            get {
                return GetAttributeValue<string>("parsedtablecolumnprefix");
            }
        }
        
        /// <summary>
        /// <para>Prefix used for parsed tables.</para>
        /// <para>Display Name: Parsed Table Prefix</para>
        /// </summary>
        [AttributeLogicalName("parsedtableprefix")]
        [DisplayName("Parsed Table Prefix")]
        [MaxLength(20)]
        public string ParsedTablePrefix {
            get {
                return GetAttributeValue<string>("parsedtableprefix");
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of months in past for which the recurring activities can be created.</para>
        /// <para>Display Name: Past Expansion Window</para>
        /// </summary>
        [AttributeLogicalName("pastexpansionwindow")]
        [DisplayName("Past Expansion Window")]
        [Range(1, 120)]
        public int? PastExpansionWindow {
            get {
                return GetAttributeValue<int?>("pastexpansionwindow");
            }
            set {
                SetAttributeValue("pastexpansionwindow", value);
            }
        }
        
        /// <summary>
        /// <para>Leave empty to use default setting. Set to on/off to enable/disable replacement of default grids with modern ones in model-driven apps.</para>
        /// <para>Display Name: Enable modern grids in model-driven apps</para>
        /// </summary>
        [AttributeLogicalName("pcfdatasetgridenabled")]
        [DisplayName("Enable modern grids in model-driven apps")]
        [MaxLength(16)]
        public string PcfDatasetGridEnabled {
            get {
                return GetAttributeValue<string>("pcfdatasetgridenabled");
            }
            set {
                SetAttributeValue("pcfdatasetgridenabled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        [AttributeLogicalName("pinpointlanguagecode")]
        [Range(0, 2147483647)]
        public int? PinpointLanguageCode {
            get {
                return GetAttributeValue<int?>("pinpointlanguagecode");
            }
            set {
                SetAttributeValue("pinpointlanguagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Plug-in Trace Log Setting for the Organization.</para>
        /// <para>Display Name: Plug-in Trace Log Setting</para>
        /// </summary>
        [AttributeLogicalName("plugintracelogsetting")]
        [DisplayName("Plug-in Trace Log Setting")]
        public Organization_PluginTraceLogSetting? PluginTraceLogSetting {
            get {
                return GetOptionSetValue<Organization_PluginTraceLogSetting>("plugintracelogsetting");
            }
            set {
                SetOptionSetValue("plugintracelogsetting", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("postmessagewhitelistdomains")]
        [DisplayName("For internal use only.")]
        [MaxLength(500)]
        public string PostMessageWhitelistDomains {
            get {
                return GetAttributeValue<string>("postmessagewhitelistdomains");
            }
            set {
                SetAttributeValue("postmessagewhitelistdomains", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the Power BI feature should be enabled for the organization.</para>
        /// <para>Display Name: Enable Power BI feature for this Organization</para>
        /// </summary>
        [AttributeLogicalName("powerbifeatureenabled")]
        [DisplayName("Enable Power BI feature for this Organization")]
        public bool? PowerBiFeatureEnabled {
            get {
                return GetAttributeValue<bool?>("powerbifeatureenabled");
            }
            set {
                SetAttributeValue("powerbifeatureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for prices.</para>
        /// <para>Display Name: Pricing Decimal Precision</para>
        /// </summary>
        [AttributeLogicalName("pricingdecimalprecision")]
        [DisplayName("Pricing Decimal Precision")]
        [Range(0, 4)]
        public int? PricingDecimalPrecision {
            get {
                return GetAttributeValue<int?>("pricingdecimalprecision");
            }
            set {
                SetAttributeValue("pricingdecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.</para>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Organization Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Privilege Reporting Group</para>
        /// </summary>
        [AttributeLogicalName("privreportinggroupid")]
        [DisplayName("Privilege Reporting Group")]
        public Guid? PrivReportingGroupId {
            get {
                return GetAttributeValue<Guid?>("privreportinggroupid");
            }
            set {
                SetAttributeValue("privreportinggroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Privilege Reporting Group Name</para>
        /// </summary>
        [AttributeLogicalName("privreportinggroupname")]
        [DisplayName("Privilege Reporting Group Name")]
        [MaxLength(256)]
        public string PrivReportingGroupName {
            get {
                return GetAttributeValue<string>("privreportinggroupname");
            }
            set {
                SetAttributeValue("privreportinggroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Privacy Statement URL</para>
        /// <para>Display Name: Privacy Statement URL</para>
        /// </summary>
        [AttributeLogicalName("privacystatementurl")]
        [DisplayName("Privacy Statement URL")]
        [MaxLength(500)]
        public string PrivacyStatementUrl {
            get {
                return GetAttributeValue<string>("privacystatementurl");
            }
            set {
                SetAttributeValue("privacystatementurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default privilege for users in the organization.</para>
        /// <para>Display Name: Privilege User Group</para>
        /// </summary>
        [AttributeLogicalName("privilegeusergroupid")]
        [DisplayName("Privilege User Group")]
        public Guid? PrivilegeUserGroupId {
            get {
                return GetAttributeValue<Guid?>("privilegeusergroupid");
            }
            set {
                SetAttributeValue("privilegeusergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on product recommendations for the organization.</para>
        /// <para>Display Name: Enable Product Recommendations for this Organization</para>
        /// </summary>
        [AttributeLogicalName("productrecommendationsenabled")]
        [DisplayName("Enable Product Recommendations for this Organization")]
        public bool? ProductRecommendationsEnabled {
            get {
                return GetAttributeValue<bool?>("productrecommendationsenabled");
            }
            set {
                SetAttributeValue("productrecommendationsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether prompt should be shown for new Qualify Lead Experience</para>
        /// <para>Display Name: Enable New Qualify Lead Experience with configuration MDD</para>
        /// </summary>
        [AttributeLogicalName("qualifyleadadditionaloptions")]
        [DisplayName("Enable New Qualify Lead Experience with configuration MDD")]
        [MaxLength(1000)]
        public string QualifyLeadAdditionalOptions {
            get {
                return GetAttributeValue<string>("qualifyleadadditionaloptions");
            }
            set {
                SetAttributeValue("qualifyleadadditionaloptions", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to indicate if the feature to use quick action to open records in search side pane is enabled</para>
        /// <para>Display Name: Enable quick actions to open records in search side pane</para>
        /// </summary>
        [AttributeLogicalName("quickactiontoopenrecordsinsidepaneenabled")]
        [DisplayName("Enable quick actions to open records in search side pane")]
        public bool? QuickActionToOpenRecordsInSidePaneEnabled {
            get {
                return GetAttributeValue<bool?>("quickactiontoopenrecordsinsidepaneenabled");
            }
            set {
                SetAttributeValue("quickactiontoopenrecordsinsidepaneenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).</para>
        /// <para>Display Name: Quick Find Record Limit Enabled</para>
        /// </summary>
        [AttributeLogicalName("quickfindrecordlimitenabled")]
        [DisplayName("Quick Find Record Limit Enabled")]
        public bool? QuickFindRecordLimitEnabled {
            get {
                return GetAttributeValue<bool?>("quickfindrecordlimitenabled");
            }
            set {
                SetAttributeValue("quickfindrecordlimitenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix to use for all quotes throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Quote Prefix</para>
        /// </summary>
        [AttributeLogicalName("quoteprefix")]
        [DisplayName("Quote Prefix")]
        [MaxLength(20)]
        public string QuotePrefix {
            get {
                return GetAttributeValue<string>("quoteprefix");
            }
            set {
                SetAttributeValue("quoteprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether SLA Recalculation has been enabled for the organization</para>
        /// <para>Display Name: Indicates whether SLA Recalculation has been enabled for the organization</para>
        /// </summary>
        [AttributeLogicalName("recalculatesla")]
        [DisplayName("Indicates whether SLA Recalculation has been enabled for the organization")]
        public bool? RecalculateSLA {
            get {
                return GetAttributeValue<bool?>("recalculatesla");
            }
            set {
                SetAttributeValue("recalculatesla", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the default value for number of occurrences field in the recurrence dialog.</para>
        /// <para>Display Name: Recurrence Default Number of Occurrences</para>
        /// </summary>
        [AttributeLogicalName("recurrencedefaultnumberofoccurrences")]
        [DisplayName("Recurrence Default Number of Occurrences")]
        [Range(1, 999)]
        public int? RecurrenceDefaultNumberOfOccurrences {
            get {
                return GetAttributeValue<int?>("recurrencedefaultnumberofoccurrences");
            }
            set {
                SetAttributeValue("recurrencedefaultnumberofoccurrences", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the interval (in seconds) for pausing expansion job.</para>
        /// <para>Display Name: Recurrence Expansion Job Batch Interval</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionjobbatchinterval")]
        [DisplayName("Recurrence Expansion Job Batch Interval")]
        [Range(0, 2147483647)]
        public int? RecurrenceExpansionJobBatchInterval {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionjobbatchinterval");
            }
            set {
                SetAttributeValue("recurrenceexpansionjobbatchinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the value for number of instances created in on demand job in one shot.</para>
        /// <para>Display Name: Recurrence Expansion On Demand Job Batch Size</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionjobbatchsize")]
        [DisplayName("Recurrence Expansion On Demand Job Batch Size")]
        [Range(0, 2147483647)]
        public int? RecurrenceExpansionJobBatchSize {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionjobbatchsize");
            }
            set {
                SetAttributeValue("recurrenceexpansionjobbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.</para>
        /// <para>Display Name: Recurrence Expansion Synchronization Create Maximum</para>
        /// </summary>
        [AttributeLogicalName("recurrenceexpansionsynchcreatemax")]
        [DisplayName("Recurrence Expansion Synchronization Create Maximum")]
        [Range(1, 1000)]
        public int? RecurrenceExpansionSynchCreateMax {
            get {
                return GetAttributeValue<int?>("recurrenceexpansionsynchcreatemax");
            }
            set {
                SetAttributeValue("recurrenceexpansionsynchcreatemax", value);
            }
        }
        
        /// <summary>
        /// <para>XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.</para>
        /// <para>Display Name: Reference SiteMap XML</para>
        /// </summary>
        [AttributeLogicalName("referencesitemapxml")]
        [DisplayName("Reference SiteMap XML")]
        [MaxLength(1073741823)]
        public string ReferenceSiteMapXml {
            get {
                return GetAttributeValue<string>("referencesitemapxml");
            }
            set {
                SetAttributeValue("referencesitemapxml", value);
            }
        }
        
        /// <summary>
        /// <para>Release Wave Applied to Environment.</para>
        /// <para>Display Name: Release Wave</para>
        /// </summary>
        [AttributeLogicalName("releasewavename")]
        [DisplayName("Release Wave")]
        [MaxLength(200)]
        public string ReleaseWaveName {
            get {
                return GetAttributeValue<string>("releasewavename");
            }
            set {
                SetAttributeValue("releasewavename", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether relevance search was enabled for the environment as part of Dataverse's relevance search on-by-default sweep</para>
        /// <para>Display Name: Relevance search enabled automatically by Dataverse</para>
        /// </summary>
        [AttributeLogicalName("relevancesearchenabledbyplatform")]
        [DisplayName("Relevance search enabled automatically by Dataverse")]
        public bool? RelevanceSearchEnabledByPlatform {
            get {
                return GetAttributeValue<bool?>("relevancesearchenabledbyplatform");
            }
            set {
                SetAttributeValue("relevancesearchenabledbyplatform", value);
            }
        }
        
        /// <summary>
        /// <para>This setting contains the last modified date for relevance search setting that appears as a toggle in PPAC.</para>
        /// <para>Display Name: RelevanceSearchModifiedOnDate</para>
        /// </summary>
        [AttributeLogicalName("relevancesearchmodifiedon")]
        [DisplayName("RelevanceSearchModifiedOnDate")]
        public DateTime? RelevanceSearchModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("relevancesearchmodifiedon");
            }
            set {
                SetAttributeValue("relevancesearchmodifiedon", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.</para>
        /// <para>Display Name: Render Secure Frame For Email</para>
        /// </summary>
        [AttributeLogicalName("rendersecureiframeforemail")]
        [DisplayName("Render Secure Frame For Email")]
        public bool? RenderSecureIFrameForEmail {
            get {
                return GetAttributeValue<bool?>("rendersecureiframeforemail");
            }
            set {
                SetAttributeValue("rendersecureiframeforemail", value);
            }
        }
        
        /// <summary>
        /// <para>Picklist for selecting the organization preference for reporting scripting errors.</para>
        /// <para>Display Name: Report Script Errors</para>
        /// </summary>
        [AttributeLogicalName("reportscripterrors")]
        [DisplayName("Report Script Errors")]
        public Organization_ReportScriptErrors? ReportScriptErrors {
            get {
                return GetOptionSetValue<Organization_ReportScriptErrors>("reportscripterrors");
            }
            set {
                SetOptionSetValue("reportscripterrors", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Reporting Group</para>
        /// </summary>
        [AttributeLogicalName("reportinggroupid")]
        [DisplayName("Reporting Group")]
        public Guid? ReportingGroupId {
            get {
                return GetAttributeValue<Guid?>("reportinggroupid");
            }
            set {
                SetAttributeValue("reportinggroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Reporting Group Name</para>
        /// </summary>
        [AttributeLogicalName("reportinggroupname")]
        [DisplayName("Reporting Group Name")]
        [MaxLength(256)]
        public string ReportingGroupName {
            get {
                return GetAttributeValue<string>("reportinggroupname");
            }
            set {
                SetAttributeValue("reportinggroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send As Other User privilege is enabled.</para>
        /// <para>Display Name: Is Approval For Queue Email Required</para>
        /// </summary>
        [AttributeLogicalName("requireapprovalforqueueemail")]
        [DisplayName("Is Approval For Queue Email Required")]
        public bool? RequireApprovalForQueueEmail {
            get {
                return GetAttributeValue<bool?>("requireapprovalforqueueemail");
            }
            set {
                SetAttributeValue("requireapprovalforqueueemail", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send As Other User privilege is enabled.</para>
        /// <para>Display Name: Is Approval For User Email Required</para>
        /// </summary>
        [AttributeLogicalName("requireapprovalforuseremail")]
        [DisplayName("Is Approval For User Email Required")]
        public bool? RequireApprovalForUserEmail {
            get {
                return GetAttributeValue<bool?>("requireapprovalforuseremail");
            }
            set {
                SetAttributeValue("requireapprovalforuseremail", value);
            }
        }
        
        /// <summary>
        /// <para>Apply same email address to all unresolved matches when you manually resolve it for one</para>
        /// <para>Display Name: Apply same email address to all unresolved matches when you manually resolve it for one</para>
        /// </summary>
        [AttributeLogicalName("resolvesimilarunresolvedemailaddress")]
        [DisplayName("Apply same email address to all unresolved matches when you manually resolve it f" +
            "or one")]
        public bool? ResolveSimilarUnresolvedEmailAddress {
            get {
                return GetAttributeValue<bool?>("resolvesimilarunresolvedemailaddress");
            }
            set {
                SetAttributeValue("resolvesimilarunresolvedemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Flag to restrict Update on incident.</para>
        /// <para>Display Name: Restrict Status Update</para>
        /// </summary>
        [AttributeLogicalName("restrictstatusupdate")]
        [DisplayName("Restrict Status Update")]
        public bool? RestrictStatusUpdate {
            get {
                return GetAttributeValue<bool?>("restrictstatusupdate");
            }
            set {
                SetAttributeValue("restrictstatusupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Error status of Relationship Insights provisioning.</para>
        /// <para>Display Name: Error status of Relationship Insights provisioning.</para>
        /// </summary>
        [AttributeLogicalName("rierrorstatus")]
        [DisplayName("Error status of Relationship Insights provisioning.")]
        [Range(0, 2147483647)]
        public int? RiErrorStatus {
            get {
                return GetAttributeValue<int?>("rierrorstatus");
            }
            set {
                SetAttributeValue("rierrorstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Setting for SQM data collection, 0 no, 1 yes enabled</para>
        /// <para>Display Name: Is SQM Enabled</para>
        /// </summary>
        [AttributeLogicalName("sqmenabled")]
        [DisplayName("Is SQM Enabled")]
        public bool? SQMEnabled {
            get {
                return GetAttributeValue<bool?>("sqmenabled");
            }
            set {
                SetAttributeValue("sqmenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the sample data import job.</para>
        /// <para>Display Name: Sample Data Import</para>
        /// </summary>
        [AttributeLogicalName("sampledataimportid")]
        [DisplayName("Sample Data Import")]
        public Guid? SampleDataImportId {
            get {
                return GetAttributeValue<Guid?>("sampledataimportid");
            }
            set {
                SetAttributeValue("sampledataimportid", value);
            }
        }
        
        /// <summary>
        /// <para>Prefix used for custom entities and attributes.</para>
        /// <para>Display Name: Customization Name Prefix</para>
        /// </summary>
        [AttributeLogicalName("schemanameprefix")]
        [DisplayName("Customization Name Prefix")]
        [MaxLength(8)]
        public string SchemaNamePrefix {
            get {
                return GetAttributeValue<string>("schemanameprefix");
            }
            set {
                SetAttributeValue("schemanameprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether Send Bulk Email in UCI is enabled for the org.</para>
        /// <para>Display Name: Send Bulk Email in UCI</para>
        /// </summary>
        [AttributeLogicalName("sendbulkemailinuci")]
        [DisplayName("Send Bulk Email in UCI")]
        public bool? SendBulkEmailInUCI {
            get {
                return GetAttributeValue<bool?>("sendbulkemailinuci");
            }
            set {
                SetAttributeValue("sendbulkemailinuci", value);
            }
        }
        
        /// <summary>
        /// <para>Serve Static Content From CDN</para>
        /// <para>Display Name: Serve Static Content From CDN</para>
        /// </summary>
        [AttributeLogicalName("servestaticresourcesfromazurecdn")]
        [DisplayName("Serve Static Content From CDN")]
        public bool? ServeStaticResourcesFromAzureCDN {
            get {
                return GetAttributeValue<bool?>("servestaticresourcesfromazurecdn");
            }
            set {
                SetAttributeValue("servestaticresourcesfromazurecdn", value);
            }
        }
        
        /// <summary>
        /// <para>Enable the session recording feature to record user sessions in UCI</para>
        /// <para>Display Name: Enable the session recording feature</para>
        /// </summary>
        [AttributeLogicalName("sessionrecordingenabled")]
        [DisplayName("Enable the session recording feature")]
        public bool? SessionRecordingEnabled {
            get {
                return GetAttributeValue<bool?>("sessionrecordingenabled");
            }
            set {
                SetAttributeValue("sessionrecordingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether session timeout is enabled</para>
        /// <para>Display Name: Session timeout enabled</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutenabled")]
        [DisplayName("Session timeout enabled")]
        public bool? SessionTimeoutEnabled {
            get {
                return GetAttributeValue<bool?>("sessiontimeoutenabled");
            }
            set {
                SetAttributeValue("sessiontimeoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Session timeout in minutes</para>
        /// <para>Display Name: Session timeout in minutes</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutinmins")]
        [DisplayName("Session timeout in minutes")]
        [Range(0, 2147483647)]
        public int? SessionTimeoutInMins {
            get {
                return GetAttributeValue<int?>("sessiontimeoutinmins");
            }
            set {
                SetAttributeValue("sessiontimeoutinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Session timeout reminder in minutes</para>
        /// <para>Display Name: Session timeout reminder in minutes</para>
        /// </summary>
        [AttributeLogicalName("sessiontimeoutreminderinmins")]
        [DisplayName("Session timeout reminder in minutes")]
        [Range(0, 2147483647)]
        public int? SessionTimeoutReminderInMins {
            get {
                return GetAttributeValue<int?>("sessiontimeoutreminderinmins");
            }
            set {
                SetAttributeValue("sessiontimeoutreminderinmins", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)</para>
        /// <para>Display Name: Choose SharePoint Deployment Type</para>
        /// </summary>
        [AttributeLogicalName("sharepointdeploymenttype")]
        [DisplayName("Choose SharePoint Deployment Type")]
        public Organization_SharePointDeploymentType? SharePointDeploymentType {
            get {
                return GetOptionSetValue<Organization_SharePointDeploymentType>("sharepointdeploymenttype");
            }
            set {
                SetOptionSetValue("sharepointdeploymenttype", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether to share to previous owner on assign.</para>
        /// <para>Display Name: Share To Previous Owner On Assign</para>
        /// </summary>
        [AttributeLogicalName("sharetopreviousowneronassign")]
        [DisplayName("Share To Previous Owner On Assign")]
        public bool? ShareToPreviousOwnerOnAssign {
            get {
                return GetAttributeValue<bool?>("sharetopreviousowneronassign");
            }
            set {
                SetAttributeValue("sharetopreviousowneronassign", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to display a KB article deprecation notification to the user.</para>
        /// <para>Display Name: Show KBArticle deprecation message to user</para>
        /// </summary>
        [AttributeLogicalName("showkbarticledeprecationnotification")]
        [DisplayName("Show KBArticle deprecation message to user")]
        public bool? ShowKBArticleDeprecationNotification {
            get {
                return GetAttributeValue<bool?>("showkbarticledeprecationnotification");
            }
            set {
                SetAttributeValue("showkbarticledeprecationnotification", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.</para>
        /// <para>Display Name: Show Week Number</para>
        /// </summary>
        [AttributeLogicalName("showweeknumber")]
        [DisplayName("Show Week Number")]
        public bool? ShowWeekNumber {
            get {
                return GetAttributeValue<bool?>("showweeknumber");
            }
            set {
                SetAttributeValue("showweeknumber", value);
            }
        }
        
        /// <summary>
        /// <para>CRM for Outlook Download URL</para>
        /// <para>Display Name: CRMForOutlookDownloadURL</para>
        /// </summary>
        [AttributeLogicalName("signupoutlookdownloadfwlink")]
        [DisplayName("CRMForOutlookDownloadURL")]
        [MaxLength(200)]
        public string SignupOutlookDownloadFWLink {
            get {
                return GetAttributeValue<string>("signupoutlookdownloadfwlink");
            }
            set {
                SetAttributeValue("signupoutlookdownloadfwlink", value);
            }
        }
        
        /// <summary>
        /// <para>XML string that defines the navigation structure for the application.</para>
        /// <para>Display Name: SiteMap XML</para>
        /// </summary>
        [AttributeLogicalName("sitemapxml")]
        [DisplayName("SiteMap XML")]
        public string SiteMapXml {
            get {
                return GetAttributeValue<string>("sitemapxml");
            }
            set {
                SetAttributeValue("sitemapxml", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the on hold case status values.</para>
        /// <para>Display Name: SLA pause states</para>
        /// </summary>
        [AttributeLogicalName("slapausestates")]
        [DisplayName("SLA pause states")]
        [MaxLength(1073741823)]
        public string SlaPauseStates {
            get {
                return GetAttributeValue<string>("slapausestates");
            }
            set {
                SetAttributeValue("slapausestates", value);
            }
        }
        
        /// <summary>
        /// <para>Flag for whether the organization is using Social Insights.</para>
        /// <para>Display Name: Social Insights Enabled</para>
        /// </summary>
        [AttributeLogicalName("socialinsightsenabled")]
        [DisplayName("Social Insights Enabled")]
        public bool? SocialInsightsEnabled {
            get {
                return GetAttributeValue<bool?>("socialinsightsenabled");
            }
            set {
                SetAttributeValue("socialinsightsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Identifier for the Social Insights instance for the organization.</para>
        /// <para>Display Name: Social Insights instance identifier</para>
        /// </summary>
        [AttributeLogicalName("socialinsightsinstance")]
        [DisplayName("Social Insights instance identifier")]
        [MaxLength(2048)]
        public string SocialInsightsInstance {
            get {
                return GetAttributeValue<string>("socialinsightsinstance");
            }
            set {
                SetAttributeValue("socialinsightsinstance", value);
            }
        }
        
        /// <summary>
        /// <para>Flag for whether the organization has accepted the Social Insights terms of use.</para>
        /// <para>Display Name: Social Insights Terms of Use</para>
        /// </summary>
        [AttributeLogicalName("socialinsightstermsaccepted")]
        [DisplayName("Social Insights Terms of Use")]
        public bool? SocialInsightsTermsAccepted {
            get {
                return GetAttributeValue<bool?>("socialinsightstermsaccepted");
            }
            set {
                SetAttributeValue("socialinsightstermsaccepted", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Sort</para>
        /// </summary>
        [AttributeLogicalName("sortid")]
        [DisplayName("Sort")]
        [Range(-2147483648, 2147483647)]
        public int? SortId {
            get {
                return GetAttributeValue<int?>("sortid");
            }
            set {
                SetAttributeValue("sortid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: SQL Access Group</para>
        /// </summary>
        [AttributeLogicalName("sqlaccessgroupid")]
        [DisplayName("SQL Access Group")]
        public Guid? SqlAccessGroupId {
            get {
                return GetAttributeValue<Guid?>("sqlaccessgroupid");
            }
            set {
                SetAttributeValue("sqlaccessgroupid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: SQL Access Group Name</para>
        /// </summary>
        [AttributeLogicalName("sqlaccessgroupname")]
        [DisplayName("SQL Access Group Name")]
        [MaxLength(256)]
        public string SqlAccessGroupName {
            get {
                return GetAttributeValue<string>("sqlaccessgroupname");
            }
            set {
                SetAttributeValue("sqlaccessgroupname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the support user for the organization.</para>
        /// <para>Display Name: Support User</para>
        /// </summary>
        [AttributeLogicalName("supportuserid")]
        [DisplayName("Support User")]
        public Guid? SupportUserId {
            get {
                return GetAttributeValue<Guid?>("supportuserid");
            }
            set {
                SetAttributeValue("supportuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether SLA is suppressed.</para>
        /// <para>Display Name: Is SLA suppressed</para>
        /// </summary>
        [AttributeLogicalName("suppresssla")]
        [DisplayName("Is SLA suppressed")]
        public bool? SuppressSLA {
            get {
                return GetAttributeValue<bool?>("suppresssla");
            }
            set {
                SetAttributeValue("suppresssla", value);
            }
        }
        
        /// <summary>
        /// <para>Number of records to update per operation in Sync Bulk Pause/Resume/Cancel</para>
        /// <para>Display Name: Number of records to update per operation in Sync Bulk Pause/Resume/Cancel</para>
        /// </summary>
        [AttributeLogicalName("syncbulkoperationbatchsize")]
        [DisplayName("Number of records to update per operation in Sync Bulk Pause/Resume/Cancel")]
        [Range(1, 1000)]
        public int? SyncBulkOperationBatchSize {
            get {
                return GetAttributeValue<int?>("syncbulkoperationbatchsize");
            }
            set {
                SetAttributeValue("syncbulkoperationbatchsize", value);
            }
        }
        
        /// <summary>
        /// <para>Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel</para>
        /// <para>Display Name: Max total number of records to update in database for Sync Bulk Pause/Resume/Cancel</para>
        /// </summary>
        [AttributeLogicalName("syncbulkoperationmaxlimit")]
        [DisplayName("Max total number of records to update in database for Sync Bulk Pause/Resume/Canc" +
            "el")]
        [Range(1, 500000)]
        public int? SyncBulkOperationMaxLimit {
            get {
                return GetAttributeValue<int?>("syncbulkoperationmaxlimit");
            }
            set {
                SetAttributeValue("syncbulkoperationmaxlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the selection to use the dynamics 365 azure sync framework or server side sync.</para>
        /// <para>Display Name: Enable dynamics 365 azure sync framework for this organization.</para>
        /// </summary>
        [AttributeLogicalName("syncoptinselection")]
        [DisplayName("Enable dynamics 365 azure sync framework for this organization.")]
        public bool? SyncOptInSelection {
            get {
                return GetAttributeValue<bool?>("syncoptinselection");
            }
            set {
                SetAttributeValue("syncoptinselection", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the status of the opt-in or opt-out operation for dynamics 365 azure sync.</para>
        /// <para>Display Name: Status of opt-in or opt-out operation for dynamics 365 azure sync.</para>
        /// </summary>
        [AttributeLogicalName("syncoptinselectionstatus")]
        [DisplayName("Status of opt-in or opt-out operation for dynamics 365 azure sync.")]
        public Organization_SyncOptInSelectionStatus? SyncOptInSelectionStatus {
            get {
                return GetOptionSetValue<Organization_SyncOptInSelectionStatus>("syncoptinselectionstatus");
            }
            set {
                SetOptionSetValue("syncoptinselectionstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the system user for the organization.</para>
        /// <para>Display Name: System User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("System User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetAttributeValue("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Controls the appearance of option to search over a single DV search indexed table in model-driven apps’ global search in the header.</para>
        /// <para>Display Name: Table Scoped Dataverse Search In Apps</para>
        /// </summary>
        [AttributeLogicalName("tablescopeddvsearchinapps")]
        [DisplayName("Table Scoped Dataverse Search In Apps")]
        public bool? TableScopedDVSearchInApps {
            get {
                return GetAttributeValue<bool?>("tablescopeddvsearchinapps");
            }
            set {
                SetAttributeValue("tablescopeddvsearchinapps", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.</para>
        /// <para>Display Name: Auto-Tag Max Cycles</para>
        /// </summary>
        [AttributeLogicalName("tagmaxaggressivecycles")]
        [DisplayName("Auto-Tag Max Cycles")]
        public int? TagMaxAggressiveCycles {
            get {
                return GetAttributeValue<int?>("tagmaxaggressivecycles");
            }
            set {
                SetAttributeValue("tagmaxaggressivecycles", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for email receive auto-tagging in outlook.</para>
        /// <para>Display Name: Auto-Tag Interval</para>
        /// </summary>
        [AttributeLogicalName("tagpollingperiod")]
        [DisplayName("Auto-Tag Interval")]
        [Range(0, 2147483647)]
        public int? TagPollingPeriod {
            get {
                return GetAttributeValue<int?>("tagpollingperiod");
            }
            set {
                SetAttributeValue("tagpollingperiod", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on task flows for the organization.</para>
        /// <para>Display Name: Enable Task Flow processes for this Organization</para>
        /// </summary>
        [AttributeLogicalName("taskbasedflowenabled")]
        [DisplayName("Enable Task Flow processes for this Organization")]
        public bool? TaskBasedFlowEnabled {
            get {
                return GetAttributeValue<bool?>("taskbasedflowenabled");
            }
            set {
                SetAttributeValue("taskbasedflowenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information on whether Teams Chat Data Sync is enabled.</para>
        /// <para>Display Name: Enable Teams Chat Data Sync.</para>
        /// </summary>
        [AttributeLogicalName("teamschatdatasync")]
        [DisplayName("Enable Teams Chat Data Sync.")]
        public bool? TeamsChatDataSync {
            get {
                return GetAttributeValue<bool?>("teamschatdatasync");
            }
            set {
                SetAttributeValue("teamschatdatasync", value);
            }
        }
        
        /// <summary>
        /// <para>Instrumentation key for Application Insights used to log plugins telemetry.</para>
        /// <para>Display Name: Telemetry Instrumentation Key</para>
        /// </summary>
        [AttributeLogicalName("telemetryinstrumentationkey")]
        [DisplayName("Telemetry Instrumentation Key")]
        [MaxLength(100)]
        public string TelemetryInstrumentationKey {
            get {
                return GetAttributeValue<string>("telemetryinstrumentationkey");
            }
            set {
                SetAttributeValue("telemetryinstrumentationkey", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to turn on text analytics for the organization.</para>
        /// <para>Display Name: Enable Text Analytics for this Organization</para>
        /// </summary>
        [AttributeLogicalName("textanalyticsenabled")]
        [DisplayName("Enable Text Analytics for this Organization")]
        public bool? TextAnalyticsEnabled {
            get {
                return GetAttributeValue<bool?>("textanalyticsenabled");
            }
            set {
                SetAttributeValue("textanalyticsenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the time is displayed throughout Microsoft CRM.</para>
        /// <para>Display Name: Time Format Code</para>
        /// </summary>
        [AttributeLogicalName("timeformatcode")]
        [DisplayName("Time Format Code")]
        public Object TimeFormatCode {
            get {
                return GetAttributeValue<Object>("timeformatcode");
            }
            set {
                SetAttributeValue("timeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Time Format String</para>
        /// </summary>
        [AttributeLogicalName("timeformatstring")]
        [DisplayName("Time Format String")]
        [MaxLength(255)]
        public string TimeFormatString {
            get {
                return GetAttributeValue<string>("timeformatstring");
            }
            set {
                SetAttributeValue("timeformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how the time separator is displayed throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Time Separator</para>
        /// </summary>
        [AttributeLogicalName("timeseparator")]
        [DisplayName("Time Separator")]
        [MaxLength(5)]
        public string TimeSeparator {
            get {
                return GetAttributeValue<string>("timeseparator");
            }
            set {
                SetAttributeValue("timeseparator", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Duration used for token expiration.</para>
        /// <para>Display Name: Token Expiration Duration</para>
        /// </summary>
        [AttributeLogicalName("tokenexpiry")]
        [DisplayName("Token Expiration Duration")]
        public int? TokenExpiry {
            get {
                return GetAttributeValue<int?>("tokenexpiry");
            }
            set {
                SetAttributeValue("tokenexpiry", value);
            }
        }
        
        /// <summary>
        /// <para>Token key.</para>
        /// <para>Display Name: Token Key</para>
        /// </summary>
        [AttributeLogicalName("tokenkey")]
        [DisplayName("Token Key")]
        [MaxLength(90)]
        public string TokenKey {
            get {
                return GetAttributeValue<string>("tokenkey");
            }
            set {
                SetAttributeValue("tokenkey", value);
            }
        }
        
        /// <summary>
        /// <para>Tracelog record maximum age in days</para>
        /// <para>Display Name: Tracelog record maximum age in days</para>
        /// </summary>
        [AttributeLogicalName("tracelogmaximumageindays")]
        [DisplayName("Tracelog record maximum age in days")]
        [Range(0, 2147483647)]
        public int? TraceLogMaximumAgeInDays {
            get {
                return GetAttributeValue<int?>("tracelogmaximumageindays");
            }
            set {
                SetAttributeValue("tracelogmaximumageindays", value);
            }
        }
        
        /// <summary>
        /// <para>History list of tracking token prefixes.</para>
        /// <para>Display Name: Tracking Prefix</para>
        /// </summary>
        [AttributeLogicalName("trackingprefix")]
        [DisplayName("Tracking Prefix")]
        [MaxLength(256)]
        public string TrackingPrefix {
            get {
                return GetAttributeValue<string>("trackingprefix");
            }
            set {
                SetAttributeValue("trackingprefix", value);
            }
        }
        
        /// <summary>
        /// <para>Base number used to provide separate tracking token identifiers to users belonging to different deployments.</para>
        /// <para>Display Name: Tracking Token Base</para>
        /// </summary>
        [AttributeLogicalName("trackingtokenidbase")]
        [DisplayName("Tracking Token Base")]
        [Range(0, 2147483647)]
        public int? TrackingTokenIdBase {
            get {
                return GetAttributeValue<int?>("trackingtokenidbase");
            }
            set {
                SetAttributeValue("trackingtokenidbase", value);
            }
        }
        
        /// <summary>
        /// <para>Number of digits used to represent a tracking token identifier.</para>
        /// <para>Display Name: Tracking Token Digits</para>
        /// </summary>
        [AttributeLogicalName("trackingtokeniddigits")]
        [DisplayName("Tracking Token Digits")]
        public int? TrackingTokenIdDigits {
            get {
                return GetAttributeValue<int?>("trackingtokeniddigits");
            }
            set {
                SetAttributeValue("trackingtokeniddigits", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Number of characters appended to invoice, quote, and order numbers.</para>
        /// <para>Display Name: Unique String Length</para>
        /// </summary>
        [AttributeLogicalName("uniquespecifierlength")]
        [DisplayName("Unique String Length")]
        [Range(4, 6)]
        public int? UniqueSpecifierLength {
            get {
                return GetAttributeValue<int?>("uniquespecifierlength");
            }
            set {
                SetAttributeValue("uniquespecifierlength", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether email address should be unresolved if multiple matches are found</para>
        /// <para>Display Name: Set To,cc,bcc fields as unresolved if multiple matches are found</para>
        /// </summary>
        [AttributeLogicalName("unresolveemailaddressifmultiplematch")]
        [DisplayName("Set To,cc,bcc fields as unresolved if multiple matches are found")]
        public bool? UnresolveEmailAddressIfMultipleMatch {
            get {
                return GetAttributeValue<bool?>("unresolveemailaddressifmultiplematch");
            }
            set {
                SetAttributeValue("unresolveemailaddressifmultiplematch", value);
            }
        }
        
        /// <summary>
        /// <para>Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.</para>
        /// <para>Display Name: Use Inbuilt Rule For Default Pricelist Selection</para>
        /// </summary>
        [AttributeLogicalName("useinbuiltrulefordefaultpricelistselection")]
        [DisplayName("Use Inbuilt Rule For Default Pricelist Selection")]
        public bool? UseInbuiltRuleForDefaultPricelistSelection {
            get {
                return GetAttributeValue<bool?>("useinbuiltrulefordefaultpricelistselection");
            }
            set {
                SetAttributeValue("useinbuiltrulefordefaultpricelistselection", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to use legacy form rendering.</para>
        /// <para>Display Name: Legacy Form Rendering</para>
        /// </summary>
        [AttributeLogicalName("uselegacyrendering")]
        [DisplayName("Legacy Form Rendering")]
        public bool? UseLegacyRendering {
            get {
                return GetAttributeValue<bool?>("uselegacyrendering");
            }
            set {
                SetAttributeValue("uselegacyrendering", value);
            }
        }
        
        /// <summary>
        /// <para>Use position hierarchy</para>
        /// <para>Display Name: Use position hierarchy</para>
        /// </summary>
        [AttributeLogicalName("usepositionhierarchy")]
        [DisplayName("Use position hierarchy")]
        public bool? UsePositionHierarchy {
            get {
                return GetAttributeValue<bool?>("usepositionhierarchy");
            }
            set {
                SetAttributeValue("usepositionhierarchy", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether searching in a grid should use the Quick Find view for the entity.</para>
        /// <para>Display Name: Use Quick Find view when searching in grids</para>
        /// </summary>
        [AttributeLogicalName("usequickfindviewforgridsearch")]
        [DisplayName("Use Quick Find view when searching in grids")]
        public bool? UseQuickFindViewForGridSearch {
            get {
                return GetAttributeValue<bool?>("usequickfindviewforgridsearch");
            }
            set {
                SetAttributeValue("usequickfindviewforgridsearch", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the read-optimized form should be enabled for this organization.</para>
        /// <para>Display Name: Use Read-Optimized Form</para>
        /// </summary>
        [AttributeLogicalName("usereadform")]
        [DisplayName("Use Read-Optimized Form")]
        public bool? UseReadForm {
            get {
                return GetAttributeValue<bool?>("usereadform");
            }
            set {
                SetAttributeValue("usereadform", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates default protocol selected for organization.</para>
        /// <para>Display Name: User Skype Protocol</para>
        /// </summary>
        [AttributeLogicalName("useskypeprotocol")]
        [DisplayName("User Skype Protocol")]
        public bool? UseSkypeProtocol {
            get {
                return GetAttributeValue<bool?>("useskypeprotocol");
            }
            set {
                SetAttributeValue("useskypeprotocol", value);
            }
        }
        
        /// <summary>
        /// <para>The interval at which user access is checked for auditing.</para>
        /// <para>Display Name: User Authentication Auditing Interval</para>
        /// </summary>
        [AttributeLogicalName("useraccessauditinginterval")]
        [DisplayName("User Authentication Auditing Interval")]
        [Range(0, 2147483647)]
        public int? UserAccessAuditingInterval {
            get {
                return GetAttributeValue<int?>("useraccessauditinginterval");
            }
            set {
                SetAttributeValue("useraccessauditinginterval", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default group of users in the organization.</para>
        /// <para>Display Name: User Group</para>
        /// </summary>
        [AttributeLogicalName("usergroupid")]
        [DisplayName("User Group")]
        public Guid? UserGroupId {
            get {
                return GetAttributeValue<Guid?>("usergroupid");
            }
            set {
                SetAttributeValue("usergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Enable the user rating feature to show the NSAT score and comment to maker</para>
        /// <para>Display Name: Enable the user rating feature</para>
        /// </summary>
        [AttributeLogicalName("userratingenabled")]
        [DisplayName("Enable the user rating feature")]
        public bool? UserRatingEnabled {
            get {
                return GetAttributeValue<bool?>("userratingenabled");
            }
            set {
                SetAttributeValue("userratingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Hash of the V3 callout configuration file.</para>
        /// <para>Display Name: V3 Callout Hash</para>
        /// </summary>
        [AttributeLogicalName("v3calloutconfighash")]
        [DisplayName("V3 Callout Hash")]
        [MaxLength(256)]
        public string V3CalloutConfigHash {
            get {
                return GetAttributeValue<string>("v3calloutconfighash");
            }
        }
        
        /// <summary>
        /// <para>Validation mode for apps in this environment</para>
        /// <para>Display Name: Validation mode for apps in this environment</para>
        /// </summary>
        [AttributeLogicalName("validationmode")]
        [DisplayName("Validation mode for apps in this environment")]
        public Organization_ValidationMode? ValidationMode {
            get {
                return GetOptionSetValue<Organization_ValidationMode>("validationmode");
            }
            set {
                SetOptionSetValue("validationmode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the organization.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Hash value of web resources.</para>
        /// <para>Display Name: Web resource hash</para>
        /// </summary>
        [AttributeLogicalName("webresourcehash")]
        [DisplayName("Web resource hash")]
        [MaxLength(100)]
        public string WebResourceHash {
            get {
                return GetAttributeValue<string>("webresourcehash");
            }
            set {
                SetAttributeValue("webresourcehash", value);
            }
        }
        
        /// <summary>
        /// <para>Designated first day of the week throughout Microsoft Dynamics 365.</para>
        /// <para>Display Name: Week Start Day Code</para>
        /// </summary>
        [AttributeLogicalName("weekstartdaycode")]
        [DisplayName("Week Start Day Code")]
        public Object WeekStartDayCode {
            get {
                return GetAttributeValue<Object>("weekstartdaycode");
            }
            set {
                SetAttributeValue("weekstartdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>For Internal use only.</para>
        /// <para>Display Name: For Internal use only.</para>
        /// </summary>
        [AttributeLogicalName("widgetproperties")]
        [DisplayName("For Internal use only.")]
        [MaxLength(100)]
        public string WidgetProperties {
            get {
                return GetAttributeValue<string>("widgetproperties");
            }
            set {
                SetAttributeValue("widgetproperties", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes the Yammer group ID</para>
        /// <para>Display Name: Yammer Group Id</para>
        /// </summary>
        [AttributeLogicalName("yammergroupid")]
        [DisplayName("Yammer Group Id")]
        [Range(0, 2147483647)]
        public int? YammerGroupId {
            get {
                return GetAttributeValue<int?>("yammergroupid");
            }
            set {
                SetAttributeValue("yammergroupid", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes the Yammer network permalink</para>
        /// <para>Display Name: Yammer Network Permalink</para>
        /// </summary>
        [AttributeLogicalName("yammernetworkpermalink")]
        [DisplayName("Yammer Network Permalink")]
        [MaxLength(100)]
        public string YammerNetworkPermalink {
            get {
                return GetAttributeValue<string>("yammernetworkpermalink");
            }
            set {
                SetAttributeValue("yammernetworkpermalink", value);
            }
        }
        
        /// <summary>
        /// <para>Denotes whether the OAuth access token for Yammer network has expired</para>
        /// <para>Display Name: Yammer OAuth Access Token Expired</para>
        /// </summary>
        [AttributeLogicalName("yammeroauthaccesstokenexpired")]
        [DisplayName("Yammer OAuth Access Token Expired")]
        public bool? YammerOAuthAccessTokenExpired {
            get {
                return GetAttributeValue<bool?>("yammeroauthaccesstokenexpired");
            }
            set {
                SetAttributeValue("yammeroauthaccesstokenexpired", value);
            }
        }
        
        /// <summary>
        /// <para>Internal Use Only</para>
        /// <para>Display Name: Internal Use Only</para>
        /// </summary>
        [AttributeLogicalName("yammerpostmethod")]
        [DisplayName("Internal Use Only")]
        public Organization_YammerPostMethod? YammerPostMethod {
            get {
                return GetOptionSetValue<Organization_YammerPostMethod>("yammerpostmethod");
            }
            set {
                SetOptionSetValue("yammerpostmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the first week of the year is specified in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Year Start Week Code</para>
        /// </summary>
        [AttributeLogicalName("yearstartweekcode")]
        [DisplayName("Year Start Week Code")]
        [Range(-2147483648, 2147483647)]
        public int? YearStartWeekCode {
            get {
                return GetAttributeValue<int?>("yearstartweekcode");
            }
            set {
                SetAttributeValue("yearstartweekcode", value);
            }
        }
        
        [RelationshipSchemaName("Organization_AsyncOperations")]
        public IEnumerable<AsyncOperation> Organization_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Organization_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Organization_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("acknowledgementtemplateid")]
        [RelationshipSchemaName("Template_Organization")]
        public Template Template_Organization {
            get {
                return GetRelatedEntity<Template>("Template_Organization", null);
            }
            set {
                SetRelatedEntity("Template_Organization", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_organization_createdonbehalfby")]
        public SystemUser lk_organization_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organization_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_organization_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_organization_modifiedonbehalfby")]
        public SystemUser lk_organization_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organization_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_organization_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_organizationbase_createdby")]
        public SystemUser lk_organizationbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organizationbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_organizationbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_organizationbase_modifiedby")]
        public SystemUser lk_organizationbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_organizationbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_organizationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_appmodule")]
        public IEnumerable<AppModule> organization_appmodule {
            get {
                return GetRelatedEntities<AppModule>("organization_appmodule", null);
            }
            set {
                SetRelatedEntities("organization_appmodule", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_business_units")]
        public IEnumerable<BusinessUnit> organization_business_units {
            get {
                return GetRelatedEntities<BusinessUnit>("organization_business_units", null);
            }
            set {
                SetRelatedEntities("organization_business_units", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_plugintype")]
        public IEnumerable<PluginType> organization_plugintype {
            get {
                return GetRelatedEntities<PluginType>("organization_plugintype", null);
            }
            set {
                SetRelatedEntities("organization_plugintype", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_roles")]
        public IEnumerable<Role> organization_roles {
            get {
                return GetRelatedEntities<Role>("organization_roles", null);
            }
            set {
                SetRelatedEntities("organization_roles", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> organization_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("organization_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("organization_sdkmessageprocessingstep", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_sdkmessageprocessingstepsecureconfig")]
        public IEnumerable<SdkMessageProcessingStepSecureConfig> organization_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntities<SdkMessageProcessingStepSecureConfig>("organization_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntities("organization_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_system_users")]
        public IEnumerable<SystemUser> organization_system_users {
            get {
                return GetRelatedEntities<SystemUser>("organization_system_users", null);
            }
            set {
                SetRelatedEntities("organization_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("organization_teams")]
        public IEnumerable<Team> organization_teams {
            get {
                return GetRelatedEntities<Team>("organization_teams", null);
            }
            set {
                SetRelatedEntities("organization_teams", null, value);
            }
        }
        
        public static Organization Retrieve(IOrganizationService service, Guid id, params Expression<Func<Organization,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Type that inherits from the IPlugin interface and is contained within a plug-in assembly.</para>
    /// <para>Display Name: Plug-in Type</para>
    /// </summary>
    [EntityLogicalName("plugintype")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class PluginType : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "plugintype";
        
        public const int EntityTypeCode = 4602;
        
        public PluginType() : 
                base(EntityLogicalName) {
        }
        
        public PluginType(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("plugintypeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("plugintypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in type.</para>
        /// <para>Display Name: Plug-in Type</para>
        /// </summary>
        [AttributeLogicalName("plugintypeid")]
        [DisplayName("Plug-in Type")]
        public Guid? PluginTypeId {
            get {
                return GetAttributeValue<Guid?>("plugintypeid");
            }
            set {
                SetId("plugintypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Full path name of the plug-in assembly.</para>
        /// <para>Display Name: Assembly Name</para>
        /// </summary>
        [AttributeLogicalName("assemblyname")]
        [DisplayName("Assembly Name")]
        [MaxLength(100)]
        public string AssemblyName {
            get {
                return GetAttributeValue<string>("assemblyname");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the plug-in type.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the plug-in type was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the plugintype.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Culture code for the plug-in assembly.</para>
        /// <para>Display Name: Culture</para>
        /// </summary>
        [AttributeLogicalName("culture")]
        [DisplayName("Culture")]
        [MaxLength(32)]
        public string Culture {
            get {
                return GetAttributeValue<string>("culture");
            }
        }
        
        /// <summary>
        /// <para>Serialized Custom Activity Type information, including required arguments. For more information, see SandboxCustomActivityInfo.</para>
        /// <para>Display Name: Custom Workflow Activity Info</para>
        /// </summary>
        [AttributeLogicalName("customworkflowactivityinfo")]
        [DisplayName("Custom Workflow Activity Info")]
        public string CustomWorkflowActivityInfo {
            get {
                return GetAttributeValue<string>("customworkflowactivityinfo");
            }
        }
        
        /// <summary>
        /// <para>Customization level of the plug-in type.</para>
        /// </summary>
        [AttributeLogicalName("customizationlevel")]
        [Range(-255, 255)]
        public int? CustomizationLevel {
            get {
                return GetAttributeValue<int?>("customizationlevel");
            }
        }
        
        /// <summary>
        /// <para>Description of the plug-in type.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(256)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>User friendly name for the plug-in.</para>
        /// <para>Display Name: Display Name</para>
        /// </summary>
        [AttributeLogicalName("friendlyname")]
        [DisplayName("Display Name")]
        [MaxLength(256)]
        public string FriendlyName {
            get {
                return GetAttributeValue<string>("friendlyname");
            }
            set {
                SetAttributeValue("friendlyname", value);
            }
        }
        
        [AttributeLogicalName("ismanaged")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Indicates if the plug-in is a custom activity for workflows.</para>
        /// <para>Display Name: Is Workflow Activity</para>
        /// </summary>
        [AttributeLogicalName("isworkflowactivity")]
        [DisplayName("Is Workflow Activity")]
        public bool? IsWorkflowActivity {
            get {
                return GetAttributeValue<bool?>("isworkflowactivity");
            }
        }
        
        /// <summary>
        /// <para>Major of the version number of the assembly for the plug-in type.</para>
        /// <para>Display Name: Version major</para>
        /// </summary>
        [AttributeLogicalName("major")]
        [DisplayName("Version major")]
        [Range(0, 65534)]
        public int? Major {
            get {
                return GetAttributeValue<int?>("major");
            }
        }
        
        /// <summary>
        /// <para>Minor of the version number of the assembly for the plug-in type.</para>
        /// <para>Display Name: Version minor</para>
        /// </summary>
        [AttributeLogicalName("minor")]
        [DisplayName("Version minor")]
        [Range(0, 65534)]
        public int? Minor {
            get {
                return GetAttributeValue<int?>("minor");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the plug-in type.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the plug-in type was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the plugintype.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the plug-in type.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(256)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the plug-in type is associated.</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in assembly that contains this plug-in type.</para>
        /// <para>Display Name: Plugin Assembly</para>
        /// </summary>
        [AttributeLogicalName("pluginassemblyid")]
        [DisplayName("Plugin Assembly")]
        public EntityReference PluginAssemblyId {
            get {
                return GetAttributeValue<EntityReference>("pluginassemblyid");
            }
            set {
                SetAttributeValue("pluginassemblyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in type.</para>
        /// </summary>
        [AttributeLogicalName("plugintypeidunique")]
        public Guid? PluginTypeIdUnique {
            get {
                return GetAttributeValue<Guid?>("plugintypeidunique");
            }
        }
        
        /// <summary>
        /// <para>Name of the plug-in type.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(256)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Public key token of the assembly for the plug-in type.</para>
        /// <para>Display Name: Public Key Token</para>
        /// </summary>
        [AttributeLogicalName("publickeytoken")]
        [DisplayName("Public Key Token")]
        [MaxLength(32)]
        public string PublicKeyToken {
            get {
                return GetAttributeValue<string>("publickeytoken");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Fully qualified type name of the plug-in type.</para>
        /// <para>Display Name: Type Name</para>
        /// </summary>
        [AttributeLogicalName("typename")]
        [DisplayName("Type Name")]
        [MaxLength(256)]
        public string TypeName {
            get {
                return GetAttributeValue<string>("typename");
            }
            set {
                SetAttributeValue("typename", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the assembly for the plug-in type.</para>
        /// <para>Display Name: Version</para>
        /// </summary>
        [AttributeLogicalName("version")]
        [DisplayName("Version")]
        [MaxLength(48)]
        public string Version {
            get {
                return GetAttributeValue<string>("version");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Group name of workflow custom activity.</para>
        /// <para>Display Name: Workflow Activity Group Name</para>
        /// </summary>
        [AttributeLogicalName("workflowactivitygroupname")]
        [DisplayName("Workflow Activity Group Name")]
        [MaxLength(256)]
        public string WorkflowActivityGroupName {
            get {
                return GetAttributeValue<string>("workflowactivitygroupname");
            }
            set {
                SetAttributeValue("workflowactivitygroupname", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("createdby_plugintype")]
        public SystemUser createdby_plugintype {
            get {
                return GetRelatedEntity<SystemUser>("createdby_plugintype", null);
            }
            set {
                SetRelatedEntity("createdby_plugintype", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_plugintype_createdonbehalfby")]
        public SystemUser lk_plugintype_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_plugintype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_plugintype_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_plugintype_modifiedonbehalfby")]
        public SystemUser lk_plugintype_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_plugintype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_plugintype_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("modifiedby_plugintype")]
        public SystemUser modifiedby_plugintype {
            get {
                return GetRelatedEntity<SystemUser>("modifiedby_plugintype", null);
            }
            set {
                SetRelatedEntity("modifiedby_plugintype", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_plugintype")]
        public Organization organization_plugintype {
            get {
                return GetRelatedEntity<Organization>("organization_plugintype", null);
            }
            set {
                SetRelatedEntity("organization_plugintype", null, value);
            }
        }
        
        [RelationshipSchemaName("plugintype_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> plugintype_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("plugintype_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("plugintype_sdkmessageprocessingstep", null, value);
            }
        }
        
        [RelationshipSchemaName("plugintypeid_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> plugintypeid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("plugintypeid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("plugintypeid_sdkmessageprocessingstep", null, value);
            }
        }
        
        public static PluginType Retrieve(IOrganizationService service, Guid id, params Expression<Func<PluginType,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Grouping of security privileges. Users are assigned roles that authorize their access to the Microsoft CRM system.</para>
    /// <para>Display Name: Security Role</para>
    /// </summary>
    [EntityLogicalName("role")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Role : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "role";
        
        public const int EntityTypeCode = 1036;
        
        public Role() : 
                base(EntityLogicalName) {
        }
        
        public Role(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("roleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("roleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the role.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("roleid")]
        [DisplayName("Role")]
        public Guid? RoleId {
            get {
                return GetAttributeValue<Guid?>("roleid");
            }
            set {
                SetId("roleid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the role is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the role can be deleted.</para>
        /// <para>Display Name: Can Be Deleted</para>
        /// </summary>
        [AttributeLogicalName("canbedeleted")]
        [DisplayName("Can Be Deleted")]
        public BooleanManagedProperty CanBeDeleted {
            get {
                return GetAttributeValue<BooleanManagedProperty>("canbedeleted");
            }
            set {
                SetAttributeValue("canbedeleted", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the role.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the role was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the role.</para>
        /// <para>Display Name: Created By Impersonator</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By Impersonator")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Role is inherited by users from team membership, if role associated with team.</para>
        /// <para>Display Name: Is Inherited</para>
        /// </summary>
        [AttributeLogicalName("isinherited")]
        [DisplayName("Is Inherited")]
        public isinherited? IsInherited {
            get {
                return GetOptionSetValue<isinherited>("isinherited");
            }
            set {
                SetOptionSetValue("isinherited", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("State")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the role.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the role was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the role.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the role.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the role.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent role.</para>
        /// <para>Display Name: Parent Role</para>
        /// </summary>
        [AttributeLogicalName("parentroleid")]
        [DisplayName("Parent Role")]
        public EntityReference ParentRoleId {
            get {
                return GetAttributeValue<EntityReference>("parentroleid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent root role.</para>
        /// <para>Display Name: Parent Root Role</para>
        /// </summary>
        [AttributeLogicalName("parentrootroleid")]
        [DisplayName("Parent Root Role")]
        public EntityReference ParentRootRoleId {
            get {
                return GetAttributeValue<EntityReference>("parentrootroleid");
            }
        }
        
        /// <summary>
        /// <para>Name of the role.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique Id</para>
        /// </summary>
        [AttributeLogicalName("roleidunique")]
        [DisplayName("Unique Id")]
        public Guid? RoleIdUnique {
            get {
                return GetAttributeValue<Guid?>("roleidunique");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the role template that is associated with the role.</para>
        /// <para>Display Name: Role Template</para>
        /// </summary>
        [AttributeLogicalName("roletemplateid")]
        [DisplayName("Role Template")]
        public EntityReference RoleTemplateId {
            get {
                return GetAttributeValue<EntityReference>("roletemplateid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the role.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("role_parent_role", EntityRole.Referenced)]
        public IEnumerable<Role> Referencedrole_parent_role {
            get {
                return GetRelatedEntities<Role>("role_parent_role", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("role_parent_role", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("role_parent_root_role", EntityRole.Referenced)]
        public IEnumerable<Role> Referencedrole_parent_root_role {
            get {
                return GetRelatedEntities<Role>("role_parent_root_role", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("role_parent_root_role", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentroleid")]
        [RelationshipSchemaName("role_parent_role", EntityRole.Referencing)]
        public Role Referencingrole_parent_role {
            get {
                return GetRelatedEntity<Role>("role_parent_role", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("role_parent_role", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentrootroleid")]
        [RelationshipSchemaName("role_parent_root_role", EntityRole.Referencing)]
        public Role Referencingrole_parent_root_role {
            get {
                return GetRelatedEntity<Role>("role_parent_root_role", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("role_parent_root_role", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("Role_AsyncOperations")]
        public IEnumerable<AsyncOperation> Role_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Role_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Role_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("appmoduleroles_association")]
        public IEnumerable<AppModule> appmoduleroles_association {
            get {
                return GetRelatedEntities<AppModule>("appmoduleroles_association", null);
            }
            set {
                SetRelatedEntities("appmoduleroles_association", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_roles")]
        public BusinessUnit business_unit_roles {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_roles", null);
            }
            set {
                SetRelatedEntity("business_unit_roles", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_role_createdonbehalfby")]
        public SystemUser lk_role_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_role_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_role_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_role_modifiedonbehalfby")]
        public SystemUser lk_role_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_role_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_role_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_rolebase_createdby")]
        public SystemUser lk_rolebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_rolebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_rolebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_rolebase_modifiedby")]
        public SystemUser lk_rolebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_rolebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_rolebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_roles")]
        public Organization organization_roles {
            get {
                return GetRelatedEntity<Organization>("organization_roles", null);
            }
            set {
                SetRelatedEntity("organization_roles", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuserroles_association")]
        public IEnumerable<SystemUser> systemuserroles_association {
            get {
                return GetRelatedEntities<SystemUser>("systemuserroles_association", null);
            }
            set {
                SetRelatedEntities("systemuserroles_association", null, value);
            }
        }
        
        [RelationshipSchemaName("teamroles_association")]
        public IEnumerable<Team> teamroles_association {
            get {
                return GetRelatedEntities<Team>("teamroles_association", null);
            }
            set {
                SetRelatedEntities("teamroles_association", null, value);
            }
        }
        
        public static Role Retrieve(IOrganizationService service, Guid id, params Expression<Func<Role,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'RoleTemplateId BusinessUnit lookup key'</para>
        /// </summary>
        public static Role Retrieve_roletemplateid_businessunitid(IOrganizationService service, componentstate ComponentState, EntityReference BusinessUnitId, DateTime OverwriteTime, EntityReference RoleTemplateId, params Expression<Func<Role,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("componentstate", ComponentState);
            keys.Add("businessunitid", BusinessUnitId);
            keys.Add("overwritetime", OverwriteTime);
            keys.Add("roletemplateid", RoleTemplateId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'ParentRootRoleId BusinessUnit lookup key'</para>
        /// </summary>
        public static Role Retrieve_parentrootroleid_businessunitid(IOrganizationService service, componentstate ComponentState, EntityReference BusinessUnitId, DateTime OverwriteTime, EntityReference ParentRootRoleId, params Expression<Func<Role,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("componentstate", ComponentState);
            keys.Add("businessunitid", BusinessUnitId);
            keys.Add("overwritetime", OverwriteTime);
            keys.Add("parentrootroleid", ParentRootRoleId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'ParentRootRoleId BusinessUnit lookup key'</para>
        /// </summary>
        public void AltKey_parentrootroleid_businessunitid(componentstate ComponentState, EntityReference BusinessUnitId, DateTime OverwriteTime, EntityReference ParentRootRoleId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("componentstate", ComponentState);
            KeyAttributes.Add("businessunitid", BusinessUnitId);
            KeyAttributes.Add("overwritetime", OverwriteTime);
            KeyAttributes.Add("parentrootroleid", ParentRootRoleId);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'RoleTemplateId BusinessUnit lookup key'</para>
        /// </summary>
        public void AltKey_roletemplateid_businessunitid(componentstate ComponentState, EntityReference BusinessUnitId, DateTime OverwriteTime, EntityReference RoleTemplateId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("componentstate", ComponentState);
            KeyAttributes.Add("businessunitid", BusinessUnitId);
            KeyAttributes.Add("overwritetime", OverwriteTime);
            KeyAttributes.Add("roletemplateid", RoleTemplateId);
        }
    }
    
    /// <summary>
    /// <para>Stage in the execution pipeline that a plug-in is to execute.</para>
    /// <para>Display Name: Sdk Message Processing Step</para>
    /// </summary>
    [EntityLogicalName("sdkmessageprocessingstep")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SdkMessageProcessingStep : ExtendedEntity<SdkMessageProcessingStepState, SdkMessageProcessingStep_StatusCode> {
        
        public const string EntityLogicalName = "sdkmessageprocessingstep";
        
        public const int EntityTypeCode = 4608;
        
        public SdkMessageProcessingStep() : 
                base(EntityLogicalName) {
        }
        
        public SdkMessageProcessingStep(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("sdkmessageprocessingstepid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("sdkmessageprocessingstepid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message processing step entity.</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageprocessingstepid")]
        public Guid? SdkMessageProcessingStepId {
            get {
                return GetAttributeValue<Guid?>("sdkmessageprocessingstepid");
            }
            set {
                SetId("sdkmessageprocessingstepid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the asynchronous system job is automatically deleted on completion.</para>
        /// <para>Display Name: Asynchronous Automatic Delete</para>
        /// </summary>
        [AttributeLogicalName("asyncautodelete")]
        [DisplayName("Asynchronous Automatic Delete")]
        public bool? AsyncAutoDelete {
            get {
                return GetAttributeValue<bool?>("asyncautodelete");
            }
            set {
                SetAttributeValue("asyncautodelete", value);
            }
        }
        
        /// <summary>
        /// <para>Identifies whether a SDK Message Processing Step type will be ReadOnly or Read Write. false - ReadWrite, true - ReadOnly </para>
        /// <para>Display Name: Intent</para>
        /// </summary>
        [AttributeLogicalName("canusereadonlyconnection")]
        [DisplayName("Intent")]
        public bool? CanUseReadOnlyConnection {
            get {
                return GetAttributeValue<bool?>("canusereadonlyconnection");
            }
            set {
                SetAttributeValue("canusereadonlyconnection", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(100)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Step-specific configuration for the plug-in type. Passed to the plug-in constructor at run time.</para>
        /// <para>Display Name: Configuration</para>
        /// </summary>
        [AttributeLogicalName("configuration")]
        [DisplayName("Configuration")]
        [MaxLength(1073741823)]
        public string Configuration {
            get {
                return GetAttributeValue<string>("configuration");
            }
            set {
                SetAttributeValue("configuration", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the SDK message processing step.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SDK message processing step was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the sdkmessageprocessingstep.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customization level of the SDK message processing step.</para>
        /// </summary>
        [AttributeLogicalName("customizationlevel")]
        [Range(-255, 255)]
        public int? CustomizationLevel {
            get {
                return GetAttributeValue<int?>("customizationlevel");
            }
        }
        
        /// <summary>
        /// <para>Description of the SDK message processing step.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        [MaxLength(256)]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Configuration for sending pipeline events to the Event Expander service.</para>
        /// <para>Display Name: EventExpander</para>
        /// </summary>
        [AttributeLogicalName("eventexpander")]
        [DisplayName("EventExpander")]
        [MaxLength(1073741823)]
        public string EventExpander {
            get {
                return GetAttributeValue<string>("eventexpander");
            }
            set {
                SetAttributeValue("eventexpander", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated event handler.</para>
        /// <para>Display Name: Event Handler</para>
        /// </summary>
        [AttributeLogicalName("eventhandler")]
        [DisplayName("Event Handler")]
        public EntityReference EventHandler {
            get {
                return GetAttributeValue<EntityReference>("eventhandler");
            }
            set {
                SetAttributeValue("eventhandler", value);
            }
        }
        
        /// <summary>
        /// <para>Comma-separated list of attributes. If at least one of these attributes is modified, the plug-in should execute.</para>
        /// <para>Display Name: Filtering Attributes</para>
        /// </summary>
        [AttributeLogicalName("filteringattributes")]
        [DisplayName("Filtering Attributes")]
        [MaxLength(100000)]
        public string FilteringAttributes {
            get {
                return GetAttributeValue<string>("filteringattributes");
            }
            set {
                SetAttributeValue("filteringattributes", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user to impersonate context when step is executed.</para>
        /// <para>Display Name: Impersonating User</para>
        /// </summary>
        [AttributeLogicalName("impersonatinguserid")]
        [DisplayName("Impersonating User")]
        public EntityReference ImpersonatingUserId {
            get {
                return GetAttributeValue<EntityReference>("impersonatinguserid");
            }
            set {
                SetAttributeValue("impersonatinguserid", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Identifies if a plug-in should be executed from a parent pipeline, a child pipeline, or both.</para>
        /// <para>Display Name: Invocation Source</para>
        /// </summary>
        [AttributeLogicalName("invocationsource")]
        [DisplayName("Invocation Source")]
        public SdkMessageProcessingStep_InvocationSource? InvocationSource {
            get {
                return GetOptionSetValue<SdkMessageProcessingStep_InvocationSource>("invocationsource");
            }
            set {
                SetOptionSetValue("invocationsource", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component should be hidden.</para>
        /// <para>Display Name: Hidden</para>
        /// </summary>
        [AttributeLogicalName("ishidden")]
        [DisplayName("Hidden")]
        public BooleanManagedProperty IsHidden {
            get {
                return GetAttributeValue<BooleanManagedProperty>("ishidden");
            }
            set {
                SetAttributeValue("ishidden", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component is managed.</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("State")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Run-time mode of execution, for example, synchronous or asynchronous.</para>
        /// <para>Display Name: Execution Mode</para>
        /// </summary>
        [AttributeLogicalName("mode")]
        [DisplayName("Execution Mode")]
        public SdkMessageProcessingStep_Mode? Mode {
            get {
                return GetOptionSetValue<SdkMessageProcessingStep_Mode>("mode");
            }
            set {
                SetOptionSetValue("mode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the SDK message processing step.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SDK message processing step was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the sdkmessageprocessingstep.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of SdkMessage processing step.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(256)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the SDK message processing step is associated.</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in type associated with the step.</para>
        /// <para>Display Name: Plug-In Type</para>
        /// </summary>
        [AttributeLogicalName("plugintypeid")]
        [DisplayName("Plug-In Type")]
        public EntityReference PluginTypeId {
            get {
                return GetAttributeValue<EntityReference>("plugintypeid");
            }
            set {
                SetAttributeValue("plugintypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of SdkMessage processing step.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(256)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Processing order within the stage.</para>
        /// <para>Display Name: Execution Order</para>
        /// </summary>
        [AttributeLogicalName("rank")]
        [DisplayName("Execution Order")]
        [Range(-2147483648, 2147483647)]
        public int? Rank {
            get {
                return GetAttributeValue<int?>("rank");
            }
            set {
                SetAttributeValue("rank", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Holds miscellaneous properties related to runtime integration.</para>
        /// <para>Display Name: Runtime Integration Properties</para>
        /// </summary>
        [AttributeLogicalName("runtimeintegrationproperties")]
        [DisplayName("Runtime Integration Properties")]
        [MaxLength(512)]
        public string RuntimeIntegrationProperties {
            get {
                return GetAttributeValue<string>("runtimeintegrationproperties");
            }
            set {
                SetAttributeValue("runtimeintegrationproperties", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message filter.</para>
        /// <para>Display Name: SdkMessage Filter</para>
        /// </summary>
        [AttributeLogicalName("sdkmessagefilterid")]
        [DisplayName("SdkMessage Filter")]
        public EntityReference SdkMessageFilterId {
            get {
                return GetAttributeValue<EntityReference>("sdkmessagefilterid");
            }
            set {
                SetAttributeValue("sdkmessagefilterid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message.</para>
        /// <para>Display Name: SDK Message</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageid")]
        [DisplayName("SDK Message")]
        public EntityReference SdkMessageId {
            get {
                return GetAttributeValue<EntityReference>("sdkmessageid");
            }
            set {
                SetAttributeValue("sdkmessageid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message processing step.</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageprocessingstepidunique")]
        public Guid? SdkMessageProcessingStepIdUnique {
            get {
                return GetAttributeValue<Guid?>("sdkmessageprocessingstepidunique");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Sdk message processing step secure configuration.</para>
        /// <para>Display Name: SDK Message Processing Step Secure Configuration</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageprocessingstepsecureconfigid")]
        [DisplayName("SDK Message Processing Step Secure Configuration")]
        public EntityReference SdkMessageProcessingStepSecureConfigId {
            get {
                return GetAttributeValue<EntityReference>("sdkmessageprocessingstepsecureconfigid");
            }
            set {
                SetAttributeValue("sdkmessageprocessingstepsecureconfigid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Stage in the execution pipeline that the SDK message processing step is in.</para>
        /// <para>Display Name: Execution Stage</para>
        /// </summary>
        [AttributeLogicalName("stage")]
        [DisplayName("Execution Stage")]
        public SdkMessageProcessingStep_Stage? Stage {
            get {
                return GetOptionSetValue<SdkMessageProcessingStep_Stage>("stage");
            }
            set {
                SetOptionSetValue("stage", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the SDK message processing step.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SdkMessageProcessingStepState? StateCode {
            get {
                return GetOptionSetValue<SdkMessageProcessingStepState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the SDK message processing step.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SdkMessageProcessingStep_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SdkMessageProcessingStep_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Deployment that the SDK message processing step should be executed on; server, client, or both.</para>
        /// <para>Display Name: Deployment</para>
        /// </summary>
        [AttributeLogicalName("supporteddeployment")]
        [DisplayName("Deployment")]
        public SdkMessageProcessingStep_SupportedDeployment? SupportedDeployment {
            get {
                return GetOptionSetValue<SdkMessageProcessingStep_SupportedDeployment>("supporteddeployment");
            }
            set {
                SetOptionSetValue("supporteddeployment", value);
            }
        }
        
        /// <summary>
        /// <para>Number that identifies a specific revision of the SDK message processing step. </para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("SdkMessageProcessingStep_AsyncOperations")]
        public IEnumerable<AsyncOperation> SdkMessageProcessingStep_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("SdkMessageProcessingStep_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("SdkMessageProcessingStep_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("createdby_sdkmessageprocessingstep")]
        public SystemUser createdby_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<SystemUser>("createdby_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("createdby_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("impersonatinguserid")]
        [RelationshipSchemaName("impersonatinguserid_sdkmessageprocessingstep")]
        public SystemUser impersonatinguserid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<SystemUser>("impersonatinguserid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("impersonatinguserid_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_sdkmessageprocessingstep_createdonbehalfby")]
        public SystemUser lk_sdkmessageprocessingstep_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sdkmessageprocessingstep_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sdkmessageprocessingstep_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_sdkmessageprocessingstep_modifiedonbehalfby")]
        public SystemUser lk_sdkmessageprocessingstep_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sdkmessageprocessingstep_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sdkmessageprocessingstep_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("modifiedby_sdkmessageprocessingstep")]
        public SystemUser modifiedby_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<SystemUser>("modifiedby_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("modifiedby_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_sdkmessageprocessingstep")]
        public Organization organization_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<Organization>("organization_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("organization_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("eventhandler")]
        [RelationshipSchemaName("plugintype_sdkmessageprocessingstep")]
        public PluginType plugintype_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<PluginType>("plugintype_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("plugintype_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("plugintypeid")]
        [RelationshipSchemaName("plugintypeid_sdkmessageprocessingstep")]
        public PluginType plugintypeid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<PluginType>("plugintypeid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("plugintypeid_sdkmessageprocessingstep", null, value);
            }
        }
        
        [AttributeLogicalName("sdkmessageprocessingstepsecureconfigid")]
        [RelationshipSchemaName("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep")]
        public SdkMessageProcessingStepSecureConfig sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntity<SdkMessageProcessingStepSecureConfig>("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntity("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep", null, value);
            }
        }
        
        public static SdkMessageProcessingStep Retrieve(IOrganizationService service, Guid id, params Expression<Func<SdkMessageProcessingStep,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Non-public custom configuration that is passed to a plug-in's constructor.</para>
    /// <para>Display Name: Sdk Message Processing Step Secure Configuration</para>
    /// </summary>
    [EntityLogicalName("sdkmessageprocessingstepsecureconfig")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SdkMessageProcessingStepSecureConfig : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "sdkmessageprocessingstepsecureconfig";
        
        public const int EntityTypeCode = 4616;
        
        public SdkMessageProcessingStepSecureConfig() : 
                base(EntityLogicalName) {
        }
        
        public SdkMessageProcessingStepSecureConfig(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("sdkmessageprocessingstepsecureconfigid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("sdkmessageprocessingstepsecureconfigid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message processing step secure configuration.</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageprocessingstepsecureconfigid")]
        public Guid? SdkMessageProcessingStepSecureConfigId {
            get {
                return GetAttributeValue<Guid?>("sdkmessageprocessingstepsecureconfigid");
            }
            set {
                SetId("sdkmessageprocessingstepsecureconfigid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the SDK message processing step.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SDK message processing step was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the sdkmessageprocessingstepsecureconfig.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customization level of the SDK message processing step secure configuration.</para>
        /// </summary>
        [AttributeLogicalName("customizationlevel")]
        [Range(-255, 255)]
        public int? CustomizationLevel {
            get {
                return GetAttributeValue<int?>("customizationlevel");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the SDK message processing step.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the SDK message processing step was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the sdkmessageprocessingstepsecureconfig.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the SDK message processing step is associated.</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK message processing step.</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageprocessingstepsecureconfigidunique")]
        public Guid? SdkMessageProcessingStepSecureConfigIdUnique {
            get {
                return GetAttributeValue<Guid?>("sdkmessageprocessingstepsecureconfigidunique");
            }
        }
        
        /// <summary>
        /// <para>Secure step-specific configuration for the plug-in type that is passed to the plug-in's constructor at run time.</para>
        /// <para>Display Name: Secure Configuration</para>
        /// </summary>
        [AttributeLogicalName("secureconfig")]
        [DisplayName("Secure Configuration")]
        [MaxLength(1073741823)]
        public string SecureConfig {
            get {
                return GetAttributeValue<string>("secureconfig");
            }
            set {
                SetAttributeValue("secureconfig", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("createdby_sdkmessageprocessingstepsecureconfig")]
        public SystemUser createdby_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntity<SystemUser>("createdby_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntity("createdby_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby")]
        public SystemUser lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby")]
        public SystemUser lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("modifiedby_sdkmessageprocessingstepsecureconfig")]
        public SystemUser modifiedby_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntity<SystemUser>("modifiedby_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntity("modifiedby_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_sdkmessageprocessingstepsecureconfig")]
        public Organization organization_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntity<Organization>("organization_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntity("organization_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [RelationshipSchemaName("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("sdkmessageprocessingstepsecureconfigid_sdkmessageprocessingstep", null, value);
            }
        }
        
        public static SdkMessageProcessingStepSecureConfig Retrieve(IOrganizationService service, Guid id, params Expression<Func<SdkMessageProcessingStepSecureConfig,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was set as soft deleted in Azure.</para>
        /// <para>Display Name: Azure Deleted On</para>
        /// </summary>
        [AttributeLogicalName("azuredeletedon")]
        [DisplayName("Azure Deleted On")]
        public DateTime? AzureDeletedOn {
            get {
                return GetAttributeValue<DateTime?>("azuredeletedon");
            }
        }
        
        /// <summary>
        /// <para>Azure state of user</para>
        /// <para>Display Name: Azure State</para>
        /// </summary>
        [AttributeLogicalName("azurestate")]
        [DisplayName("Azure State")]
        public SystemUser_AzureState? AzureState {
            get {
                return GetOptionSetValue<SystemUser_AzureState>("azurestate");
            }
            set {
                SetOptionSetValue("azurestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_AsyncOperations")]
        public IEnumerable<AsyncOperation> SystemUser_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("SystemUser_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("SystemUser_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public IEnumerable<Email> SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("annotation_owning_user")]
        public IEnumerable<Annotation> annotation_owning_user {
            get {
                return GetRelatedEntities<Annotation>("annotation_owning_user", null);
            }
            set {
                SetRelatedEntities("annotation_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_system_users")]
        public BusinessUnit business_unit_system_users {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntity("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("createdby_plugintype")]
        public IEnumerable<PluginType> createdby_plugintype {
            get {
                return GetRelatedEntities<PluginType>("createdby_plugintype", null);
            }
            set {
                SetRelatedEntities("createdby_plugintype", null, value);
            }
        }
        
        [RelationshipSchemaName("createdby_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> createdby_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("createdby_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("createdby_sdkmessageprocessingstep", null, value);
            }
        }
        
        [RelationshipSchemaName("createdby_sdkmessageprocessingstepsecureconfig")]
        public IEnumerable<SdkMessageProcessingStepSecureConfig> createdby_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntities<SdkMessageProcessingStepSecureConfig>("createdby_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntities("createdby_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_NewMatchesReviewedBy_SystemUser")]
        public IEnumerable<Account> dsn_Account_NewMatchesReviewedBy_SystemUser {
            get {
                return GetRelatedEntities<Account>("dsn_Account_NewMatchesReviewedBy_SystemUser", null);
            }
            set {
                SetRelatedEntities("dsn_Account_NewMatchesReviewedBy_SystemUser", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_RatedBy_SystemUser")]
        public IEnumerable<Account> dsn_Account_RatedBy_SystemUser {
            get {
                return GetRelatedEntities<Account>("dsn_Account_RatedBy_SystemUser", null);
            }
            set {
                SetRelatedEntities("dsn_Account_RatedBy_SystemUser", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_account_DeActRequestBy")]
        public IEnumerable<Account> dsn_account_DeActRequestBy {
            get {
                return GetRelatedEntities<Account>("dsn_account_DeActRequestBy", null);
            }
            set {
                SetRelatedEntities("dsn_account_DeActRequestBy", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_systemuser_account_AccountSponsor")]
        public IEnumerable<Account> dsn_systemuser_account_AccountSponsor {
            get {
                return GetRelatedEntities<Account>("dsn_systemuser_account_AccountSponsor", null);
            }
            set {
                SetRelatedEntities("dsn_systemuser_account_AccountSponsor", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_systemuser_contact_RequestSendBy")]
        public IEnumerable<Contact> dsn_systemuser_contact_RequestSendBy {
            get {
                return GetRelatedEntities<Contact>("dsn_systemuser_contact_RequestSendBy", null);
            }
            set {
                SetRelatedEntities("dsn_systemuser_contact_RequestSendBy", null, value);
            }
        }
        
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public IEnumerable<Email> email_acceptingentity_systemuser {
            get {
                return GetRelatedEntities<Email>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntities("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("impersonatinguserid_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> impersonatinguserid_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("impersonatinguserid_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("impersonatinguserid_sdkmessageprocessingstep", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdby")]
        public IEnumerable<Annotation> lk_annotationbase_createdby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appmodule_createdby")]
        public IEnumerable<AppModule> lk_appmodule_createdby {
            get {
                return GetRelatedEntities<AppModule>("lk_appmodule_createdby", null);
            }
            set {
                SetRelatedEntities("lk_appmodule_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appmodule_createdonbehalfby")]
        public IEnumerable<AppModule> lk_appmodule_createdonbehalfby {
            get {
                return GetRelatedEntities<AppModule>("lk_appmodule_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appmodule_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appmodule_modifiedby")]
        public IEnumerable<AppModule> lk_appmodule_modifiedby {
            get {
                return GetRelatedEntities<AppModule>("lk_appmodule_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_appmodule_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appmodule_modifiedonbehalfby")]
        public IEnumerable<AppModule> lk_appmodule_modifiedonbehalfby {
            get {
                return GetRelatedEntities<AppModule>("lk_appmodule_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appmodule_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_asyncoperation_createdby")]
        public IEnumerable<AsyncOperation> lk_asyncoperation_createdby {
            get {
                return GetRelatedEntities<AsyncOperation>("lk_asyncoperation_createdby", null);
            }
            set {
                SetRelatedEntities("lk_asyncoperation_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_asyncoperation_createdonbehalfby")]
        public IEnumerable<AsyncOperation> lk_asyncoperation_createdonbehalfby {
            get {
                return GetRelatedEntities<AsyncOperation>("lk_asyncoperation_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_asyncoperation_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_asyncoperation_modifiedby")]
        public IEnumerable<AsyncOperation> lk_asyncoperation_modifiedby {
            get {
                return GetRelatedEntities<AsyncOperation>("lk_asyncoperation_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_asyncoperation_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_asyncoperation_modifiedonbehalfby")]
        public IEnumerable<AsyncOperation> lk_asyncoperation_modifiedonbehalfby {
            get {
                return GetRelatedEntities<AsyncOperation>("lk_asyncoperation_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_asyncoperation_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_audit_callinguserid")]
        public IEnumerable<Audit> lk_audit_callinguserid {
            get {
                return GetRelatedEntities<Audit>("lk_audit_callinguserid", null);
            }
            set {
                SetRelatedEntities("lk_audit_callinguserid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_audit_userid")]
        public IEnumerable<Audit> lk_audit_userid {
            get {
                return GetRelatedEntities<Audit>("lk_audit_userid", null);
            }
            set {
                SetRelatedEntities("lk_audit_userid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_createdby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdby")]
        public IEnumerable<Email> lk_email_createdby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public IEnumerable<Email> lk_email_createdonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedby")]
        public IEnumerable<Email> lk_email_modifiedby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public IEnumerable<Email> lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organization_createdonbehalfby")]
        public IEnumerable<Organization> lk_organization_createdonbehalfby {
            get {
                return GetRelatedEntities<Organization>("lk_organization_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_organization_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organization_modifiedonbehalfby")]
        public IEnumerable<Organization> lk_organization_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Organization>("lk_organization_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_organization_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organizationbase_createdby")]
        public IEnumerable<Organization> lk_organizationbase_createdby {
            get {
                return GetRelatedEntities<Organization>("lk_organizationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_organizationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_organizationbase_modifiedby")]
        public IEnumerable<Organization> lk_organizationbase_modifiedby {
            get {
                return GetRelatedEntities<Organization>("lk_organizationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_organizationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_plugintype_createdonbehalfby")]
        public IEnumerable<PluginType> lk_plugintype_createdonbehalfby {
            get {
                return GetRelatedEntities<PluginType>("lk_plugintype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_plugintype_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_plugintype_modifiedonbehalfby")]
        public IEnumerable<PluginType> lk_plugintype_modifiedonbehalfby {
            get {
                return GetRelatedEntities<PluginType>("lk_plugintype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_plugintype_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_role_createdonbehalfby")]
        public IEnumerable<Role> lk_role_createdonbehalfby {
            get {
                return GetRelatedEntities<Role>("lk_role_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_role_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_role_modifiedonbehalfby")]
        public IEnumerable<Role> lk_role_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Role>("lk_role_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_role_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_rolebase_createdby")]
        public IEnumerable<Role> lk_rolebase_createdby {
            get {
                return GetRelatedEntities<Role>("lk_rolebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_rolebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_rolebase_modifiedby")]
        public IEnumerable<Role> lk_rolebase_modifiedby {
            get {
                return GetRelatedEntities<Role>("lk_rolebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_rolebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sdkmessageprocessingstep_createdonbehalfby")]
        public IEnumerable<SdkMessageProcessingStep> lk_sdkmessageprocessingstep_createdonbehalfby {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("lk_sdkmessageprocessingstep_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sdkmessageprocessingstep_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sdkmessageprocessingstep_modifiedonbehalfby")]
        public IEnumerable<SdkMessageProcessingStep> lk_sdkmessageprocessingstep_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("lk_sdkmessageprocessingstep_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sdkmessageprocessingstep_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby")]
        public IEnumerable<SdkMessageProcessingStepSecureConfig> lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby {
            get {
                return GetRelatedEntities<SdkMessageProcessingStepSecureConfig>("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sdkmessageprocessingstepsecureconfig_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby")]
        public IEnumerable<SdkMessageProcessingStepSecureConfig> lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SdkMessageProcessingStepSecureConfig>("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_sdkmessageprocessingstepsecureconfig_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public IEnumerable<Team> lk_team_createdonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public IEnumerable<Team> lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public IEnumerable<Team> lk_teambase_administratorid {
            get {
                return GetRelatedEntities<Team>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntities("lk_teambase_administratorid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_createdby")]
        public IEnumerable<Team> lk_teambase_createdby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public IEnumerable<Team> lk_teambase_modifiedby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_createdby")]
        public IEnumerable<Template> lk_templatebase_createdby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_createdonbehalfby")]
        public IEnumerable<Template> lk_templatebase_createdonbehalfby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_modifiedby")]
        public IEnumerable<Template> lk_templatebase_modifiedby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_modifiedonbehalfby")]
        public IEnumerable<Template> lk_templatebase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_timezonedefinition_createdby")]
        public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_createdby {
            get {
                return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_createdby", null);
            }
            set {
                SetRelatedEntities("lk_timezonedefinition_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_timezonedefinition_createdonbehalfby")]
        public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_createdonbehalfby {
            get {
                return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_timezonedefinition_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_timezonedefinition_modifiedby")]
        public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_modifiedby {
            get {
                return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_timezonedefinition_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_timezonedefinition_modifiedonbehalfby")]
        public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_modifiedonbehalfby {
            get {
                return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_timezonedefinition_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_usersettings_createdonbehalfby")]
        public IEnumerable<UserSettings> lk_usersettings_createdonbehalfby {
            get {
                return GetRelatedEntities<UserSettings>("lk_usersettings_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_usersettings_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_usersettings_modifiedonbehalfby")]
        public IEnumerable<UserSettings> lk_usersettings_modifiedonbehalfby {
            get {
                return GetRelatedEntities<UserSettings>("lk_usersettings_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_usersettings_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_usersettingsbase_createdby")]
        public IEnumerable<UserSettings> lk_usersettingsbase_createdby {
            get {
                return GetRelatedEntities<UserSettings>("lk_usersettingsbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_usersettingsbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_usersettingsbase_modifiedby")]
        public IEnumerable<UserSettings> lk_usersettingsbase_modifiedby {
            get {
                return GetRelatedEntities<UserSettings>("lk_usersettingsbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_usersettingsbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("modifiedby_plugintype")]
        public IEnumerable<PluginType> modifiedby_plugintype {
            get {
                return GetRelatedEntities<PluginType>("modifiedby_plugintype", null);
            }
            set {
                SetRelatedEntities("modifiedby_plugintype", null, value);
            }
        }
        
        [RelationshipSchemaName("modifiedby_sdkmessageprocessingstep")]
        public IEnumerable<SdkMessageProcessingStep> modifiedby_sdkmessageprocessingstep {
            get {
                return GetRelatedEntities<SdkMessageProcessingStep>("modifiedby_sdkmessageprocessingstep", null);
            }
            set {
                SetRelatedEntities("modifiedby_sdkmessageprocessingstep", null, value);
            }
        }
        
        [RelationshipSchemaName("modifiedby_sdkmessageprocessingstepsecureconfig")]
        public IEnumerable<SdkMessageProcessingStepSecureConfig> modifiedby_sdkmessageprocessingstepsecureconfig {
            get {
                return GetRelatedEntities<SdkMessageProcessingStepSecureConfig>("modifiedby_sdkmessageprocessingstepsecureconfig", null);
            }
            set {
                SetRelatedEntities("modifiedby_sdkmessageprocessingstepsecureconfig", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_system_users")]
        public Organization organization_system_users {
            get {
                return GetRelatedEntity<Organization>("organization_system_users", null);
            }
            set {
                SetRelatedEntity("organization_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_activity_parties")]
        public IEnumerable<ActivityParty> system_user_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntities("system_user_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_asyncoperation")]
        public IEnumerable<AsyncOperation> system_user_asyncoperation {
            get {
                return GetRelatedEntities<AsyncOperation>("system_user_asyncoperation", null);
            }
            set {
                SetRelatedEntities("system_user_asyncoperation", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_email_templates")]
        public IEnumerable<Template> system_user_email_templates {
            get {
                return GetRelatedEntities<Template>("system_user_email_templates", null);
            }
            set {
                SetRelatedEntities("system_user_email_templates", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_workflow")]
        public IEnumerable<Workflow> system_user_workflow {
            get {
                return GetRelatedEntities<Workflow>("system_user_workflow", null);
            }
            set {
                SetRelatedEntities("system_user_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuserroles_association")]
        public IEnumerable<Role> systemuserroles_association {
            get {
                return GetRelatedEntities<Role>("systemuserroles_association", null);
            }
            set {
                SetRelatedEntities("systemuserroles_association", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<Team> teammembership_association {
            get {
                return GetRelatedEntities<Team>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_email")]
        public IEnumerable<Email> user_email {
            get {
                return GetRelatedEntities<Email>("user_email", null);
            }
            set {
                SetRelatedEntities("user_email", null, value);
            }
        }
        
        [RelationshipSchemaName("user_settings")]
        public IEnumerable<UserSettings> user_settings {
            get {
                return GetRelatedEntities<UserSettings>("user_settings", null);
            }
            set {
                SetRelatedEntities("user_settings", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_createdby")]
        public IEnumerable<Workflow> workflow_createdby {
            get {
                return GetRelatedEntities<Workflow>("workflow_createdby", null);
            }
            set {
                SetRelatedEntities("workflow_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_createdonbehalfby")]
        public IEnumerable<Workflow> workflow_createdonbehalfby {
            get {
                return GetRelatedEntities<Workflow>("workflow_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("workflow_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_modifiedby")]
        public IEnumerable<Workflow> workflow_modifiedby {
            get {
                return GetRelatedEntities<Workflow>("workflow_modifiedby", null);
            }
            set {
                SetRelatedEntities("workflow_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("workflow_modifiedonbehalfby")]
        public IEnumerable<Workflow> workflow_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Workflow>("workflow_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("workflow_modifiedonbehalfby", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    [EntityLogicalName("systemuserroles")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUserRoles : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuserroles";
        
        public const string RelationshipSchemaName = "SystemUserRoles";
        
        public const int EntityTypeCode = 15;
        
        public SystemUserRoles() : 
                base(EntityLogicalName) {
        }
        
        public SystemUserRoles(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("systemuserroleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserroleid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("systemuserroleid")]
        public Guid? SystemUserRoleId {
            get {
                return GetAttributeValue<Guid?>("systemuserroleid");
            }
            set {
                SetId("systemuserroleid", value);
            }
        }
        
        [AttributeLogicalName("roleid")]
        public Guid? RoleId {
            get {
                return GetAttributeValue<Guid?>("roleid");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static SystemUserRoles Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUserRoles,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.</para>
    /// <para>Display Name: Team</para>
    /// </summary>
    [EntityLogicalName("team")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Team : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "team";
        
        public const int EntityTypeCode = 9;
        
        public Team() : 
                base(EntityLogicalName) {
        }
        
        public Team(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team.</para>
        /// <para>Display Name: Team</para>
        /// </summary>
        [AttributeLogicalName("teamid")]
        [DisplayName("Team")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user primary responsible for the team.</para>
        /// <para>Display Name: Administrator</para>
        /// </summary>
        [AttributeLogicalName("administratorid")]
        [DisplayName("Administrator")]
        public EntityReference AdministratorId {
            get {
                return GetAttributeValue<EntityReference>("administratorid");
            }
            set {
                SetAttributeValue("administratorid", value);
            }
        }
        
        /// <summary>
        /// <para>The Azure active directory object Id for a group.</para>
        /// <para>Display Name: Azure AD Object Id for a group</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object Id for a group")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
            set {
                SetAttributeValue("azureactivedirectoryobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the team is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the team.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the team.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the team.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the team.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the team with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the team is a default business unit team.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
        }
        
        [AttributeLogicalName("issastokenset")]
        public bool? IsSasTokenSet {
            get {
                return GetAttributeValue<bool?>("issastokenset");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership Type</para>
        /// </summary>
        [AttributeLogicalName("membershiptype")]
        [DisplayName("Membership Type")]
        public Team_MembershipType? MembershipType {
            get {
                return GetOptionSetValue<Team_MembershipType>("membershiptype");
            }
            set {
                SetOptionSetValue("membershiptype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the team.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the team.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the team.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the team.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the team relates to.</para>
        /// <para>Display Name: Regarding Object Id</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding Object Id")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Share Link Qualifier</para>
        /// </summary>
        [AttributeLogicalName("sharelinkqualifier")]
        [DisplayName("Share Link Qualifier")]
        [MaxLength(1250)]
        public string ShareLinkQualifier {
            get {
                return GetAttributeValue<string>("sharelinkqualifier");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the team will be managed by the system.</para>
        /// <para>Display Name: Is System Managed</para>
        /// </summary>
        [AttributeLogicalName("systemmanaged")]
        [DisplayName("Is System Managed")]
        public bool? SystemManaged {
            get {
                return GetAttributeValue<bool?>("systemmanaged");
            }
        }
        
        /// <summary>
        /// <para>Shows the team template that is associated with the team.</para>
        /// <para>Display Name: Team Template Identifier</para>
        /// </summary>
        [AttributeLogicalName("teamtemplateid")]
        [DisplayName("Team Template Identifier")]
        public EntityReference TeamTemplateId {
            get {
                return GetAttributeValue<EntityReference>("teamtemplateid");
            }
            set {
                SetAttributeValue("teamtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the team type.</para>
        /// <para>Display Name: Team Type</para>
        /// </summary>
        [AttributeLogicalName("teamtype")]
        [DisplayName("Team Type")]
        public Team_TeamType? TeamType {
            get {
                return GetOptionSetValue<Team_TeamType>("teamtype");
            }
            set {
                SetOptionSetValue("teamtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the team.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the team.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Responsible Office</para>
        /// </summary>
        [AttributeLogicalName("dsn_responsibleoffice")]
        [DisplayName("Responsible Office")]
        public bool? dsn_ResponsibleOffice {
            get {
                return GetAttributeValue<bool?>("dsn_responsibleoffice");
            }
            set {
                SetAttributeValue("dsn_responsibleoffice", value);
            }
        }
        
        [RelationshipSchemaName("Team_AsyncOperations")]
        public IEnumerable<AsyncOperation> Team_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Team_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Team_AsyncOperations", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_teams")]
        public BusinessUnit business_unit_teams {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_teams", null);
            }
            set {
                SetRelatedEntity("business_unit_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_PNLTeam_Team")]
        public IEnumerable<Account> dsn_Account_PNLTeam_Team {
            get {
                return GetRelatedEntities<Account>("dsn_Account_PNLTeam_Team", null);
            }
            set {
                SetRelatedEntities("dsn_Account_PNLTeam_Team", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_ProfitCenter_Team")]
        public IEnumerable<Account> dsn_Account_ProfitCenter_Team {
            get {
                return GetRelatedEntities<Account>("dsn_Account_ProfitCenter_Team", null);
            }
            set {
                SetRelatedEntities("dsn_Account_ProfitCenter_Team", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_ResponsibleOffice_Team")]
        public IEnumerable<Account> dsn_Account_ResponsibleOffice_Team {
            get {
                return GetRelatedEntities<Account>("dsn_Account_ResponsibleOffice_Team", null);
            }
            set {
                SetRelatedEntities("dsn_Account_ResponsibleOffice_Team", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public SystemUser lk_team_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public SystemUser lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("administratorid")]
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public SystemUser lk_teambase_administratorid {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntity("lk_teambase_administratorid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_teambase_createdby")]
        public SystemUser lk_teambase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public SystemUser lk_teambase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("organizationid")]
        [RelationshipSchemaName("organization_teams")]
        public Organization organization_teams {
            get {
                return GetRelatedEntity<Organization>("organization_teams", null);
            }
            set {
                SetRelatedEntity("organization_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("team_accounts")]
        public IEnumerable<Account> team_accounts {
            get {
                return GetRelatedEntities<Account>("team_accounts", null);
            }
            set {
                SetRelatedEntities("team_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_annotations")]
        public IEnumerable<Annotation> team_annotations {
            get {
                return GetRelatedEntities<Annotation>("team_annotations", null);
            }
            set {
                SetRelatedEntities("team_annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("team_asyncoperation")]
        public IEnumerable<AsyncOperation> team_asyncoperation {
            get {
                return GetRelatedEntities<AsyncOperation>("team_asyncoperation", null);
            }
            set {
                SetRelatedEntities("team_asyncoperation", null, value);
            }
        }
        
        [RelationshipSchemaName("team_contacts")]
        public IEnumerable<Contact> team_contacts {
            get {
                return GetRelatedEntities<Contact>("team_contacts", null);
            }
            set {
                SetRelatedEntities("team_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_email")]
        public IEnumerable<Email> team_email {
            get {
                return GetRelatedEntities<Email>("team_email", null);
            }
            set {
                SetRelatedEntities("team_email", null, value);
            }
        }
        
        [RelationshipSchemaName("team_email_templates")]
        public IEnumerable<Template> team_email_templates {
            get {
                return GetRelatedEntities<Template>("team_email_templates", null);
            }
            set {
                SetRelatedEntities("team_email_templates", null, value);
            }
        }
        
        [RelationshipSchemaName("team_workflow")]
        public IEnumerable<Workflow> team_workflow {
            get {
                return GetRelatedEntities<Workflow>("team_workflow", null);
            }
            set {
                SetRelatedEntities("team_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<SystemUser> teammembership_association {
            get {
                return GetRelatedEntities<SystemUser>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("teamroles_association")]
        public IEnumerable<Role> teamroles_association {
            get {
                return GetRelatedEntities<Role>("teamroles_association", null);
            }
            set {
                SetRelatedEntities("teamroles_association", null, value);
            }
        }
        
        public static Team Retrieve(IOrganizationService service, Guid id, params Expression<Func<Team,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId with MembershipType'</para>
        /// </summary>
        public static Team Retrieve_aadobjectid_membershiptype(IOrganizationService service, Team_MembershipType MembershipType, Guid AzureActiveDirectoryObjectId, params Expression<Func<Team,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("membershiptype", MembershipType);
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId with MembershipType'</para>
        /// </summary>
        public void AltKey_aadobjectid_membershiptype(Team_MembershipType MembershipType, Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("membershiptype", MembershipType);
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    [EntityLogicalName("teammembership")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TeamMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "teammembership";
        
        public const string RelationshipSchemaName = "TeamMembership";
        
        public const int EntityTypeCode = 23;
        
        public TeamMembership() : 
                base(EntityLogicalName) {
        }
        
        public TeamMembership(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("teammembershipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team membership.</para>
        /// </summary>
        [AttributeLogicalName("teammembershipid")]
        public Guid? TeamMembershipId {
            get {
                return GetAttributeValue<Guid?>("teammembershipid");
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static TeamMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<TeamMembership,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("teamroles")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TeamRoles : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "teamroles";
        
        public const string RelationshipSchemaName = "TeamRoles";
        
        public const int EntityTypeCode = 40;
        
        public TeamRoles() : 
                base(EntityLogicalName) {
        }
        
        public TeamRoles(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("teamroleid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teamroleid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("teamroleid")]
        public Guid? TeamRoleId {
            get {
                return GetAttributeValue<Guid?>("teamroleid");
            }
            set {
                SetId("teamroleid", value);
            }
        }
        
        [AttributeLogicalName("roleid")]
        public Guid? RoleId {
            get {
                return GetAttributeValue<Guid?>("roleid");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static TeamRoles Retrieve(IOrganizationService service, Guid id, params Expression<Func<TeamRoles,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Template for an email message that contains the standard attributes of an email message.</para>
    /// <para>Display Name: Email Template</para>
    /// </summary>
    [EntityLogicalName("template")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Template : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "template";
        
        public const int EntityTypeCode = 2010;
        
        public Template() : 
                base(EntityLogicalName) {
        }
        
        public Template(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("templateid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the template.</para>
        /// <para>Display Name: Email Template</para>
        /// </summary>
        [AttributeLogicalName("templateid")]
        [DisplayName("Email Template")]
        public Guid? TemplateId {
            get {
                return GetAttributeValue<Guid?>("templateid");
            }
            set {
                SetId("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>Body text of the email template.</para>
        /// <para>Display Name: Body</para>
        /// </summary>
        [AttributeLogicalName("body")]
        [DisplayName("Body")]
        public string Body {
            get {
                return GetAttributeValue<string>("body");
            }
            set {
                SetAttributeValue("body", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the email template.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the email template was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the template.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the email template.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Generation Type Code</para>
        /// </summary>
        [AttributeLogicalName("generationtypecode")]
        [DisplayName("Generation Type Code")]
        [Range(0, 2147483647)]
        public int? GenerationTypeCode {
            get {
                return GetAttributeValue<int?>("generationtypecode");
            }
            set {
                SetAttributeValue("generationtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("Is Managed")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the template is personal or is available to all users.</para>
        /// <para>Display Name: Viewable By</para>
        /// </summary>
        [AttributeLogicalName("ispersonal")]
        [DisplayName("Viewable By")]
        public bool? IsPersonal {
            get {
                return GetAttributeValue<bool?>("ispersonal");
            }
            set {
                SetAttributeValue("ispersonal", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if a template is recommended by Dynamics 365.</para>
        /// <para>Display Name: Recommended</para>
        /// </summary>
        [AttributeLogicalName("isrecommended")]
        [DisplayName("Recommended")]
        public bool? IsRecommended {
            get {
                return GetAttributeValue<bool?>("isrecommended");
            }
        }
        
        /// <summary>
        /// <para>Language of the email template.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the email template.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the template.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the email template was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the template.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows the number of times emails that use this template have been opened.</para>
        /// <para>Display Name: Open Count</para>
        /// </summary>
        [AttributeLogicalName("opencount")]
        [DisplayName("Open Count")]
        [Range(0, 2147483647)]
        public int? OpenCount {
            get {
                return GetAttributeValue<int?>("opencount");
            }
        }
        
        /// <summary>
        /// <para>Shows the open rate of this template. This is based on number of opens on followed emails that use this template.</para>
        /// <para>Display Name: Open Rate</para>
        /// </summary>
        [AttributeLogicalName("openrate")]
        [DisplayName("Open Rate")]
        [Range(0, 2147483647)]
        public int? OpenRate {
            get {
                return GetAttributeValue<int?>("openrate");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the template for the email activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the template.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the template.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the template.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>XML data for the body of the email template.</para>
        /// <para>Display Name: Presentation XML</para>
        /// </summary>
        [AttributeLogicalName("presentationxml")]
        [DisplayName("Presentation XML")]
        public string PresentationXml {
            get {
                return GetAttributeValue<string>("presentationxml");
            }
            set {
                SetAttributeValue("presentationxml", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the template.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows the number of times emails that use this template have received replies.</para>
        /// <para>Display Name: Reply Count</para>
        /// </summary>
        [AttributeLogicalName("replycount")]
        [DisplayName("Reply Count")]
        [Range(0, 2147483647)]
        public int? ReplyCount {
            get {
                return GetAttributeValue<int?>("replycount");
            }
        }
        
        /// <summary>
        /// <para>Shows the reply rate for this template. This is based on number of replies received on followed emails that use this template.</para>
        /// <para>Display Name: Reply Rate</para>
        /// </summary>
        [AttributeLogicalName("replyrate")]
        [DisplayName("Reply Rate")]
        [Range(0, 2147483647)]
        public int? ReplyRate {
            get {
                return GetAttributeValue<int?>("replyrate");
            }
        }
        
        /// <summary>
        /// <para>Safe html of email template.</para>
        /// <para>Display Name: Safe HTML of email template</para>
        /// </summary>
        [AttributeLogicalName("safehtml")]
        [DisplayName("Safe HTML of email template")]
        public string SafeHtml {
            get {
                return GetAttributeValue<string>("safehtml");
            }
            set {
                SetAttributeValue("safehtml", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the email template.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>XML data for the subject of the email template.</para>
        /// <para>Display Name: Subject XML</para>
        /// </summary>
        [AttributeLogicalName("subjectpresentationxml")]
        [DisplayName("Subject XML")]
        public string SubjectPresentationXml {
            get {
                return GetAttributeValue<string>("subjectpresentationxml");
            }
            set {
                SetAttributeValue("subjectpresentationxml", value);
            }
        }
        
        /// <summary>
        /// <para>Safe html of email template subject.</para>
        /// <para>Display Name: Safe HTML of email template subject</para>
        /// </summary>
        [AttributeLogicalName("subjectsafehtml")]
        [DisplayName("Safe HTML of email template subject")]
        public string SubjectSafeHtml {
            get {
                return GetAttributeValue<string>("subjectsafehtml");
            }
            set {
                SetAttributeValue("subjectsafehtml", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("templateidunique")]
        public Guid? TemplateIdUnique {
            get {
                return GetAttributeValue<Guid?>("templateidunique");
            }
        }
        
        /// <summary>
        /// <para>Type of email template.</para>
        /// <para>Display Name: Template Type</para>
        /// </summary>
        [AttributeLogicalName("templatetypecode")]
        [DisplayName("Template Type")]
        public string TemplateTypeCode {
            get {
                return GetAttributeValue<string>("templatetypecode");
            }
            set {
                SetAttributeValue("templatetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the template.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(200)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of sent emails that use this template.</para>
        /// <para>Display Name: Sent email count</para>
        /// </summary>
        [AttributeLogicalName("usedcount")]
        [DisplayName("Sent email count")]
        [Range(0, 2147483647)]
        public int? UsedCount {
            get {
                return GetAttributeValue<int?>("usedcount");
            }
        }
        
        /// <summary>
        /// <para>Version number of the template.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Email_EmailTemplate")]
        public IEnumerable<Email> Email_EmailTemplate {
            get {
                return GetRelatedEntities<Email>("Email_EmailTemplate", null);
            }
            set {
                SetRelatedEntities("Email_EmailTemplate", null, value);
            }
        }
        
        [RelationshipSchemaName("Template_AsyncOperations")]
        public IEnumerable<AsyncOperation> Template_AsyncOperations {
            get {
                return GetRelatedEntities<AsyncOperation>("Template_AsyncOperations", null);
            }
            set {
                SetRelatedEntities("Template_AsyncOperations", null, value);
            }
        }
        
        [RelationshipSchemaName("Template_Organization")]
        public IEnumerable<Organization> Template_Organization {
            get {
                return GetRelatedEntities<Organization>("Template_Organization", null);
            }
            set {
                SetRelatedEntities("Template_Organization", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_templates")]
        public BusinessUnit business_unit_templates {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_templates", null);
            }
            set {
                SetRelatedEntity("business_unit_templates", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_templatebase_createdby")]
        public SystemUser lk_templatebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_templatebase_createdonbehalfby")]
        public SystemUser lk_templatebase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_templatebase_modifiedby")]
        public SystemUser lk_templatebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_templatebase_modifiedonbehalfby")]
        public SystemUser lk_templatebase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_email_templates")]
        public SystemUser system_user_email_templates {
            get {
                return GetRelatedEntity<SystemUser>("system_user_email_templates", null);
            }
            set {
                SetRelatedEntity("system_user_email_templates", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_email_templates")]
        public Team team_email_templates {
            get {
                return GetRelatedEntity<Team>("team_email_templates", null);
            }
            set {
                SetRelatedEntity("team_email_templates", null, value);
            }
        }
        
        public static Template Retrieve(IOrganizationService service, Guid id, params Expression<Func<Template,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Time zone definition, including name and time zone code.</para>
    /// <para>Display Name: Time Zone Definition</para>
    /// </summary>
    [EntityLogicalName("timezonedefinition")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TimeZoneDefinition : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "timezonedefinition";
        
        public const int EntityTypeCode = 4810;
        
        public TimeZoneDefinition() : 
                base(EntityLogicalName) {
        }
        
        public TimeZoneDefinition(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("userinterfacename");
            }
        }
        
        [AttributeLogicalName("timezonedefinitionid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("timezonedefinitionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the time zone record.</para>
        /// <para>Display Name: Time Zone Definition</para>
        /// </summary>
        [AttributeLogicalName("timezonedefinitionid")]
        [DisplayName("Time Zone Definition")]
        public Guid? TimeZoneDefinitionId {
            get {
                return GetAttributeValue<Guid?>("timezonedefinitionid");
            }
            set {
                SetId("timezonedefinitionid", value);
            }
        }
        
        /// <summary>
        /// <para>Base time bias of the time zone.</para>
        /// <para>Display Name: Bias</para>
        /// </summary>
        [AttributeLogicalName("bias")]
        [DisplayName("Bias")]
        [Range(-2147483648, 2147483647)]
        public int? Bias {
            get {
                return GetAttributeValue<int?>("bias");
            }
            set {
                SetAttributeValue("bias", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the time zone record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the time zone record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the timezonedefinition.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Time zone name for the daylight time.</para>
        /// <para>Display Name: Daylight Name</para>
        /// </summary>
        [AttributeLogicalName("daylightname")]
        [DisplayName("Daylight Name")]
        [MaxLength(100)]
        public string DaylightName {
            get {
                return GetAttributeValue<string>("daylightname");
            }
            set {
                SetAttributeValue("daylightname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the time zone record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the time zone record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the timezonedefinition.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the time zone definition.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Display name for the time zone in the Microsoft Windows registry.</para>
        /// <para>Display Name: User Interface Name</para>
        /// </summary>
        [AttributeLogicalName("userinterfacename")]
        [DisplayName("User Interface Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("userinterfacename");
            }
            set {
                SetAttributeValue("userinterfacename", value);
            }
        }
        
        /// <summary>
        /// <para>Order an entry for a time zone definition is retired. 0 for the latest entry.</para>
        /// <para>Display Name: Retired Order</para>
        /// </summary>
        [AttributeLogicalName("retiredorder")]
        [DisplayName("Retired Order")]
        [Range(-2147483648, 2147483647)]
        public int? RetiredOrder {
            get {
                return GetAttributeValue<int?>("retiredorder");
            }
            set {
                SetAttributeValue("retiredorder", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone name for the standard time.</para>
        /// <para>Display Name: Standard Name</para>
        /// </summary>
        [AttributeLogicalName("standardname")]
        [DisplayName("Standard Name")]
        [MaxLength(100)]
        public string StandardName {
            get {
                return GetAttributeValue<string>("standardname");
            }
            set {
                SetAttributeValue("standardname", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone identification code.</para>
        /// <para>Display Name: Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("timezonecode")]
        [DisplayName("Time Zone Code")]
        [Range(-2147483648, 2147483647)]
        public int? TimeZoneCode {
            get {
                return GetAttributeValue<int?>("timezonecode");
            }
            set {
                SetAttributeValue("timezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Display name for the time zone in the Microsoft Windows registry.</para>
        /// <para>Display Name: User Interface Name</para>
        /// </summary>
        [AttributeLogicalName("userinterfacename")]
        [DisplayName("User Interface Name")]
        [MaxLength(100)]
        public string UserInterfaceName {
            get {
                return GetAttributeValue<string>("userinterfacename");
            }
            set {
                SetAttributeValue("userinterfacename", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_timezonedefinition_createdby")]
        public SystemUser lk_timezonedefinition_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_timezonedefinition_createdby", null);
            }
            set {
                SetRelatedEntity("lk_timezonedefinition_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_timezonedefinition_createdonbehalfby")]
        public SystemUser lk_timezonedefinition_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_timezonedefinition_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_timezonedefinition_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_timezonedefinition_modifiedby")]
        public SystemUser lk_timezonedefinition_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_timezonedefinition_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_timezonedefinition_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_timezonedefinition_modifiedonbehalfby")]
        public SystemUser lk_timezonedefinition_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_timezonedefinition_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_timezonedefinition_modifiedonbehalfby", null, value);
            }
        }
        
        public static TimeZoneDefinition Retrieve(IOrganizationService service, Guid id, params Expression<Func<TimeZoneDefinition,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>User's preferred settings.</para>
    /// <para>Display Name: User Settings</para>
    /// </summary>
    [EntityLogicalName("usersettings")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class UserSettings : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "usersettings";
        
        public const int EntityTypeCode = 150;
        
        public UserSettings() : 
                base(EntityLogicalName) {
        }
        
        public UserSettings(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user.</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>AM designator to use in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("amdesignator")]
        [MaxLength(25)]
        public string AMDesignator {
            get {
                return GetAttributeValue<string>("amdesignator");
            }
            set {
                SetAttributeValue("amdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for address book synchronization in Microsoft Office Outlook.</para>
        /// </summary>
        [AttributeLogicalName("addressbooksyncinterval")]
        [Range(-2147483648, 2147483647)]
        public int? AddressBookSyncInterval {
            get {
                return GetAttributeValue<int?>("addressbooksyncinterval");
            }
            set {
                SetAttributeValue("addressbooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Default mode, such as simple or detailed, for advanced find.</para>
        /// </summary>
        [AttributeLogicalName("advancedfindstartupmode")]
        public int? AdvancedFindStartupMode {
            get {
                return GetAttributeValue<int?>("advancedfindstartupmode");
            }
            set {
                SetAttributeValue("advancedfindstartupmode", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.</para>
        /// </summary>
        [AttributeLogicalName("allowemailcredentials")]
        public bool? AllowEmailCredentials {
            get {
                return GetAttributeValue<bool?>("allowemailcredentials");
            }
        }
        
        /// <summary>
        /// <para>Set user status for ADC Suggestions</para>
        /// </summary>
        [AttributeLogicalName("autocaptureuserstatus")]
        [Range(-2147483648, 2147483647)]
        public int? AutoCaptureUserStatus {
            get {
                return GetAttributeValue<int?>("autocaptureuserstatus");
            }
            set {
                SetAttributeValue("autocaptureuserstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Auto-create contact on client promote</para>
        /// </summary>
        [AttributeLogicalName("autocreatecontactonpromote")]
        public int? AutoCreateContactOnPromote {
            get {
                return GetAttributeValue<int?>("autocreatecontactonpromote");
            }
            set {
                SetAttributeValue("autocreatecontactonpromote", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        public Guid? BusinessUnitId {
            get {
                return GetAttributeValue<Guid?>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Calendar type for the system. Set to Gregorian US by default.</para>
        /// </summary>
        [AttributeLogicalName("calendartype")]
        [Range(-2147483648, 2147483647)]
        public int? CalendarType {
            get {
                return GetAttributeValue<int?>("calendartype");
            }
            set {
                SetAttributeValue("calendartype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user settings.</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user settings object was created.</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the usersettings.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for currency.</para>
        /// </summary>
        [AttributeLogicalName("currencydecimalprecision")]
        [Range(-2147483648, 2147483647)]
        public int? CurrencyDecimalPrecision {
            get {
                return GetAttributeValue<int?>("currencydecimalprecision");
            }
            set {
                SetAttributeValue("currencydecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how currency symbols are placed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("currencyformatcode")]
        [Range(-2147483648, 2147483647)]
        public int? CurrencyFormatCode {
            get {
                return GetAttributeValue<int?>("currencyformatcode");
            }
            set {
                SetAttributeValue("currencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for currency in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("currencysymbol")]
        [MaxLength(13)]
        public string CurrencySymbol {
            get {
                return GetAttributeValue<string>("currencysymbol");
            }
            set {
                SetAttributeValue("currencysymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies the level of data validation in excel worksheets exported in a format suitable for import.</para>
        /// <para>Display Name: Data Validation Mode For Export To Excel</para>
        /// </summary>
        [AttributeLogicalName("datavalidationmodeforexporttoexcel")]
        [DisplayName("Data Validation Mode For Export To Excel")]
        public UserSettings_DataValidationModeForExportToExcel? DataValidationModeForExportToExcel {
            get {
                return GetOptionSetValue<UserSettings_DataValidationModeForExportToExcel>("datavalidationmodeforexporttoexcel");
            }
            set {
                SetOptionSetValue("datavalidationmodeforexporttoexcel", value);
            }
        }
        
        /// <summary>
        /// <para>Information about how the date is displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("dateformatcode")]
        [Range(-2147483648, 2147483647)]
        public int? DateFormatCode {
            get {
                return GetAttributeValue<int?>("dateformatcode");
            }
            set {
                SetAttributeValue("dateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>String showing how the date is displayed throughout Microsoft 365.</para>
        /// </summary>
        [AttributeLogicalName("dateformatstring")]
        [MaxLength(255)]
        public string DateFormatString {
            get {
                return GetAttributeValue<string>("dateformatstring");
            }
            set {
                SetAttributeValue("dateformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Character used to separate the month, the day, and the year in dates in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("dateseparator")]
        [MaxLength(5)]
        public string DateSeparator {
            get {
                return GetAttributeValue<string>("dateseparator");
            }
            set {
                SetAttributeValue("dateseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for decimal in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("decimalsymbol")]
        [MaxLength(5)]
        public string DecimalSymbol {
            get {
                return GetAttributeValue<string>("decimalsymbol");
            }
            set {
                SetAttributeValue("decimalsymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Default calendar view for the user.</para>
        /// </summary>
        [AttributeLogicalName("defaultcalendarview")]
        [Range(-2147483648, 2147483647)]
        public int? DefaultCalendarView {
            get {
                return GetAttributeValue<int?>("defaultcalendarview");
            }
            set {
                SetAttributeValue("defaultcalendarview", value);
            }
        }
        
        /// <summary>
        /// <para>Text area to enter default country code.</para>
        /// <para>Display Name: Default Country Code</para>
        /// </summary>
        [AttributeLogicalName("defaultcountrycode")]
        [DisplayName("Default Country Code")]
        [MaxLength(30)]
        public string DefaultCountryCode {
            get {
                return GetAttributeValue<string>("defaultcountrycode");
            }
            set {
                SetAttributeValue("defaultcountrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default dashboard.</para>
        /// </summary>
        [AttributeLogicalName("defaultdashboardid")]
        public Guid? DefaultDashboardId {
            get {
                return GetAttributeValue<Guid?>("defaultdashboardid");
            }
            set {
                SetAttributeValue("defaultdashboardid", value);
            }
        }
        
        /// <summary>
        /// <para>Default search experience for the user.</para>
        /// <para>Display Name: Default Search Experience</para>
        /// </summary>
        [AttributeLogicalName("defaultsearchexperience")]
        [DisplayName("Default Search Experience")]
        public UserSettings_DefaultSearchExperience? DefaultSearchExperience {
            get {
                return GetOptionSetValue<UserSettings_DefaultSearchExperience>("defaultsearchexperience");
            }
            set {
                SetOptionSetValue("defaultsearchexperience", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.Password attribute.</para>
        /// </summary>
        [AttributeLogicalName("emailpassword")]
        [MaxLength(200)]
        public string EmailPassword {
            get {
                return GetAttributeValue<string>("emailpassword");
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.UserName attribute.</para>
        /// </summary>
        [AttributeLogicalName("emailusername")]
        [MaxLength(200)]
        public string EmailUsername {
            get {
                return GetAttributeValue<string>("emailusername");
            }
        }
        
        /// <summary>
        /// <para>Indicates the form mode to be used.</para>
        /// <para>Display Name: Form Mode</para>
        /// </summary>
        [AttributeLogicalName("entityformmode")]
        [DisplayName("Form Mode")]
        public UserSettings_EntityFormMode? EntityFormMode {
            get {
                return GetOptionSetValue<UserSettings_EntityFormMode>("entityformmode");
            }
            set {
                SetOptionSetValue("entityformmode", value);
            }
        }
        
        /// <summary>
        /// <para>Order in which names are to be displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("fullnameconventioncode")]
        [Range(-2147483648, 2147483647)]
        public int? FullNameConventionCode {
            get {
                return GetAttributeValue<int?>("fullnameconventioncode");
            }
            set {
                SetAttributeValue("fullnameconventioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the Get Started pane in lists is enabled.</para>
        /// </summary>
        [AttributeLogicalName("getstartedpanecontentenabled")]
        public bool? GetStartedPaneContentEnabled {
            get {
                return GetAttributeValue<bool?>("getstartedpanecontentenabled");
            }
            set {
                SetAttributeValue("getstartedpanecontentenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Help language.</para>
        /// </summary>
        [AttributeLogicalName("helplanguageid")]
        [Range(0, 2147483647)]
        public int? HelpLanguageId {
            get {
                return GetAttributeValue<int?>("helplanguageid");
            }
            set {
                SetAttributeValue("helplanguageid", value);
            }
        }
        
        /// <summary>
        /// <para>Web site home page for the user.</para>
        /// </summary>
        [AttributeLogicalName("homepagearea")]
        [MaxLength(200)]
        public string HomepageArea {
            get {
                return GetAttributeValue<string>("homepagearea");
            }
            set {
                SetAttributeValue("homepagearea", value);
            }
        }
        
        /// <summary>
        /// <para>Configuration of the home page layout.</para>
        /// </summary>
        [AttributeLogicalName("homepagelayout")]
        [MaxLength(2000)]
        public string HomepageLayout {
            get {
                return GetAttributeValue<string>("homepagelayout");
            }
            set {
                SetAttributeValue("homepagelayout", value);
            }
        }
        
        /// <summary>
        /// <para>Web site page for the user.</para>
        /// </summary>
        [AttributeLogicalName("homepagesubarea")]
        [MaxLength(200)]
        public string HomepageSubarea {
            get {
                return GetAttributeValue<string>("homepagesubarea");
            }
            set {
                SetAttributeValue("homepagesubarea", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether a user account is to ignore unsolicited email (deprecated).</para>
        /// </summary>
        [AttributeLogicalName("ignoreunsolicitedemail")]
        public bool? IgnoreUnsolicitedEmail {
            get {
                return GetAttributeValue<bool?>("ignoreunsolicitedemail");
            }
            set {
                SetAttributeValue("ignoreunsolicitedemail", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email filtering method.</para>
        /// <para>Display Name: Incoming Email Filtering Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemailfilteringmethod")]
        [DisplayName("Incoming Email Filtering Method")]
        public UserSettings_IncomingEmailFilteringMethod? IncomingEmailFilteringMethod {
            get {
                return GetOptionSetValue<UserSettings_IncomingEmailFilteringMethod>("incomingemailfilteringmethod");
            }
            set {
                SetOptionSetValue("incomingemailfilteringmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Show or dismiss alert for Apps for 365.</para>
        /// <para>Display Name: Show alert for Apps for 365.</para>
        /// </summary>
        [AttributeLogicalName("isappsforcrmalertdismissed")]
        [DisplayName("Show alert for Apps for 365.")]
        public bool? IsAppsForCrmAlertDismissed {
            get {
                return GetAttributeValue<bool?>("isappsforcrmalertdismissed");
            }
            set {
                SetAttributeValue("isappsforcrmalertdismissed", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to use the Auto Capture feature enabled or not.</para>
        /// </summary>
        [AttributeLogicalName("isautodatacaptureenabled")]
        public bool? IsAutoDataCaptureEnabled {
            get {
                return GetAttributeValue<bool?>("isautodatacaptureenabled");
            }
            set {
                SetAttributeValue("isautodatacaptureenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable country code selection .</para>
        /// <para>Display Name: Enable Default Country Code</para>
        /// </summary>
        [AttributeLogicalName("isdefaultcountrycodecheckenabled")]
        [DisplayName("Enable Default Country Code")]
        public bool? IsDefaultCountryCodeCheckEnabled {
            get {
                return GetAttributeValue<bool?>("isdefaultcountrycodecheckenabled");
            }
            set {
                SetAttributeValue("isdefaultcountrycodecheckenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if duplicate detection is enabled when going online.</para>
        /// </summary>
        [AttributeLogicalName("isduplicatedetectionenabledwhengoingonline")]
        public bool? IsDuplicateDetectionEnabledWhenGoingOnline {
            get {
                return GetAttributeValue<bool?>("isduplicatedetectionenabledwhengoingonline");
            }
            set {
                SetAttributeValue("isduplicatedetectionenabledwhengoingonline", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable email conversation view on timeline wall selection.</para>
        /// </summary>
        [AttributeLogicalName("isemailconversationviewenabled")]
        public bool? IsEmailConversationViewEnabled {
            get {
                return GetAttributeValue<bool?>("isemailconversationviewenabled");
            }
            set {
                SetAttributeValue("isemailconversationviewenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Enable or disable guided help.</para>
        /// <para>Display Name: Enable Default Guided Help</para>
        /// </summary>
        [AttributeLogicalName("isguidedhelpenabled")]
        [DisplayName("Enable Default Guided Help")]
        public bool? IsGuidedHelpEnabled {
            get {
                return GetAttributeValue<bool?>("isguidedhelpenabled");
            }
            set {
                SetAttributeValue("isguidedhelpenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the synchronization of user resource booking with Exchange is enabled at user level.</para>
        /// <para>Display Name: Resource booking synchronization enabled</para>
        /// </summary>
        [AttributeLogicalName("isresourcebookingexchangesyncenabled")]
        [DisplayName("Resource booking synchronization enabled")]
        public bool? IsResourceBookingExchangeSyncEnabled {
            get {
                return GetAttributeValue<bool?>("isresourcebookingexchangesyncenabled");
            }
            set {
                SetAttributeValue("isresourcebookingexchangesyncenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if send as other user privilege is enabled or not.</para>
        /// </summary>
        [AttributeLogicalName("issendasallowed")]
        public bool? IsSendAsAllowed {
            get {
                return GetAttributeValue<bool?>("issendasallowed");
            }
            set {
                SetAttributeValue("issendasallowed", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the last time when the traces were read from the database.</para>
        /// </summary>
        [AttributeLogicalName("lastalertsviewedtime")]
        public DateTime? LastAlertsViewedTime {
            get {
                return GetAttributeValue<DateTime?>("lastalertsviewedtime");
            }
            set {
                SetAttributeValue("lastalertsviewedtime", value);
            }
        }
        
        /// <summary>
        /// <para>Stores the timestamp for when the ViewPersonalizationSettings attribute was updated for this user in the UserEntityUISettings table.</para>
        /// <para>Display Name: Last modified timestamp for the view personalization settings in UserEntityUISettings table</para>
        /// </summary>
        [AttributeLogicalName("lastmodifiedtimeforviewpersonalizationsettings")]
        [DisplayName("Last modified timestamp for the view personalization settings in UserEntityUISett" +
            "ings table")]
        public DateTime? LastModifiedTimeForViewPersonalizationSettings {
            get {
                return GetAttributeValue<DateTime?>("lastmodifiedtimeforviewpersonalizationsettings");
            }
            set {
                SetAttributeValue("lastmodifiedtimeforviewpersonalizationsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user locale.</para>
        /// </summary>
        [AttributeLogicalName("localeid")]
        [Range(0, 2147483647)]
        public int? LocaleId {
            get {
                return GetAttributeValue<int?>("localeid");
            }
            set {
                SetAttributeValue("localeid", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how Long Date is displayed throughout Microsoft 365.</para>
        /// </summary>
        [AttributeLogicalName("longdateformatcode")]
        [Range(-2147483648, 2147483647)]
        public int? LongDateFormatCode {
            get {
                return GetAttributeValue<int?>("longdateformatcode");
            }
            set {
                SetAttributeValue("longdateformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user settings.</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user settings object was last modified.</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the usersettings.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative currency numbers are displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("negativecurrencyformatcode")]
        [Range(0, 15)]
        public int? NegativeCurrencyFormatCode {
            get {
                return GetAttributeValue<int?>("negativecurrencyformatcode");
            }
            set {
                SetAttributeValue("negativecurrencyformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how negative numbers are displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("negativeformatcode")]
        [Range(-2147483648, 2147483647)]
        public int? NegativeFormatCode {
            get {
                return GetAttributeValue<int?>("negativeformatcode");
            }
            set {
                SetAttributeValue("negativeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Next tracking number.</para>
        /// </summary>
        [AttributeLogicalName("nexttrackingnumber")]
        [Range(-2147483648, 2147483647)]
        public int? NextTrackingNumber {
            get {
                return GetAttributeValue<int?>("nexttrackingnumber");
            }
            set {
                SetAttributeValue("nexttrackingnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how numbers are grouped in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("numbergroupformat")]
        [MaxLength(25)]
        public string NumberGroupFormat {
            get {
                return GetAttributeValue<string>("numbergroupformat");
            }
            set {
                SetAttributeValue("numbergroupformat", value);
            }
        }
        
        /// <summary>
        /// <para>Symbol used for number separation in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("numberseparator")]
        [MaxLength(5)]
        public string NumberSeparator {
            get {
                return GetAttributeValue<string>("numberseparator");
            }
            set {
                SetAttributeValue("numberseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.</para>
        /// </summary>
        [AttributeLogicalName("offlinesyncinterval")]
        [Range(-2147483648, 2147483647)]
        public int? OfflineSyncInterval {
            get {
                return GetAttributeValue<int?>("offlinesyncinterval");
            }
            set {
                SetAttributeValue("offlinesyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>Normal polling frequency used for record synchronization in Microsoft Office Outlook.</para>
        /// </summary>
        [AttributeLogicalName("outlooksyncinterval")]
        [Range(-2147483648, 2147483647)]
        public int? OutlookSyncInterval {
            get {
                return GetAttributeValue<int?>("outlooksyncinterval");
            }
            set {
                SetAttributeValue("outlooksyncinterval", value);
            }
        }
        
        /// <summary>
        /// <para>PM designator to use in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("pmdesignator")]
        [MaxLength(25)]
        public string PMDesignator {
            get {
                return GetAttributeValue<string>("pmdesignator");
            }
            set {
                SetAttributeValue("pmdesignator", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how many items to list on a page in list views.</para>
        /// </summary>
        [AttributeLogicalName("paginglimit")]
        [Range(0, 2147483647)]
        public int? PagingLimit {
            get {
                return GetAttributeValue<int?>("paginglimit");
            }
            set {
                SetAttributeValue("paginglimit", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("personalizationsettings")]
        public string PersonalizationSettings {
            get {
                return GetAttributeValue<string>("personalizationsettings");
            }
            set {
                SetAttributeValue("personalizationsettings", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used for prices.</para>
        /// </summary>
        [AttributeLogicalName("pricingdecimalprecision")]
        [Range(-2147483648, 2147483647)]
        public int? PricingDecimalPrecision {
            get {
                return GetAttributeValue<int?>("pricingdecimalprecision");
            }
            set {
                SetAttributeValue("pricingdecimalprecision", value);
            }
        }
        
        /// <summary>
        /// <para>Picklist for selecting the user preference for reporting scripting errors.</para>
        /// <para>Display Name: Report Script Errors</para>
        /// </summary>
        [AttributeLogicalName("reportscripterrors")]
        [DisplayName("Report Script Errors")]
        public UserSettings_ReportScriptErrors? ReportScriptErrors {
            get {
                return GetOptionSetValue<UserSettings_ReportScriptErrors>("reportscripterrors");
            }
            set {
                SetOptionSetValue("reportscripterrors", value);
            }
        }
        
        /// <summary>
        /// <para>The version number for resource booking synchronization with Exchange.</para>
        /// <para>Display Name: User resource booking synchronization version</para>
        /// </summary>
        [AttributeLogicalName("resourcebookingexchangesyncversion")]
        [DisplayName("User resource booking synchronization version")]
        public long? ResourceBookingExchangeSyncVersion {
            get {
                return GetAttributeValue<long?>("resourcebookingexchangesyncversion");
            }
            set {
                SetAttributeValue("resourcebookingexchangesyncversion", value);
            }
        }
        
        /// <summary>
        /// <para>Store selected customer service hub dashboard saved filter id.</para>
        /// </summary>
        [AttributeLogicalName("selectedglobalfilterid")]
        public Guid? SelectedGlobalFilterId {
            get {
                return GetAttributeValue<Guid?>("selectedglobalfilterid");
            }
            set {
                SetAttributeValue("selectedglobalfilterid", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether to display the week number in calendar displays in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("showweeknumber")]
        public bool? ShowWeekNumber {
            get {
                return GetAttributeValue<bool?>("showweeknumber");
            }
            set {
                SetAttributeValue("showweeknumber", value);
            }
        }
        
        /// <summary>
        /// <para>For Internal use only</para>
        /// </summary>
        [AttributeLogicalName("splitviewstate")]
        public bool? SplitViewState {
            get {
                return GetAttributeValue<bool?>("splitviewstate");
            }
            set {
                SetAttributeValue("splitviewstate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the company field in Microsoft Office Outlook items are set during Outlook synchronization.</para>
        /// </summary>
        [AttributeLogicalName("synccontactcompany")]
        public bool? SyncContactCompany {
            get {
                return GetAttributeValue<bool?>("synccontactcompany");
            }
            set {
                SetAttributeValue("synccontactcompany", value);
            }
        }
        
        /// <summary>
        /// <para>The number of times a user has interacted with the Tabled Scoped Dataverse Search feature teaching bubble.</para>
        /// <para>Display Name: Table Scoped Dataverse Search Feature Teaching Bubble Views</para>
        /// </summary>
        [AttributeLogicalName("tablescopeddvsearchfeatureteachingbubbleviews")]
        [DisplayName("Table Scoped Dataverse Search Feature Teaching Bubble Views")]
        [Range(0, 100)]
        public int? TableScopedDVSearchFeatureTeachingBubbleViews {
            get {
                return GetAttributeValue<int?>("tablescopeddvsearchfeatureteachingbubbleviews");
            }
            set {
                SetAttributeValue("tablescopeddvsearchfeatureteachingbubbleviews", value);
            }
        }
        
        /// <summary>
        /// <para>The number of times a user has interacted with the Tabled Scoped Dataverse Search Quick Find teaching bubble.</para>
        /// <para>Display Name: Table Scoped Dataverse Search Quick Find Teaching Bubble Views</para>
        /// </summary>
        [AttributeLogicalName("tablescopeddvsearchquickfindteachingbubbleviews")]
        [DisplayName("Table Scoped Dataverse Search Quick Find Teaching Bubble Views")]
        [Range(0, 100)]
        public int? TableScopedDVSearchQuickFindTeachingBubbleViews {
            get {
                return GetAttributeValue<int?>("tablescopeddvsearchquickfindteachingbubbleviews");
            }
            set {
                SetAttributeValue("tablescopeddvsearchquickfindteachingbubbleviews", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies how the time is displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("timeformatcode")]
        [Range(-2147483648, 2147483647)]
        public int? TimeFormatCode {
            get {
                return GetAttributeValue<int?>("timeformatcode");
            }
            set {
                SetAttributeValue("timeformatcode", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("timeformatstring")]
        [MaxLength(255)]
        public string TimeFormatString {
            get {
                return GetAttributeValue<string>("timeformatstring");
            }
            set {
                SetAttributeValue("timeformatstring", value);
            }
        }
        
        /// <summary>
        /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
        /// </summary>
        [AttributeLogicalName("timeseparator")]
        [MaxLength(5)]
        public string TimeSeparator {
            get {
                return GetAttributeValue<string>("timeseparator");
            }
            set {
                SetAttributeValue("timeseparator", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone adjustment for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonebias")]
        [Range(-2147483648, 2147483647)]
        public int? TimeZoneBias {
            get {
                return GetAttributeValue<int?>("timezonebias");
            }
            set {
                SetAttributeValue("timezonebias", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone for the user.</para>
        /// </summary>
        [AttributeLogicalName("timezonecode")]
        public int? TimeZoneCode {
            get {
                return GetAttributeValue<int?>("timezonecode");
            }
            set {
                SetAttributeValue("timezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight adjustment for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightbias")]
        [Range(-2147483648, 2147483647)]
        public int? TimeZoneDaylightBias {
            get {
                return GetAttributeValue<int?>("timezonedaylightbias");
            }
            set {
                SetAttributeValue("timezonedaylightbias", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight day for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightday")]
        public int? TimeZoneDaylightDay {
            get {
                return GetAttributeValue<int?>("timezonedaylightday");
            }
            set {
                SetAttributeValue("timezonedaylightday", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight day of week for the user. System calculated based on the time zone selected in Options.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightdayofweek")]
        public int? TimeZoneDaylightDayOfWeek {
            get {
                return GetAttributeValue<int?>("timezonedaylightdayofweek");
            }
            set {
                SetAttributeValue("timezonedaylightdayofweek", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight hour for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylighthour")]
        public int? TimeZoneDaylightHour {
            get {
                return GetAttributeValue<int?>("timezonedaylighthour");
            }
            set {
                SetAttributeValue("timezonedaylighthour", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight minute for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightminute")]
        public int? TimeZoneDaylightMinute {
            get {
                return GetAttributeValue<int?>("timezonedaylightminute");
            }
            set {
                SetAttributeValue("timezonedaylightminute", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight month for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightmonth")]
        public int? TimeZoneDaylightMonth {
            get {
                return GetAttributeValue<int?>("timezonedaylightmonth");
            }
            set {
                SetAttributeValue("timezonedaylightmonth", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight second for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightsecond")]
        public int? TimeZoneDaylightSecond {
            get {
                return GetAttributeValue<int?>("timezonedaylightsecond");
            }
            set {
                SetAttributeValue("timezonedaylightsecond", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone daylight year for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonedaylightyear")]
        public int? TimeZoneDaylightYear {
            get {
                return GetAttributeValue<int?>("timezonedaylightyear");
            }
            set {
                SetAttributeValue("timezonedaylightyear", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard time bias for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardbias")]
        [Range(-2147483648, 2147483647)]
        public int? TimeZoneStandardBias {
            get {
                return GetAttributeValue<int?>("timezonestandardbias");
            }
            set {
                SetAttributeValue("timezonestandardbias", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard day for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardday")]
        public int? TimeZoneStandardDay {
            get {
                return GetAttributeValue<int?>("timezonestandardday");
            }
            set {
                SetAttributeValue("timezonestandardday", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard day of week for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandarddayofweek")]
        public int? TimeZoneStandardDayOfWeek {
            get {
                return GetAttributeValue<int?>("timezonestandarddayofweek");
            }
            set {
                SetAttributeValue("timezonestandarddayofweek", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard hour for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardhour")]
        public int? TimeZoneStandardHour {
            get {
                return GetAttributeValue<int?>("timezonestandardhour");
            }
            set {
                SetAttributeValue("timezonestandardhour", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard minute for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardminute")]
        public int? TimeZoneStandardMinute {
            get {
                return GetAttributeValue<int?>("timezonestandardminute");
            }
            set {
                SetAttributeValue("timezonestandardminute", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard month for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardmonth")]
        public int? TimeZoneStandardMonth {
            get {
                return GetAttributeValue<int?>("timezonestandardmonth");
            }
            set {
                SetAttributeValue("timezonestandardmonth", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard second for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardsecond")]
        public int? TimeZoneStandardSecond {
            get {
                return GetAttributeValue<int?>("timezonestandardsecond");
            }
            set {
                SetAttributeValue("timezonestandardsecond", value);
            }
        }
        
        /// <summary>
        /// <para>Local time zone standard year for the user. System calculated based on the time zone selected.</para>
        /// </summary>
        [AttributeLogicalName("timezonestandardyear")]
        public int? TimeZoneStandardYear {
            get {
                return GetAttributeValue<int?>("timezonestandardyear");
            }
            set {
                SetAttributeValue("timezonestandardyear", value);
            }
        }
        
        /// <summary>
        /// <para>Tracking token ID.</para>
        /// </summary>
        [AttributeLogicalName("trackingtokenid")]
        [Range(-2147483648, 2147483647)]
        public int? TrackingTokenId {
            get {
                return GetAttributeValue<int?>("trackingtokenid");
            }
            set {
                SetAttributeValue("trackingtokenid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default currency of the user.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the language in which to view the user interface (UI).</para>
        /// </summary>
        [AttributeLogicalName("uilanguageid")]
        [Range(0, 2147483647)]
        public int? UILanguageId {
            get {
                return GetAttributeValue<int?>("uilanguageid");
            }
            set {
                SetAttributeValue("uilanguageid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to use the Microsoft Dynamics 365 appointment form within Microsoft Office Outlook for creating new appointments.</para>
        /// </summary>
        [AttributeLogicalName("usecrmformforappointment")]
        public bool? UseCrmFormForAppointment {
            get {
                return GetAttributeValue<bool?>("usecrmformforappointment");
            }
            set {
                SetAttributeValue("usecrmformforappointment", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to use the Microsoft Dynamics 365 contact form within Microsoft Office Outlook for creating new contacts.</para>
        /// </summary>
        [AttributeLogicalName("usecrmformforcontact")]
        public bool? UseCrmFormForContact {
            get {
                return GetAttributeValue<bool?>("usecrmformforcontact");
            }
            set {
                SetAttributeValue("usecrmformforcontact", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to use the Microsoft Dynamics 365 email form within Microsoft Office Outlook for creating new emails.</para>
        /// </summary>
        [AttributeLogicalName("usecrmformforemail")]
        public bool? UseCrmFormForEmail {
            get {
                return GetAttributeValue<bool?>("usecrmformforemail");
            }
            set {
                SetAttributeValue("usecrmformforemail", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether to use the Microsoft Dynamics 365 task form within Microsoft Office Outlook for creating new tasks.</para>
        /// </summary>
        [AttributeLogicalName("usecrmformfortask")]
        public bool? UseCrmFormForTask {
            get {
                return GetAttributeValue<bool?>("usecrmformfortask");
            }
            set {
                SetAttributeValue("usecrmformfortask", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether image strips are used to render images.</para>
        /// </summary>
        [AttributeLogicalName("useimagestrips")]
        public bool? UseImageStrips {
            get {
                return GetAttributeValue<bool?>("useimagestrips");
            }
            set {
                SetAttributeValue("useimagestrips", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies user profile ids in comma separated list.</para>
        /// </summary>
        [AttributeLogicalName("userprofile")]
        [MaxLength(1024)]
        public string UserProfile {
            get {
                return GetAttributeValue<string>("userprofile");
            }
            set {
                SetAttributeValue("userprofile", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The layout of the visualization pane.</para>
        /// <para>Display Name: Visualization Pane Layout.</para>
        /// </summary>
        [AttributeLogicalName("visualizationpanelayout")]
        [DisplayName("Visualization Pane Layout.")]
        public UserSettings_VisualizationPaneLayout? VisualizationPaneLayout {
            get {
                return GetOptionSetValue<UserSettings_VisualizationPaneLayout>("visualizationpanelayout");
            }
            set {
                SetOptionSetValue("visualizationpanelayout", value);
            }
        }
        
        /// <summary>
        /// <para>Workday start time for the user.</para>
        /// </summary>
        [AttributeLogicalName("workdaystarttime")]
        [MaxLength(5)]
        public string WorkdayStartTime {
            get {
                return GetAttributeValue<string>("workdaystarttime");
            }
            set {
                SetAttributeValue("workdaystarttime", value);
            }
        }
        
        /// <summary>
        /// <para>Workday stop time for the user.</para>
        /// </summary>
        [AttributeLogicalName("workdaystoptime")]
        [MaxLength(5)]
        public string WorkdayStopTime {
            get {
                return GetAttributeValue<string>("workdaystoptime");
            }
            set {
                SetAttributeValue("workdaystoptime", value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_user_settings")]
        public BusinessUnit business_unit_user_settings {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_user_settings", null);
            }
            set {
                SetRelatedEntity("business_unit_user_settings", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_usersettings_createdonbehalfby")]
        public SystemUser lk_usersettings_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_usersettings_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_usersettings_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_usersettings_modifiedonbehalfby")]
        public SystemUser lk_usersettings_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_usersettings_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_usersettings_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_usersettingsbase_createdby")]
        public SystemUser lk_usersettingsbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_usersettingsbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_usersettingsbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_usersettingsbase_modifiedby")]
        public SystemUser lk_usersettingsbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_usersettingsbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_usersettingsbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        [RelationshipSchemaName("user_settings")]
        public SystemUser user_settings {
            get {
                return GetRelatedEntity<SystemUser>("user_settings", null);
            }
            set {
                SetRelatedEntity("user_settings", null, value);
            }
        }
        
        public static UserSettings Retrieve(IOrganizationService service, Guid id, params Expression<Func<UserSettings,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Set of logical rules that define the steps necessary to automate a specific business process, task, or set of actions to be performed.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [EntityLogicalName("workflow")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Workflow : ExtendedEntity<WorkflowState, Workflow_StatusCode> {
        
        public const string EntityLogicalName = "workflow";
        
        public const int EntityTypeCode = 4703;
        
        public Workflow() : 
                base(EntityLogicalName) {
        }
        
        public Workflow(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("workflowid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("workflowid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("workflowid")]
        [DisplayName("Process")]
        public Guid? WorkflowId {
            get {
                return GetAttributeValue<Guid?>("workflowid");
            }
            set {
                SetId("workflowid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the latest activation record for the process.</para>
        /// <para>Display Name: Active Process ID</para>
        /// </summary>
        [AttributeLogicalName("activeworkflowid")]
        [DisplayName("Active Process ID")]
        public EntityReference ActiveWorkflowId {
            get {
                return GetAttributeValue<EntityReference>("activeworkflowid");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the asynchronous system job is automatically deleted on completion.</para>
        /// <para>Display Name: Delete Job On Completion</para>
        /// </summary>
        [AttributeLogicalName("asyncautodelete")]
        [DisplayName("Delete Job On Completion")]
        public bool? AsyncAutoDelete {
            get {
                return GetAttributeValue<bool?>("asyncautodelete");
            }
            set {
                SetAttributeValue("asyncautodelete", value);
            }
        }
        
        /// <summary>
        /// <para>Business Process Type.</para>
        /// <para>Display Name: Business Process Type</para>
        /// </summary>
        [AttributeLogicalName("businessprocesstype")]
        [DisplayName("Business Process Type")]
        public Workflow_BusinessProcessType? BusinessProcessType {
            get {
                return GetOptionSetValue<Workflow_BusinessProcessType>("businessprocesstype");
            }
            set {
                SetOptionSetValue("businessprocesstype", value);
            }
        }
        
        /// <summary>
        /// <para>Category of the process.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        public Workflow_Category? Category {
            get {
                return GetOptionSetValue<Workflow_Category>("category");
            }
            set {
                SetOptionSetValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Business logic converted into client data</para>
        /// <para>Display Name: Client Data</para>
        /// </summary>
        [AttributeLogicalName("clientdata")]
        [DisplayName("Client Data")]
        public string ClientData {
            get {
                return GetAttributeValue<string>("clientdata");
            }
            set {
                SetAttributeValue("clientdata", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Connection References related to this workflow.</para>
        /// <para>Display Name: Connection references</para>
        /// </summary>
        [AttributeLogicalName("connectionreferences")]
        [DisplayName("Connection references")]
        public string ConnectionReferences {
            get {
                return GetAttributeValue<string>("connectionreferences");
            }
            set {
                SetAttributeValue("connectionreferences", value);
            }
        }
        
        /// <summary>
        /// <para>Stage of the process when triggered on Create.</para>
        /// <para>Display Name: Create Stage</para>
        /// </summary>
        [AttributeLogicalName("createstage")]
        [DisplayName("Create Stage")]
        public workflow_stage? CreateStage {
            get {
                return GetOptionSetValue<workflow_stage>("createstage");
            }
            set {
                SetOptionSetValue("createstage", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the process.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the process was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the process.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Definition of the business logic of this workflow instance.</para>
        /// <para>Display Name: Definition</para>
        /// </summary>
        [AttributeLogicalName("definition")]
        [DisplayName("Definition")]
        public string Definition {
            get {
                return GetAttributeValue<string>("definition");
            }
            set {
                SetAttributeValue("definition", value);
            }
        }
        
        /// <summary>
        /// <para>Stage of the process when triggered on Delete.</para>
        /// <para>Display Name: Delete stage</para>
        /// </summary>
        [AttributeLogicalName("deletestage")]
        [DisplayName("Delete stage")]
        public workflow_stage? DeleteStage {
            get {
                return GetOptionSetValue<workflow_stage>("deletestage");
            }
            set {
                SetOptionSetValue("deletestage", value);
            }
        }
        
        /// <summary>
        /// <para>Soft dependencies of this workflow instance.</para>
        /// <para>Display Name: Dependencies</para>
        /// </summary>
        [AttributeLogicalName("dependencies")]
        [DisplayName("Dependencies")]
        public string Dependencies {
            get {
                return GetAttributeValue<string>("dependencies");
            }
            set {
                SetAttributeValue("dependencies", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the process.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated form.</para>
        /// <para>Display Name: Form ID</para>
        /// </summary>
        [AttributeLogicalName("formid")]
        [DisplayName("Form ID")]
        public Guid? FormId {
            get {
                return GetAttributeValue<Guid?>("formid");
            }
            set {
                SetAttributeValue("formid", value);
            }
        }
        
        /// <summary>
        /// <para>Input parameters to the process.</para>
        /// <para>Display Name: Input Parameters</para>
        /// </summary>
        [AttributeLogicalName("inputparameters")]
        [DisplayName("Input Parameters")]
        public string InputParameters {
            get {
                return GetAttributeValue<string>("inputparameters");
            }
            set {
                SetAttributeValue("inputparameters", value);
            }
        }
        
        /// <summary>
        /// <para>Inputs definition for this workflow.</para>
        /// <para>Display Name: Inputs</para>
        /// </summary>
        [AttributeLogicalName("inputs")]
        [DisplayName("Inputs")]
        public string Inputs {
            get {
                return GetAttributeValue<string>("inputs");
            }
            set {
                SetAttributeValue("inputs", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process was created using the Microsoft Dynamics 365 Web application.</para>
        /// <para>Display Name: Is CRM Process</para>
        /// </summary>
        [AttributeLogicalName("iscrmuiworkflow")]
        [DisplayName("Is CRM Process")]
        public bool? IsCrmUIWorkflow {
            get {
                return GetAttributeValue<bool?>("iscrmuiworkflow");
            }
        }
        
        /// <summary>
        /// <para>Defines whether other publishers can attach custom processing steps to this action</para>
        /// <para>Display Name: Allow custom processing step for other publishers</para>
        /// </summary>
        [AttributeLogicalName("iscustomprocessingstepallowedforotherpublishers")]
        [DisplayName("Allow custom processing step for other publishers")]
        public BooleanManagedProperty IsCustomProcessingStepAllowedForOtherPublishers {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomprocessingstepallowedforotherpublishers");
            }
            set {
                SetAttributeValue("iscustomprocessingstepallowedforotherpublishers", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("Is Managed")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Whether or not the steps in the process are executed in a single transaction.</para>
        /// <para>Display Name: Is Transacted</para>
        /// </summary>
        [AttributeLogicalName("istransacted")]
        [DisplayName("Is Transacted")]
        public bool? IsTransacted {
            get {
                return GetAttributeValue<bool?>("istransacted");
            }
            set {
                SetAttributeValue("istransacted", value);
            }
        }
        
        /// <summary>
        /// <para>Language of the process.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Additional metadata for this workflow.</para>
        /// <para>Display Name: Metadata</para>
        /// </summary>
        [AttributeLogicalName("metadata")]
        [DisplayName("Metadata")]
        public string Metadata {
            get {
                return GetAttributeValue<string>("metadata");
            }
            set {
                SetAttributeValue("metadata", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the mode of the process.</para>
        /// <para>Display Name: Mode</para>
        /// </summary>
        [AttributeLogicalName("mode")]
        [DisplayName("Mode")]
        public Workflow_Mode? Mode {
            get {
                return GetOptionSetValue<Workflow_Mode>("mode");
            }
            set {
                SetOptionSetValue("mode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the process.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the process was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the process.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the process.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process is able to run as an on-demand process.</para>
        /// <para>Display Name: Run as On Demand</para>
        /// </summary>
        [AttributeLogicalName("ondemand")]
        [DisplayName("Run as On Demand")]
        public bool? OnDemand {
            get {
                return GetAttributeValue<bool?>("ondemand");
            }
            set {
                SetAttributeValue("ondemand", value);
            }
        }
        
        /// <summary>
        /// <para>Outputs definition for this workflow.</para>
        /// <para>Display Name: Outputs</para>
        /// </summary>
        [AttributeLogicalName("outputs")]
        [DisplayName("Outputs")]
        public string Outputs {
            get {
                return GetAttributeValue<string>("outputs");
            }
            set {
                SetAttributeValue("outputs", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the process.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the process.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the process.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the process.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the definition for process activation.</para>
        /// <para>Display Name: Parent Process ID</para>
        /// </summary>
        [AttributeLogicalName("parentworkflowid")]
        [DisplayName("Parent Process ID")]
        public EntityReference ParentWorkflowId {
            get {
                return GetAttributeValue<EntityReference>("parentworkflowid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the plug-in type.</para>
        /// </summary>
        [AttributeLogicalName("plugintypeid")]
        public EntityReference PluginTypeId {
            get {
                return GetAttributeValue<EntityReference>("plugintypeid");
            }
        }
        
        /// <summary>
        /// <para>Primary entity for the process. The process can be associated for one or more SDK operations defined on the primary entity.</para>
        /// <para>Display Name: Primary Entity</para>
        /// </summary>
        [AttributeLogicalName("primaryentity")]
        [DisplayName("Primary Entity")]
        public string PrimaryEntity {
            get {
                return GetAttributeValue<string>("primaryentity");
            }
            set {
                SetAttributeValue("primaryentity", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the process.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the business process flow order.</para>
        /// <para>Display Name: Process Order</para>
        /// </summary>
        [AttributeLogicalName("processorder")]
        [DisplayName("Process Order")]
        [Range(0, 2147483647)]
        public int? ProcessOrder {
            get {
                return GetAttributeValue<int?>("processorder");
            }
            set {
                SetAttributeValue("processorder", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the role assignment for the process.</para>
        /// <para>Display Name: Role assignment for Process</para>
        /// </summary>
        [AttributeLogicalName("processroleassignment")]
        [DisplayName("Role assignment for Process")]
        public string ProcessRoleAssignment {
            get {
                return GetAttributeValue<string>("processroleassignment");
            }
            set {
                SetAttributeValue("processroleassignment", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated form for process trigger.</para>
        /// <para>Display Name: ProcessTriggerFormId</para>
        /// </summary>
        [AttributeLogicalName("processtriggerformid")]
        [DisplayName("ProcessTriggerFormId")]
        public Guid? ProcessTriggerFormId {
            get {
                return GetAttributeValue<Guid?>("processtriggerformid");
            }
            set {
                SetAttributeValue("processtriggerformid", value);
            }
        }
        
        /// <summary>
        /// <para>Scope of the process trigger.</para>
        /// <para>Display Name: ProcessTriggerScope</para>
        /// </summary>
        [AttributeLogicalName("processtriggerscope")]
        [DisplayName("ProcessTriggerScope")]
        public Workflow_ProcessTriggerScope? ProcessTriggerScope {
            get {
                return GetOptionSetValue<Workflow_ProcessTriggerScope>("processtriggerscope");
            }
            set {
                SetOptionSetValue("processtriggerscope", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the rank for order of execution for the synchronous workflow.</para>
        /// <para>Display Name: Rank</para>
        /// </summary>
        [AttributeLogicalName("rank")]
        [DisplayName("Rank")]
        [Range(-2147483648, 2147483647)]
        public int? Rank {
            get {
                return GetAttributeValue<int?>("rank");
            }
            set {
                SetAttributeValue("rank", value);
            }
        }
        
        /// <summary>
        /// <para>The renderer type of Workflow</para>
        /// <para>Display Name: Renderer Type</para>
        /// </summary>
        [AttributeLogicalName("rendererobjecttypecode")]
        [DisplayName("Renderer Type")]
        public string RendererObjectTypeCode {
            get {
                return GetAttributeValue<string>("rendererobjecttypecode");
            }
            set {
                SetAttributeValue("rendererobjecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the system user account under which a workflow executes.</para>
        /// <para>Display Name: Run As User</para>
        /// </summary>
        [AttributeLogicalName("runas")]
        [DisplayName("Run As User")]
        public workflow_runas? RunAs {
            get {
                return GetOptionSetValue<workflow_runas>("runas");
            }
            set {
                SetOptionSetValue("runas", value);
            }
        }
        
        /// <summary>
        /// <para>Schema version for this workflow.</para>
        /// <para>Display Name: Schema Version</para>
        /// </summary>
        [AttributeLogicalName("schemaversion")]
        [DisplayName("Schema Version")]
        [MaxLength(100)]
        public string SchemaVersion {
            get {
                return GetAttributeValue<string>("schemaversion");
            }
            set {
                SetAttributeValue("schemaversion", value);
            }
        }
        
        /// <summary>
        /// <para>Scope of the process.</para>
        /// <para>Display Name: Scope</para>
        /// </summary>
        [AttributeLogicalName("scope")]
        [DisplayName("Scope")]
        public Workflow_Scope? Scope {
            get {
                return GetOptionSetValue<Workflow_Scope>("scope");
            }
            set {
                SetOptionSetValue("scope", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the SDK Message associated with this workflow.</para>
        /// <para>Display Name: SDK Message</para>
        /// </summary>
        [AttributeLogicalName("sdkmessageid")]
        [DisplayName("SDK Message")]
        public EntityReference SdkMessageId {
            get {
                return GetAttributeValue<EntityReference>("sdkmessageid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Status of the workflow</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public WorkflowState? StateCode {
            get {
                return GetOptionSetValue<WorkflowState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the workflow</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Workflow_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Workflow_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process can be included in other processes as a child process.</para>
        /// <para>Display Name: Is Child Process</para>
        /// </summary>
        [AttributeLogicalName("subprocess")]
        [DisplayName("Is Child Process")]
        public bool? Subprocess {
            get {
                return GetAttributeValue<bool?>("subprocess");
            }
            set {
                SetAttributeValue("subprocess", value);
            }
        }
        
        [AttributeLogicalName("suspensionreasondetails")]
        public string SuspensionReasonDetails {
            get {
                return GetAttributeValue<string>("suspensionreasondetails");
            }
            set {
                SetAttributeValue("suspensionreasondetails", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether synchronous workflow failures will be saved to log files.</para>
        /// <para>Display Name: Log upon Failure</para>
        /// </summary>
        [AttributeLogicalName("syncworkflowlogonfailure")]
        [DisplayName("Log upon Failure")]
        public bool? SyncWorkflowLogOnFailure {
            get {
                return GetAttributeValue<bool?>("syncworkflowlogonfailure");
            }
            set {
                SetAttributeValue("syncworkflowlogonfailure", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process will be triggered when the primary entity is created.</para>
        /// <para>Display Name: Trigger On Create</para>
        /// </summary>
        [AttributeLogicalName("triggeroncreate")]
        [DisplayName("Trigger On Create")]
        public bool? TriggerOnCreate {
            get {
                return GetAttributeValue<bool?>("triggeroncreate");
            }
            set {
                SetAttributeValue("triggeroncreate", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the process will be triggered on deletion of the primary entity.</para>
        /// <para>Display Name: Trigger On Delete</para>
        /// </summary>
        [AttributeLogicalName("triggerondelete")]
        [DisplayName("Trigger On Delete")]
        public bool? TriggerOnDelete {
            get {
                return GetAttributeValue<bool?>("triggerondelete");
            }
            set {
                SetAttributeValue("triggerondelete", value);
            }
        }
        
        /// <summary>
        /// <para>Attributes that trigger the process when updated.</para>
        /// <para>Display Name: Trigger On Update Attribute List</para>
        /// </summary>
        [AttributeLogicalName("triggeronupdateattributelist")]
        [DisplayName("Trigger On Update Attribute List")]
        public string TriggerOnUpdateAttributeList {
            get {
                return GetAttributeValue<string>("triggeronupdateattributelist");
            }
            set {
                SetAttributeValue("triggeronupdateattributelist", value);
            }
        }
        
        /// <summary>
        /// <para>For Internal Use Only.</para>
        /// <para>Display Name: Trusted Access</para>
        /// </summary>
        [AttributeLogicalName("trustedaccess")]
        [DisplayName("Trusted Access")]
        public bool? TrustedAccess {
            get {
                return GetAttributeValue<bool?>("trustedaccess");
            }
        }
        
        /// <summary>
        /// <para>Type of the process.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("type")]
        [DisplayName("Type")]
        public Workflow_Type? Type {
            get {
                return GetOptionSetValue<Workflow_Type>("type");
            }
            set {
                SetOptionSetValue("type", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: UI Data</para>
        /// </summary>
        [AttributeLogicalName("uidata")]
        [DisplayName("UI Data")]
        public string UIData {
            get {
                return GetAttributeValue<string>("uidata");
            }
        }
        
        /// <summary>
        /// <para>Type of the Desktop Flow process.</para>
        /// <para>Display Name: Desktop Flow Type</para>
        /// </summary>
        [AttributeLogicalName("uiflowtype")]
        [DisplayName("Desktop Flow Type")]
        public Workflow_UIFlowType? UIFlowType {
            get {
                return GetOptionSetValue<Workflow_UIFlowType>("uiflowtype");
            }
            set {
                SetOptionSetValue("uiflowtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique name of the process</para>
        /// <para>Display Name: Unique Name</para>
        /// </summary>
        [AttributeLogicalName("uniquename")]
        [DisplayName("Unique Name")]
        [MaxLength(256)]
        public string UniqueName {
            get {
                return GetAttributeValue<string>("uniquename");
            }
            set {
                SetAttributeValue("uniquename", value);
            }
        }
        
        /// <summary>
        /// <para>Select the stage a process will be triggered on update.</para>
        /// <para>Display Name: Update Stage</para>
        /// </summary>
        [AttributeLogicalName("updatestage")]
        [DisplayName("Update Stage")]
        public workflow_stage? UpdateStage {
            get {
                return GetOptionSetValue<workflow_stage>("updatestage");
            }
            set {
                SetOptionSetValue("updatestage", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("workflowidunique")]
        public Guid? WorkflowIdUnique {
            get {
                return GetAttributeValue<Guid?>("workflowidunique");
            }
        }
        
        /// <summary>
        /// <para>XAML that defines the process.</para>
        /// </summary>
        [AttributeLogicalName("xaml")]
        public string Xaml {
            get {
                return GetAttributeValue<string>("xaml");
            }
            set {
                SetAttributeValue("xaml", value);
            }
        }
        
        [RelationshipSchemaName("workflow_active_workflow", EntityRole.Referenced)]
        public IEnumerable<Workflow> Referencedworkflow_active_workflow {
            get {
                return GetRelatedEntities<Workflow>("workflow_active_workflow", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("workflow_active_workflow", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("workflow_parent_workflow", EntityRole.Referenced)]
        public IEnumerable<Workflow> Referencedworkflow_parent_workflow {
            get {
                return GetRelatedEntities<Workflow>("workflow_parent_workflow", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("workflow_parent_workflow", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("activeworkflowid")]
        [RelationshipSchemaName("workflow_active_workflow", EntityRole.Referencing)]
        public Workflow Referencingworkflow_active_workflow {
            get {
                return GetRelatedEntity<Workflow>("workflow_active_workflow", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("workflow_active_workflow", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentworkflowid")]
        [RelationshipSchemaName("workflow_parent_workflow", EntityRole.Referencing)]
        public Workflow Referencingworkflow_parent_workflow {
            get {
                return GetRelatedEntity<Workflow>("workflow_parent_workflow", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("workflow_parent_workflow", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("Workflow_Annotation")]
        public IEnumerable<Annotation> Workflow_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Workflow_Annotation", null);
            }
            set {
                SetRelatedEntities("Workflow_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_workflow")]
        public BusinessUnit business_unit_workflow {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_workflow", null);
            }
            set {
                SetRelatedEntity("business_unit_workflow", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_asyncoperation_workflowactivationid")]
        public IEnumerable<AsyncOperation> lk_asyncoperation_workflowactivationid {
            get {
                return GetRelatedEntities<AsyncOperation>("lk_asyncoperation_workflowactivationid", null);
            }
            set {
                SetRelatedEntities("lk_asyncoperation_workflowactivationid", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_workflow")]
        public SystemUser system_user_workflow {
            get {
                return GetRelatedEntity<SystemUser>("system_user_workflow", null);
            }
            set {
                SetRelatedEntity("system_user_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_workflow")]
        public Team team_workflow {
            get {
                return GetRelatedEntity<Team>("team_workflow", null);
            }
            set {
                SetRelatedEntity("team_workflow", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("workflow_createdby")]
        public SystemUser workflow_createdby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_createdby", null);
            }
            set {
                SetRelatedEntity("workflow_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("workflow_createdonbehalfby")]
        public SystemUser workflow_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("workflow_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("workflow_modifiedby")]
        public SystemUser workflow_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_modifiedby", null);
            }
            set {
                SetRelatedEntity("workflow_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("workflow_modifiedonbehalfby")]
        public SystemUser workflow_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("workflow_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("workflow_modifiedonbehalfby", null, value);
            }
        }
        
        public static Workflow Retrieve(IOrganizationService service, Guid id, params Expression<Func<Workflow,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    public partial class XrmContext : ExtendedOrganizationServiceContext {
        
        public XrmContext(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<ActivityParty> ActivityPartySet {
            get {
                return CreateQuery<ActivityParty>();
            }
        }
        
        public IQueryable<Annotation> AnnotationSet {
            get {
                return CreateQuery<Annotation>();
            }
        }
        
        public IQueryable<AppModule> AppModuleSet {
            get {
                return CreateQuery<AppModule>();
            }
        }
        
        public IQueryable<AppModuleRoles> AppModuleRolesSet {
            get {
                return CreateQuery<AppModuleRoles>();
            }
        }
        
        public IQueryable<AsyncOperation> AsyncOperationSet {
            get {
                return CreateQuery<AsyncOperation>();
            }
        }
        
        public IQueryable<Audit> AuditSet {
            get {
                return CreateQuery<Audit>();
            }
        }
        
        public IQueryable<BusinessUnit> BusinessUnitSet {
            get {
                return CreateQuery<BusinessUnit>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
        
        public IQueryable<Email> EmailSet {
            get {
                return CreateQuery<Email>();
            }
        }
        
        public IQueryable<Organization> OrganizationSet {
            get {
                return CreateQuery<Organization>();
            }
        }
        
        public IQueryable<PluginType> PluginTypeSet {
            get {
                return CreateQuery<PluginType>();
            }
        }
        
        public IQueryable<Role> RoleSet {
            get {
                return CreateQuery<Role>();
            }
        }
        
        public IQueryable<SdkMessageProcessingStep> SdkMessageProcessingStepSet {
            get {
                return CreateQuery<SdkMessageProcessingStep>();
            }
        }
        
        public IQueryable<SdkMessageProcessingStepSecureConfig> SdkMessageProcessingStepSecureConfigSet {
            get {
                return CreateQuery<SdkMessageProcessingStepSecureConfig>();
            }
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<SystemUserRoles> SystemUserRolesSet {
            get {
                return CreateQuery<SystemUserRoles>();
            }
        }
        
        public IQueryable<Team> TeamSet {
            get {
                return CreateQuery<Team>();
            }
        }
        
        public IQueryable<TeamMembership> TeamMembershipSet {
            get {
                return CreateQuery<TeamMembership>();
            }
        }
        
        public IQueryable<TeamRoles> TeamRolesSet {
            get {
                return CreateQuery<TeamRoles>();
            }
        }
        
        public IQueryable<Template> TemplateSet {
            get {
                return CreateQuery<Template>();
            }
        }
        
        public IQueryable<TimeZoneDefinition> TimeZoneDefinitionSet {
            get {
                return CreateQuery<TimeZoneDefinition>();
            }
        }
        
        public IQueryable<UserSettings> UserSettingsSet {
            get {
                return CreateQuery<UserSettings>();
            }
        }
        
        public IQueryable<Workflow> WorkflowSet {
            get {
                return CreateQuery<Workflow>();
            }
        }
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Preferred Customer", Index=0, Lcid=1033)]
        PreferredCustomer = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=1, Lcid=1033)]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0, Lcid=1033)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1, Lcid=1033)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2, Lcid=1033)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=15, Lcid=1033, Color="")]
        Competitor = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Consultant", Index=9, Lcid=1033, Color="")]
        Consultant = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=16, Lcid=1033, Color="")]
        Customer = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=18, Lcid=1033, Color="")]
        Investor_2 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=19, Lcid=1033, Color="")]
        Partner = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=17, Lcid=1033, Color="")]
        Influencer = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Press", Index=20, Lcid=1033, Color="")]
        Press = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Prospect", Index=21, Lcid=1033, Color="")]
        Prospect = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Reseller", Index=22, Lcid=1033, Color="")]
        Reseller = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Supplier", Index=24, Lcid=1033, Color="")]
        Supplier = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Vendor", Index=11, Lcid=1033, Color="")]
        Vendor = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=25, Lcid=1033, Color="")]
        Other = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Pool Participant", Index=1, Lcid=1033, Color="#0000ff")]
        PoolParticipant = 100000000,
        
        [EnumMember()]
        [OptionSetMetadata("Bank", Index=0, Lcid=1033)]
        Bank = 100000001,
        
        [EnumMember()]
        [OptionSetMetadata("Group", Index=2, Lcid=1033, Color="#0000ff")]
        Group = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Company", Index=3, Lcid=1033, Color="#0000ff")]
        Company = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Department", Index=4, Lcid=1033, Color="#0000ff")]
        Department = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("--------------", Index=5, Lcid=1033, Color="#0000ff")]
        _EmptyString = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("Agents", Index=6, Lcid=1033, Color="#0000ff")]
        Agents = 860930004,
        
        [EnumMember()]
        [OptionSetMetadata("Analytics", Index=7, Lcid=1033, Color="#0000ff")]
        Analytics = 860930005,
        
        [EnumMember()]
        [OptionSetMetadata("Bunkers", Index=8, Lcid=1033, Color="#0000ff")]
        Bunkers = 860930006,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=10, Lcid=1033, Color="#0000ff")]
        Investor = 860930008,
        
        [EnumMember()]
        [OptionSetMetadata("Vessel", Index=12, Lcid=1033, Color="#0000ff")]
        Vessel = 860930010,
        
        [EnumMember()]
        [OptionSetMetadata("-------------------", Index=13, Lcid=1033, Color="#0000ff")]
        _EmptyString_2 = 860930011,
        
        [EnumMember()]
        [OptionSetMetadata("Charters", Index=14, Lcid=1033, Color="#0000ff")]
        Charters = 860930012,
        
        [EnumMember()]
        [OptionSetMetadata("Ship Owner", Index=23, Lcid=1033, Color="#0000ff")]
        ShipOwner = 860930015,
        
        [EnumMember()]
        [OptionSetMetadata("Item", Index=26, Lcid=1033, Color="#0000ff")]
        Item = 860930016,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=82, Lcid=1033, Color="")]
        Accounting_2 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=83, Lcid=1033, Color="")]
        AgricultureandNonpetrolNaturalResourceExtraction_2 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=84, Lcid=1033, Color="")]
        BroadcastingPrintingandPublishing_2 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=85, Lcid=1033, Color="")]
        Brokers_2 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=87, Lcid=1033, Color="")]
        BuildingSupplyRetail_2 = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=0, Lcid=1033)]
        BusinessServices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=90, Lcid=1033, Color="")]
        Consulting_2 = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Services", Index=59, Lcid=1033, Color="")]
        ConsumerServices = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=91, Lcid=1033, Color="")]
        DesignDirectionandCreativeManagement_2 = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=89, Lcid=1033, Color="")]
        DistributorsDispatchersandProcessors_2 = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=1, Lcid=1033)]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Durable Manufacturing", Index=2, Lcid=1033)]
        DurableManufacturing = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Eating and Drinking Places", Index=3, Lcid=1033)]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Entertainment Retail", Index=4, Lcid=1033)]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=92, Lcid=1033, Color="")]
        EquipmentRentalandLeasing_2 = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=93, Lcid=1033, Color="")]
        Financial_2 = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Food and Tobacco Processing", Index=5, Lcid=1033)]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=94, Lcid=1033, Color="")]
        InboundCapitalIntensiveProcessing_2 = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Repair and Services", Index=6, Lcid=1033)]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=86, Lcid=1033, Color="")]
        Insurance_2 = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=88, Lcid=1033, Color="")]
        LegalServices_2 = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Non-Durable Merchandise Retail", Index=7, Lcid=1033)]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Outbound Consumer Service", Index=8, Lcid=1033)]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=95, Lcid=1033, Color="")]
        PetrochemicalExtractionandDistribution_2 = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=96, Lcid=1033, Color="")]
        ServiceRetail_2 = 25,
        
        [EnumMember()]
        [OptionSetMetadata("SIG Affiliations", Index=9, Lcid=1033)]
        SIGAffiliations = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Social Services", Index=10, Lcid=1033)]
        SocialServices = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Special Outbound Trade Contractors", Index=11, Lcid=1033)]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Specialty Realty", Index=12, Lcid=1033)]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Transportation", Index=13, Lcid=1033)]
        Transportation = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=99, Lcid=1033, Color="")]
        UtilityCreationandDistribution_2 = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=97, Lcid=1033, Color="")]
        VehicleRetail_2 = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=98, Lcid=1033, Color="")]
        Wholesale_2 = 33,
        
        [EnumMember()]
        [OptionSetMetadata("Cement", Index=34, Lcid=1033, Color="#0000ff")]
        Cement = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Cement Clinker", Index=35, Lcid=1033, Color="#0000ff")]
        CementClinker = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Coal", Index=36, Lcid=1033, Color="#0000ff")]
        Coal = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("Grains", Index=37, Lcid=1033, Color="#0000ff")]
        Grains = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("Iron", Index=38, Lcid=1033, Color="#0000ff")]
        Iron = 860930004,
        
        [EnumMember()]
        [OptionSetMetadata("Minerals", Index=39, Lcid=1033, Color="#0000ff")]
        Minerals = 860930005,
        
        [EnumMember()]
        [OptionSetMetadata("Ores", Index=40, Lcid=1033, Color="#0000ff")]
        Ores = 860930006,
        
        [EnumMember()]
        [OptionSetMetadata("PetCoke", Index=41, Lcid=1033, Color="#0000ff")]
        PetCoke = 860930007,
        
        [EnumMember()]
        [OptionSetMetadata("Salt", Index=42, Lcid=1033, Color="#0000ff")]
        Salt = 860930008,
        
        [EnumMember()]
        [OptionSetMetadata("Single Ship", Index=43, Lcid=1033, Color="#0000ff")]
        SingleShip = 860930009,
        
        [EnumMember()]
        [OptionSetMetadata("Steel", Index=44, Lcid=1033, Color="#0000ff")]
        Steel = 860930010,
        
        [EnumMember()]
        [OptionSetMetadata("Sugar", Index=45, Lcid=1033, Color="#0000ff")]
        Sugar = 860930011,
        
        [EnumMember()]
        [OptionSetMetadata("Wind Energy", Index=46, Lcid=1033, Color="#0000ff")]
        WindEnergy = 860930012,
        
        [EnumMember()]
        [OptionSetMetadata("Aluminium Producer", Index=47, Lcid=1033, Color="#0000ff")]
        AluminiumProducer = 860930013,
        
        [EnumMember()]
        [OptionSetMetadata("Alumina Producer", Index=48, Lcid=1033, Color="#0000ff")]
        AluminaProducer = 860930014,
        
        [EnumMember()]
        [OptionSetMetadata("BioEnergy", Index=49, Lcid=1033, Color="#0000ff")]
        BioEnergy = 860930015,
        
        [EnumMember()]
        [OptionSetMetadata("Bunker Supplier", Index=50, Lcid=1033, Color="#0000ff")]
        BunkerSupplier = 860930016,
        
        [EnumMember()]
        [OptionSetMetadata("Cement Producer", Index=51, Lcid=1033, Color="#0000ff")]
        CementProducer = 860930017,
        
        [EnumMember()]
        [OptionSetMetadata("Coal Miner", Index=52, Lcid=1033, Color="#0000ff")]
        CoalMiner = 860930018,
        
        [EnumMember()]
        [OptionSetMetadata("Coal Trader", Index=53, Lcid=1033, Color="#0000ff")]
        CoalTrader = 860930019,
        
        [EnumMember()]
        [OptionSetMetadata("Commodity Trader", Index=54, Lcid=1033, Color="#0000ff")]
        CommodityTrader = 860930020,
        
        [EnumMember()]
        [OptionSetMetadata("Fertilizer Company", Index=55, Lcid=1033, Color="#0000ff")]
        FertilizerCompany = 860930021,
        
        [EnumMember()]
        [OptionSetMetadata("Forestry", Index=56, Lcid=1033, Color="#0000ff")]
        Forestry = 860930022,
        
        [EnumMember()]
        [OptionSetMetadata("Grain Trader", Index=57, Lcid=1033, Color="#0000ff")]
        GrainTrader = 860930023,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance Company", Index=58, Lcid=1033, Color="#0000ff")]
        InsuranceCompany = 860930024,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Service", Index=14, Lcid=1033, Color="#0000ff")]
        ConsumerService = 860930025,
        
        [EnumMember()]
        [OptionSetMetadata("Iron Ore Miner", Index=60, Lcid=1033, Color="#0000ff")]
        IronOreMiner = 860930026,
        
        [EnumMember()]
        [OptionSetMetadata("Iron Ore Trader", Index=61, Lcid=1033, Color="#0000ff")]
        IronOreTrader = 860930027,
        
        [EnumMember()]
        [OptionSetMetadata("Lawyer", Index=62, Lcid=1033, Color="#0000ff")]
        Lawyer = 860930028,
        
        [EnumMember()]
        [OptionSetMetadata("Metcoke Plant Owner", Index=63, Lcid=1033, Color="#0000ff")]
        MetcokePlantOwner = 860930029,
        
        [EnumMember()]
        [OptionSetMetadata("Mining Company", Index=64, Lcid=1033, Color="#0000ff")]
        MiningCompany = 860930030,
        
        [EnumMember()]
        [OptionSetMetadata("P&I Club", Index=65, Lcid=1033, Color="#0000ff")]
        PIClub = 860930031,
        
        [EnumMember()]
        [OptionSetMetadata("Power Utility Company", Index=66, Lcid=1033, Color="#0000ff")]
        PowerUtilityCompany = 860930032,
        
        [EnumMember()]
        [OptionSetMetadata("Salt Miner", Index=67, Lcid=1033, Color="#0000ff")]
        SaltMiner = 860930033,
        
        [EnumMember()]
        [OptionSetMetadata("Shipbroker", Index=68, Lcid=1033, Color="#0000ff")]
        Shipbroker = 860930034,
        
        [EnumMember()]
        [OptionSetMetadata("Shipoperator", Index=69, Lcid=1033, Color="#0000ff")]
        Shipoperator = 860930035,
        
        [EnumMember()]
        [OptionSetMetadata("Shipowner", Index=70, Lcid=1033, Color="#0000ff")]
        Shipowner = 860930036,
        
        [EnumMember()]
        [OptionSetMetadata("Ship Yard", Index=71, Lcid=1033, Color="#0000ff")]
        ShipYard = 860930037,
        
        [EnumMember()]
        [OptionSetMetadata("Steel Mill", Index=72, Lcid=1033, Color="#0000ff")]
        SteelMill = 860930038,
        
        [EnumMember()]
        [OptionSetMetadata("Steel Trader", Index=73, Lcid=1033, Color="#0000ff")]
        SteelTrader = 860930039,
        
        [EnumMember()]
        [OptionSetMetadata("Trading Company", Index=75, Lcid=1033, Color="#0000ff")]
        TradingCompany = 860930040,
        
        [EnumMember()]
        [OptionSetMetadata("Various", Index=76, Lcid=1033, Color="#0000ff")]
        Various = 860930041,
        
        [EnumMember()]
        [OptionSetMetadata("----------------------------", Index=77, Lcid=1033, Color="#0000ff")]
        _EmptyString = 860930042,
        
        [EnumMember()]
        [OptionSetMetadata("Oil Industri", Index=78, Lcid=1033, Color="#0000ff")]
        OilIndustri = 860930043,
        
        [EnumMember()]
        [OptionSetMetadata("-------", Index=79, Lcid=1033, Color="#0000ff")]
        _EmptyString_2 = 860930044,
        
        [EnumMember()]
        [OptionSetMetadata("Power Plant", Index=80, Lcid=1033, Color="#0000ff")]
        PowerPlant = 860930045,
        
        [EnumMember()]
        [OptionSetMetadata("----------------------", Index=81, Lcid=1033, Color="#0000ff")]
        _EmptyString_3 = 860930046,
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=15, Lcid=1033, Color="#0000ff")]
        Accounting = 860930047,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=16, Lcid=1033, Color="#0000ff")]
        AgricultureandNonpetrolNaturalResourceExtraction = 860930048,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=17, Lcid=1033, Color="#0000ff")]
        BroadcastingPrintingandPublishing = 860930049,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=18, Lcid=1033, Color="#0000ff")]
        Brokers = 860930050,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=19, Lcid=1033, Color="#0000ff")]
        Insurance = 860930051,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=20, Lcid=1033, Color="#0000ff")]
        BuildingSupplyRetail = 860930052,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=21, Lcid=1033, Color="#0000ff")]
        LegalServices = 860930053,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=22, Lcid=1033, Color="#0000ff")]
        DistributorsDispatchersandProcessors = 860930054,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=23, Lcid=1033, Color="#0000ff")]
        BusinessServices_2 = 860930055,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=24, Lcid=1033, Color="#0000ff")]
        Consulting = 860930056,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=25, Lcid=1033, Color="#0000ff")]
        DesignDirectionandCreativeManagement = 860930057,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=26, Lcid=1033, Color="#0000ff")]
        EquipmentRentalandLeasing = 860930058,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=27, Lcid=1033, Color="#0000ff")]
        Financial = 860930059,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=28, Lcid=1033, Color="#0000ff")]
        InboundCapitalIntensiveProcessing = 860930060,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=29, Lcid=1033, Color="#0000ff")]
        PetrochemicalExtractionandDistribution = 860930061,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=30, Lcid=1033, Color="#0000ff")]
        ServiceRetail = 860930062,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=31, Lcid=1033, Color="#0000ff")]
        VehicleRetail = 860930063,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=32, Lcid=1033, Color="#0000ff")]
        Wholesale = 860930064,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=33, Lcid=1033, Color="#0000ff")]
        UtilityCreationandDistribution = 860930065,
        
        [EnumMember()]
        [OptionSetMetadata("Sugar Trader", Index=74, Lcid=1033, Color="#0000ff")]
        SugarTrader = 860930066,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0, Lcid=1033)]
        Public = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1, Lcid=1033)]
        Private = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Subsidiary", Index=2, Lcid=1033)]
        Subsidiary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0, Lcid=1033)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1, Lcid=1033)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2, Lcid=1033)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3, Lcid=1033)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4, Lcid=1033)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5, Lcid=1033)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6, Lcid=1033)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0, Lcid=1033)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1, Lcid=1033)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2, Lcid=1033)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0, Lcid=1033)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2, Lcid=1033)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1033)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4, Lcid=1033)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=2, Lcid=1033, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=3, Lcid=1033, Color="#0000ff")]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("To be blocked immediately", Index=0, Lcid=1033, Color="#0000ff")]
        Tobeblockedimmediately = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("To be blocked for new business", Index=1, Lcid=1033, Color="#0000ff")]
        Tobeblockedfornewbusiness = 860930001,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_dsn_BlockType {
        
        [EnumMember()]
        [OptionSetMetadata("To be blocked immediately", Index=0, Lcid=1033, Color="#0000ff")]
        Tobeblockedimmediately = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("To be blocked for new business", Index=1, Lcid=1033, Color="#0000ff")]
        Tobeblockedfornewbusiness = 860930001,
    }
    
    [DataContract()]
    public enum Account_dsn_ClientImportance {
        
        [EnumMember()]
        [OptionSetMetadata("0 - Global Key Customer", Index=0, Lcid=1033, Color="#0000ff")]
        _0GlobalKeyCustomer = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("1 - Key Customer", Index=1, Lcid=1033, Color="#0000ff")]
        _1KeyCustomer = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("2 - Customer", Index=2, Lcid=1033, Color="#0000ff")]
        _2Customer = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("3 - Regional Customer", Index=3, Lcid=1033, Color="#0000ff")]
        _3RegionalCustomer = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("4 - High Potential", Index=4, Lcid=1033, Color="#0000ff")]
        _4HighPotential = 860930004,
        
        [EnumMember()]
        [OptionSetMetadata("5 - Potential", Index=5, Lcid=1033, Color="#0000ff")]
        _5Potential = 860930005,
        
        [EnumMember()]
        [OptionSetMetadata("6 - Key Broker", Index=6, Lcid=1033, Color="#0000ff")]
        _6KeyBroker = 860930006,
        
        [EnumMember()]
        [OptionSetMetadata("10 - Key Shipowner", Index=7, Lcid=1033, Color="#0000ff")]
        _10KeyShipowner = 860930007,
        
        [EnumMember()]
        [OptionSetMetadata("11 - Shipowner", Index=8, Lcid=1033, Color="#0000ff")]
        _11Shipowner = 860930008,
        
        [EnumMember()]
        [OptionSetMetadata("12 – High Potential Shipowner", Index=9, Lcid=1033, Color="#0000ff")]
        _12HighPotentialShipowner = 860930009,
        
        [EnumMember()]
        [OptionSetMetadata("13 – Potential Shipowner", Index=10, Lcid=1033, Color="#0000ff")]
        _13PotentialShipowner = 860930010,
        
        [EnumMember()]
        [OptionSetMetadata("Agent", Index=11, Lcid=1033, Color="#0000ff")]
        Agent = 860930011,
        
        [EnumMember()]
        [OptionSetMetadata("Broker", Index=12, Lcid=1033, Color="#0000ff")]
        Broker = 860930012,
        
        [EnumMember()]
        [OptionSetMetadata("Charterer", Index=13, Lcid=1033, Color="#0000ff")]
        Charterer = 860930013,
        
        [EnumMember()]
        [OptionSetMetadata("Contractor", Index=14, Lcid=1033, Color="#0000ff")]
        Contractor = 860930014,
        
        [EnumMember()]
        [OptionSetMetadata("Shipowner/Operator", Index=15, Lcid=1033, Color="#0000ff")]
        ShipownerOperator = 860930015,
        
        [EnumMember()]
        [OptionSetMetadata("Shipyard", Index=16, Lcid=1033, Color="#0000ff")]
        Shipyard = 860930016,
        
        [EnumMember()]
        [OptionSetMetadata("Tradinghouse", Index=17, Lcid=1033, Color="#0000ff")]
        Tradinghouse = 860930017,
        
        [EnumMember()]
        [OptionSetMetadata("----------------------------", Index=18, Lcid=1033, Color="#0000ff")]
        _EmptyString = 860930018,
        
        [EnumMember()]
        [OptionSetMetadata("Affiliate", Index=19, Lcid=1033, Color="#0000ff")]
        Affiliate = 860930019,
        
        [EnumMember()]
        [OptionSetMetadata("Operator", Index=20, Lcid=1033, Color="#0000ff")]
        Operator = 860930020,
        
        [EnumMember()]
        [OptionSetMetadata("Charterer", Index=21, Lcid=1033, Color="#0000ff")]
        Charterer_2 = 860930021,
        
        [EnumMember()]
        [OptionSetMetadata("Bunker surveyor", Index=22, Lcid=1033, Color="#0000ff")]
        Bunkersurveyor = 860930022,
        
        [EnumMember()]
        [OptionSetMetadata("Launch contractor", Index=23, Lcid=1033, Color="#0000ff")]
        Launchcontractor = 860930023,
        
        [EnumMember()]
        [OptionSetMetadata("Mooring contractor", Index=24, Lcid=1033, Color="#0000ff")]
        Mooringcontractor = 860930024,
        
        [EnumMember()]
        [OptionSetMetadata("Pilotage contractor", Index=25, Lcid=1033, Color="#0000ff")]
        Pilotagecontractor = 860930025,
        
        [EnumMember()]
        [OptionSetMetadata("Slops contractor", Index=26, Lcid=1033, Color="#0000ff")]
        Slopscontractor = 860930026,
        
        [EnumMember()]
        [OptionSetMetadata("Towage Contractor", Index=27, Lcid=1033, Color="#0000ff")]
        TowageContractor = 860930027,
    }
    
    [DataContract()]
    public enum Account_dsn_CreditRiskReviewSanctions {
        
        [EnumMember()]
        [OptionSetMetadata("Credit Risk Review", Index=1, Lcid=1033, Color="#0000ff")]
        CreditRiskReview = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Disregard", Index=0, Lcid=1033, Color="#0000ff")]
        Disregard = 860930001,
    }
    
    [DataContract()]
    public enum Account_dsn_ManuallyValidation {
        
        [EnumMember()]
        [OptionSetMetadata("Approved by Risk dept.", Index=1, Lcid=1033, Color="#0000ff")]
        ApprovedbyRiskdept = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected by Risk dept.", Index=2, Lcid=1033, Color="#0000ff")]
        RejectedbyRiskdept = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting for approval", Index=0, Lcid=1033, Color="#0000ff")]
        Waitingforapproval = 860930002,
    }
    
    [DataContract()]
    public enum Account_dsn_ResendToSubsystems {
        
        [EnumMember()]
        [OptionSetMetadata("MSBC", Index=0, Lcid=1033, Color="#0000ff")]
        MSBC = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("K-Fleet", Index=1, Lcid=1033, Color="#0000ff")]
        KFleet = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("IMOS", Index=2, Lcid=1033, Color="#0000ff")]
        IMOS = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("Sedna", Index=3, Lcid=1033, Color="#0000ff")]
        Sedna = 860930003,
    }
    
    [DataContract()]
    public enum Account_dsn_SanctionsRemovalReason {
        
        [EnumMember()]
        [OptionSetMetadata("False positive", Index=0, Lcid=1033)]
        Falsepositive = 572360000,
        
        [EnumMember()]
        [OptionSetMetadata("Regime", Index=1, Lcid=1033)]
        Regime = 572360001,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=2, Lcid=1033)]
        Other = 572360002,
    }
    
    [DataContract()]
    public enum ActivityParty_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0, Lcid=1033)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1, Lcid=1033)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2, Lcid=1033)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3, Lcid=1033)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4, Lcid=1033)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ActivityParty_ParticipationTypeMask {
        
        [EnumMember()]
        [OptionSetMetadata("Sender", Index=0, Lcid=1033)]
        Sender = 1,
        
        [EnumMember()]
        [OptionSetMetadata("To Recipient", Index=1, Lcid=1033)]
        ToRecipient = 2,
        
        [EnumMember()]
        [OptionSetMetadata("CC Recipient", Index=2, Lcid=1033)]
        CCRecipient = 3,
        
        [EnumMember()]
        [OptionSetMetadata("BCC Recipient", Index=3, Lcid=1033)]
        BCCRecipient = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Required attendee", Index=4, Lcid=1033)]
        Requiredattendee = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Optional attendee", Index=5, Lcid=1033)]
        Optionalattendee = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Organizer", Index=6, Lcid=1033)]
        Organizer = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Regarding", Index=7, Lcid=1033)]
        Regarding = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=8, Lcid=1033)]
        Owner = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Resource", Index=9, Lcid=1033)]
        Resource = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=10, Lcid=1033)]
        Customer = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Chat Participant", Index=11, Lcid=1033)]
        ChatParticipant = 12,
    }
    
    [DataContract()]
    public enum Annotation_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=11, Lcid=1033)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=21, Lcid=1033)]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=18, Lcid=1033)]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=7, Lcid=1033)]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=10, Lcid=1033)]
        Competitor = 123,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=12, Lcid=1033)]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Contract Line", Index=13, Lcid=1033)]
        ContractLine = 1011,
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=26, Lcid=1033)]
        Product = 1024,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=27, Lcid=1033)]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=23, Lcid=1033)]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=17, Lcid=1033)]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Facility/Equipment", Index=15, Lcid=1033)]
        FacilityEquipment = 4000,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=30, Lcid=1033)]
        Service = 4001,
        
        [EnumMember()]
        [OptionSetMetadata("Calendar", Index=3, Lcid=1033)]
        Calendar = 4003,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Specification", Index=29, Lcid=1033)]
        ResourceSpecification = 4006,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=1, Lcid=1033)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=14, Lcid=1033)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=16, Lcid=1033)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=8, Lcid=1033)]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=19, Lcid=1033)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=22, Lcid=1033)]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=24, Lcid=1033)]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=25, Lcid=1033)]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=28, Lcid=1033)]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=32, Lcid=1033)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=31, Lcid=1033)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Commitment", Index=9, Lcid=1033)]
        Commitment = 4215,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List", Index=20, Lcid=1033)]
        MarketingList = 4300,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign", Index=4, Lcid=1033)]
        Campaign = 4400,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=6, Lcid=1033)]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=5, Lcid=1033)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Import", Index=2, Lcid=1033)]
        BulkImport = 4407,
        
        [EnumMember()]
        [OptionSetMetadata("Routing Rule", Index=33, Lcid=1033)]
        RoutingRule = 8181,
        
        [EnumMember()]
        [OptionSetMetadata("Routing Rule Item", Index=34, Lcid=1033)]
        RoutingRuleItem = 8199,
    }
    
    [DataContract()]
    public enum AppModuleState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum AppModule_NavigationType {
        
        [EnumMember()]
        [OptionSetMetadata("Single session", Index=0, Lcid=1033)]
        Singlesession = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Multi session", Index=1, Lcid=1033)]
        Multisession = 1,
    }
    
    [DataContract()]
    public enum AppModule_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted", Index=2, Lcid=1033)]
        Deleted = 3,
    }
    
    [DataContract()]
    public enum AsyncOperationState {
        
        [EnumMember()]
        [OptionSetMetadata("Ready", Index=0, Lcid=1033)]
        Ready = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Suspended", Index=1, Lcid=1033)]
        Suspended = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Locked", Index=2, Lcid=1033)]
        Locked = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=3, Lcid=1033)]
        Completed = 3,
    }
    
    [DataContract()]
    public enum AsyncOperation_OperationType {
        
        [EnumMember()]
        [OptionSetMetadata("System Event", Index=0, Lcid=1033)]
        SystemEvent = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Email", Index=1, Lcid=1033)]
        BulkEmail = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Import File Parse", Index=2, Lcid=1033)]
        ImportFileParse = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Transform Parse Data", Index=3, Lcid=1033)]
        TransformParseData = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Import", Index=4, Lcid=1033)]
        Import = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Activity Propagation", Index=5, Lcid=1033)]
        ActivityPropagation = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Duplicate Detection Rule Publish", Index=6, Lcid=1033)]
        DuplicateDetectionRulePublish = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Duplicate Detection", Index=7, Lcid=1033)]
        BulkDuplicateDetection = 8,
        
        [EnumMember()]
        [OptionSetMetadata("SQM Data Collection", Index=8, Lcid=1033)]
        SQMDataCollection = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Workflow", Index=9, Lcid=1033)]
        Workflow = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=10, Lcid=1033)]
        QuickCampaign = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Matchcode Update", Index=11, Lcid=1033)]
        MatchcodeUpdate = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Delete", Index=12, Lcid=1033)]
        BulkDelete = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Deletion Service", Index=13, Lcid=1033)]
        DeletionService = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Index Management", Index=14, Lcid=1033)]
        IndexManagement = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Collect Organization Statistics", Index=15, Lcid=1033)]
        CollectOrganizationStatistics = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Import Subprocess", Index=16, Lcid=1033)]
        ImportSubprocess = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Calculate Organization Storage Size", Index=17, Lcid=1033)]
        CalculateOrganizationStorageSize = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Collect Organization Database Statistics", Index=18, Lcid=1033)]
        CollectOrganizationDatabaseStatistics = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Collection Organization Size Statistics", Index=19, Lcid=1033)]
        CollectionOrganizationSizeStatistics = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Database Tuning", Index=20, Lcid=1033)]
        DatabaseTuning = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Calculate Organization Maximum Storage Size", Index=21, Lcid=1033)]
        CalculateOrganizationMaximumStorageSize = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Delete Subprocess", Index=22, Lcid=1033)]
        BulkDeleteSubprocess = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Update Statistic Intervals", Index=23, Lcid=1033)]
        UpdateStatisticIntervals = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Organization Full Text Catalog Index", Index=24, Lcid=1033)]
        OrganizationFullTextCatalogIndex = 25,
        
        [EnumMember()]
        [OptionSetMetadata("Database log backup", Index=25, Lcid=1033)]
        Databaselogbackup = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Update Contract States", Index=26, Lcid=1033)]
        UpdateContractStates = 27,
        
        [EnumMember()]
        [OptionSetMetadata("DBCC SHRINKDATABASE maintenance job", Index=27, Lcid=1033)]
        DBCCSHRINKDATABASEmaintenancejob = 28,
        
        [EnumMember()]
        [OptionSetMetadata("DBCC SHRINKFILE maintenance job", Index=28, Lcid=1033)]
        DBCCSHRINKFILEmaintenancejob = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Reindex all indices maintenance job", Index=29, Lcid=1033)]
        Reindexallindicesmaintenancejob = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Storage Limit Notification", Index=30, Lcid=1033)]
        StorageLimitNotification = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Cleanup inactive workflow assemblies", Index=31, Lcid=1033)]
        Cleanupinactiveworkflowassemblies = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Series Expansion", Index=32, Lcid=1033)]
        RecurringSeriesExpansion = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Import Sample Data", Index=33, Lcid=1033)]
        ImportSampleData = 38,
        
        [EnumMember()]
        [OptionSetMetadata("Goal Roll Up", Index=34, Lcid=1033)]
        GoalRollUp = 40,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Partition Creation", Index=35, Lcid=1033)]
        AuditPartitionCreation = 41,
        
        [EnumMember()]
        [OptionSetMetadata("Check For Language Pack Updates", Index=36, Lcid=1033)]
        CheckForLanguagePackUpdates = 42,
        
        [EnumMember()]
        [OptionSetMetadata("Provision Language Pack", Index=37, Lcid=1033)]
        ProvisionLanguagePack = 43,
        
        [EnumMember()]
        [OptionSetMetadata("Update Organization Database", Index=38, Lcid=1033)]
        UpdateOrganizationDatabase = 44,
        
        [EnumMember()]
        [OptionSetMetadata("Update Solution", Index=39, Lcid=1033)]
        UpdateSolution = 45,
        
        [EnumMember()]
        [OptionSetMetadata("Regenerate Entity Row Count Snapshot Data", Index=40, Lcid=1033)]
        RegenerateEntityRowCountSnapshotData = 46,
        
        [EnumMember()]
        [OptionSetMetadata("Regenerate Read Share Snapshot Data", Index=41, Lcid=1033)]
        RegenerateReadShareSnapshotData = 47,
        
        [EnumMember()]
        [OptionSetMetadata("Post to Yammer", Index=47, Lcid=1033)]
        PosttoYammer = 49,
        
        [EnumMember()]
        [OptionSetMetadata("Outgoing Activity", Index=42, Lcid=1033)]
        OutgoingActivity = 50,
        
        [EnumMember()]
        [OptionSetMetadata("Incoming Email Processing", Index=43, Lcid=1033)]
        IncomingEmailProcessing = 51,
        
        [EnumMember()]
        [OptionSetMetadata("Mailbox Test Access", Index=44, Lcid=1033)]
        MailboxTestAccess = 52,
        
        [EnumMember()]
        [OptionSetMetadata("Encryption Health Check", Index=45, Lcid=1033)]
        EncryptionHealthCheck = 53,
        
        [EnumMember()]
        [OptionSetMetadata("Execute Async Request", Index=46, Lcid=1033)]
        ExecuteAsyncRequest = 54,
        
        [EnumMember()]
        [OptionSetMetadata("Update Entitlement States", Index=48, Lcid=1033)]
        UpdateEntitlementStates = 56,
        
        [EnumMember()]
        [OptionSetMetadata("Calculate Rollup Field", Index=49, Lcid=1033)]
        CalculateRollupField = 57,
        
        [EnumMember()]
        [OptionSetMetadata("Mass Calculate Rollup Field", Index=50, Lcid=1033)]
        MassCalculateRollupField = 58,
        
        [EnumMember()]
        [OptionSetMetadata("Import Translation", Index=51, Lcid=1033)]
        ImportTranslation = 59,
        
        [EnumMember()]
        [OptionSetMetadata("Convert Date And Time Behavior", Index=52, Lcid=1033)]
        ConvertDateAndTimeBehavior = 62,
        
        [EnumMember()]
        [OptionSetMetadata("EntityKey Index Creation", Index=53, Lcid=1033)]
        EntityKeyIndexCreation = 63,
        
        [EnumMember()]
        [OptionSetMetadata("Update Knowledge Article States", Index=54, Lcid=1033)]
        UpdateKnowledgeArticleStates = 65,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Booking Sync", Index=55, Lcid=1033)]
        ResourceBookingSync = 68,
        
        [EnumMember()]
        [OptionSetMetadata("Relationship Assistant Cards", Index=56, Lcid=1033)]
        RelationshipAssistantCards = 69,
        
        [EnumMember()]
        [OptionSetMetadata("Cleanup Solution Components", Index=57, Lcid=1033)]
        CleanupSolutionComponents = 71,
        
        [EnumMember()]
        [OptionSetMetadata("App Module Metadata Operation", Index=58, Lcid=1033)]
        AppModuleMetadataOperation = 72,
        
        [EnumMember()]
        [OptionSetMetadata("ALM Anomaly Detection Operation", Index=59, Lcid=1033)]
        ALMAnomalyDetectionOperation = 73,
        
        [EnumMember()]
        [OptionSetMetadata("Flow Notification", Index=60, Lcid=1033)]
        FlowNotification = 75,
        
        [EnumMember()]
        [OptionSetMetadata("Ribbon Client Metadata Operation", Index=61, Lcid=1033)]
        RibbonClientMetadataOperation = 76,
        
        [EnumMember()]
        [OptionSetMetadata("CallbackRegistration Expander Operation", Index=62, Lcid=1033)]
        CallbackRegistrationExpanderOperation = 79,
        
        [EnumMember()]
        [OptionSetMetadata("Migrate notes to attachments job", Index=75, Lcid=1033)]
        Migratenotestoattachmentsjob = 85,
        
        [EnumMember()]
        [OptionSetMetadata("Migrate article content to file storage", Index=76, Lcid=1033)]
        Migratearticlecontenttofilestorage = 86,
        
        [EnumMember()]
        [OptionSetMetadata("Updated Deactived On for Resolved Cases job", Index=77, Lcid=1033)]
        UpdatedDeactivedOnforResolvedCasesjob = 87,
        
        [EnumMember()]
        [OptionSetMetadata("CascadeAssign", Index=63, Lcid=1033)]
        CascadeAssign = 90,
        
        [EnumMember()]
        [OptionSetMetadata("CascadeDelete", Index=64, Lcid=1033)]
        CascadeDelete = 91,
        
        [EnumMember()]
        [OptionSetMetadata("Event Expander Operation", Index=65, Lcid=1033)]
        EventExpanderOperation = 92,
        
        [EnumMember()]
        [OptionSetMetadata("Import Solution Metadata", Index=66, Lcid=1033)]
        ImportSolutionMetadata = 93,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Delete File Attachment", Index=67, Lcid=1033)]
        BulkDeleteFileAttachment = 94,
        
        [EnumMember()]
        [OptionSetMetadata("Refresh Business Unit for Records Owned By Principal", Index=68, Lcid=1033)]
        RefreshBusinessUnitforRecordsOwnedByPrincipal = 95,
        
        [EnumMember()]
        [OptionSetMetadata("Revoke Inherited Access", Index=69, Lcid=1033)]
        RevokeInheritedAccess = 96,
        
        [EnumMember()]
        [OptionSetMetadata("Create Or Refresh Virtual Entity", Index=78, Lcid=1033)]
        CreateOrRefreshVirtualEntity = 98,
        
        [EnumMember()]
        [OptionSetMetadata("Cascade FlowSession Permissions Async Operation", Index=89, Lcid=1033)]
        CascadeFlowSessionPermissionsAsyncOperation = 100,
        
        [EnumMember()]
        [OptionSetMetadata("Update Modern Flow Async Operation", Index=90, Lcid=1033)]
        UpdateModernFlowAsyncOperation = 101,
        
        [EnumMember()]
        [OptionSetMetadata("AsyncArchive Async Operation", Index=91, Lcid=1033)]
        AsyncArchiveAsyncOperation = 102,
        
        [EnumMember()]
        [OptionSetMetadata("Cancel Async Operations (System)", Index=92, Lcid=1033)]
        CancelAsyncOperationsSystem = 103,
        
        [EnumMember()]
        [OptionSetMetadata("Provision language for user", Index=70, Lcid=1033)]
        Provisionlanguageforuser = 201,
        
        [EnumMember()]
        [OptionSetMetadata("Export Solution Async Operation", Index=79, Lcid=1033)]
        ExportSolutionAsyncOperation = 202,
        
        [EnumMember()]
        [OptionSetMetadata("Import Solution Async Operation", Index=80, Lcid=1033)]
        ImportSolutionAsyncOperation = 203,
        
        [EnumMember()]
        [OptionSetMetadata("PublishAll Async Operation", Index=81, Lcid=1033)]
        PublishAllAsyncOperation = 204,
        
        [EnumMember()]
        [OptionSetMetadata("DeleteAndPromote Async Operation", Index=82, Lcid=1033)]
        DeleteAndPromoteAsyncOperation = 207,
        
        [EnumMember()]
        [OptionSetMetadata("UninstallSolution Async Operation", Index=83, Lcid=1033)]
        UninstallSolutionAsyncOperation = 208,
        
        [EnumMember()]
        [OptionSetMetadata("ProvisionLanguage Async Operation", Index=84, Lcid=1033)]
        ProvisionLanguageAsyncOperation = 209,
        
        [EnumMember()]
        [OptionSetMetadata("ImportTranslation Async Operation", Index=85, Lcid=1033)]
        ImportTranslationAsyncOperation = 210,
        
        [EnumMember()]
        [OptionSetMetadata("StageAndUpgrade Async Operation", Index=86, Lcid=1033)]
        StageAndUpgradeAsyncOperation = 211,
        
        [EnumMember()]
        [OptionSetMetadata("Denormalization Async Operation", Index=87, Lcid=1033)]
        DenormalizationAsyncOperation = 239,
        
        [EnumMember()]
        [OptionSetMetadata("Refresh Runtime Integration Components Async Operation", Index=88, Lcid=1033)]
        RefreshRuntimeIntegrationComponentsAsyncOperation = 250,
        
        [EnumMember()]
        [OptionSetMetadata("BulkArchiveBatch Async Operation", Index=73, Lcid=1033)]
        BulkArchiveBatchAsyncOperation = 261,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Archive Operation", Index=93, Lcid=1033)]
        BulkArchiveOperation = 300,
        
        [EnumMember()]
        [OptionSetMetadata("Archive Execution Async Operation", Index=94, Lcid=1033)]
        ArchiveExecutionAsyncOperation = 301,
        
        [EnumMember()]
        [OptionSetMetadata("FinOps Deployment Async Operation", Index=95, Lcid=1033)]
        FinOpsDeploymentAsyncOperation = 302,
        
        [EnumMember()]
        [OptionSetMetadata("Purge Archived Content Operation", Index=96, Lcid=1033)]
        PurgeArchivedContentOperation = 304,
        
        [EnumMember()]
        [OptionSetMetadata("Register Offering Async Operation", Index=97, Lcid=1033)]
        RegisterOfferingAsyncOperation = 305,
        
        [EnumMember()]
        [OptionSetMetadata("Execute DataProcessing Configuration", Index=98, Lcid=1033)]
        ExecuteDataProcessingConfiguration = 306,
        
        [EnumMember()]
        [OptionSetMetadata("Sync Synapse Tables Schema", Index=99, Lcid=1033)]
        SyncSynapseTablesSchema = 307,
        
        [EnumMember()]
        [OptionSetMetadata("FinOps DB Sync Async Operation", Index=100, Lcid=1033)]
        FinOpsDBSyncAsyncOperation = 308,
        
        [EnumMember()]
        [OptionSetMetadata("FinOps Unit Test Async Operation", Index=101, Lcid=1033)]
        FinOpsUnitTestAsyncOperation = 309,
        
        [EnumMember()]
        [OptionSetMetadata("Cascade Grant or Revoke Access Version Tracking Async Operation", Index=74, Lcid=1033)]
        CascadeGrantorRevokeAccessVersionTrackingAsyncOperation = 12801,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Training Events", Index=71, Lcid=1033)]
        AIBuilderTrainingEvents = 190690091,
        
        [EnumMember()]
        [OptionSetMetadata("AI Builder Prediction Events", Index=72, Lcid=1033)]
        AIBuilderPredictionEvents = 190690092,
    }
    
    [DataContract()]
    public enum AsyncOperation_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Waiting For Resources", Index=0, Lcid=1033)]
        WaitingForResources = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting", Index=1, Lcid=1033)]
        Waiting = 10,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=2, Lcid=1033)]
        InProgress = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Pausing", Index=3, Lcid=1033)]
        Pausing = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Canceling", Index=4, Lcid=1033)]
        Canceling = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=5, Lcid=1033)]
        Succeeded = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=6, Lcid=1033)]
        Failed = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=7, Lcid=1033)]
        Canceled = 32,
    }
    
    [DataContract()]
    public enum Audit_Action {
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=0, Lcid=1033)]
        Unknown = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Create", Index=1, Lcid=1033)]
        Create = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Update", Index=2, Lcid=1033)]
        Update = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Delete", Index=3, Lcid=1033)]
        Delete = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Activate", Index=4, Lcid=1033)]
        Activate = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Deactivate", Index=5, Lcid=1033)]
        Deactivate = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Cascade", Index=6, Lcid=1033)]
        Cascade = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Merge", Index=7, Lcid=1033)]
        Merge = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Assign", Index=8, Lcid=1033)]
        Assign = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Share", Index=9, Lcid=1033)]
        Share = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Retrieve", Index=10, Lcid=1033)]
        Retrieve = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Close", Index=11, Lcid=1033)]
        Close = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Cancel", Index=12, Lcid=1033)]
        Cancel = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Complete", Index=13, Lcid=1033)]
        Complete = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Resolve", Index=14, Lcid=1033)]
        Resolve = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Reopen", Index=15, Lcid=1033)]
        Reopen = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfill", Index=16, Lcid=1033)]
        Fulfill = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Paid", Index=17, Lcid=1033)]
        Paid = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Qualify", Index=18, Lcid=1033)]
        Qualify = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Disqualify", Index=19, Lcid=1033)]
        Disqualify = 25,
        
        [EnumMember()]
        [OptionSetMetadata("Submit", Index=20, Lcid=1033)]
        Submit = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Reject", Index=21, Lcid=1033)]
        Reject = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Approve", Index=22, Lcid=1033)]
        Approve = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=23, Lcid=1033)]
        Invoice = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Hold", Index=24, Lcid=1033)]
        Hold = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Add Member", Index=25, Lcid=1033)]
        AddMember = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Member", Index=26, Lcid=1033)]
        RemoveMember = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Associate Entities", Index=27, Lcid=1033)]
        AssociateEntities = 33,
        
        [EnumMember()]
        [OptionSetMetadata("Disassociate Entities", Index=28, Lcid=1033)]
        DisassociateEntities = 34,
        
        [EnumMember()]
        [OptionSetMetadata("Add Members", Index=29, Lcid=1033)]
        AddMembers = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Members", Index=30, Lcid=1033)]
        RemoveMembers = 36,
        
        [EnumMember()]
        [OptionSetMetadata("Add Item", Index=31, Lcid=1033)]
        AddItem = 37,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Item", Index=32, Lcid=1033)]
        RemoveItem = 38,
        
        [EnumMember()]
        [OptionSetMetadata("Add Substitute", Index=33, Lcid=1033)]
        AddSubstitute = 39,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Substitute", Index=34, Lcid=1033)]
        RemoveSubstitute = 40,
        
        [EnumMember()]
        [OptionSetMetadata("Set State", Index=35, Lcid=1033)]
        SetState = 41,
        
        [EnumMember()]
        [OptionSetMetadata("Renew", Index=36, Lcid=1033)]
        Renew = 42,
        
        [EnumMember()]
        [OptionSetMetadata("Revise", Index=37, Lcid=1033)]
        Revise = 43,
        
        [EnumMember()]
        [OptionSetMetadata("Win", Index=38, Lcid=1033)]
        Win = 44,
        
        [EnumMember()]
        [OptionSetMetadata("Lose", Index=39, Lcid=1033)]
        Lose = 45,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Processing", Index=40, Lcid=1033)]
        InternalProcessing = 46,
        
        [EnumMember()]
        [OptionSetMetadata("Reschedule", Index=41, Lcid=1033)]
        Reschedule = 47,
        
        [EnumMember()]
        [OptionSetMetadata("Modify Share", Index=42, Lcid=1033)]
        ModifyShare = 48,
        
        [EnumMember()]
        [OptionSetMetadata("Unshare", Index=43, Lcid=1033)]
        Unshare = 49,
        
        [EnumMember()]
        [OptionSetMetadata("Book", Index=44, Lcid=1033)]
        Book = 50,
        
        [EnumMember()]
        [OptionSetMetadata("Generate Quote From Opportunity", Index=45, Lcid=1033)]
        GenerateQuoteFromOpportunity = 51,
        
        [EnumMember()]
        [OptionSetMetadata("Add To Queue", Index=46, Lcid=1033)]
        AddToQueue = 52,
        
        [EnumMember()]
        [OptionSetMetadata("Assign Role To Team", Index=47, Lcid=1033)]
        AssignRoleToTeam = 53,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Role From Team", Index=48, Lcid=1033)]
        RemoveRoleFromTeam = 54,
        
        [EnumMember()]
        [OptionSetMetadata("Assign Role To User", Index=49, Lcid=1033)]
        AssignRoleToUser = 55,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Role From User", Index=50, Lcid=1033)]
        RemoveRoleFromUser = 56,
        
        [EnumMember()]
        [OptionSetMetadata("Add Privileges to Role", Index=51, Lcid=1033)]
        AddPrivilegestoRole = 57,
        
        [EnumMember()]
        [OptionSetMetadata("Remove Privileges From Role", Index=52, Lcid=1033)]
        RemovePrivilegesFromRole = 58,
        
        [EnumMember()]
        [OptionSetMetadata("Replace Privileges In Role", Index=53, Lcid=1033)]
        ReplacePrivilegesInRole = 59,
        
        [EnumMember()]
        [OptionSetMetadata("Import Mappings", Index=54, Lcid=1033)]
        ImportMappings = 60,
        
        [EnumMember()]
        [OptionSetMetadata("Clone", Index=55, Lcid=1033)]
        Clone = 61,
        
        [EnumMember()]
        [OptionSetMetadata("Send Direct Email", Index=56, Lcid=1033)]
        SendDirectEmail = 62,
        
        [EnumMember()]
        [OptionSetMetadata("Enabled for organization", Index=57, Lcid=1033)]
        Enabledfororganization = 63,
        
        [EnumMember()]
        [OptionSetMetadata("User Access via Web", Index=58, Lcid=1033)]
        UserAccessviaWeb = 64,
        
        [EnumMember()]
        [OptionSetMetadata("User Access via Web Services", Index=59, Lcid=1033)]
        UserAccessviaWebServices = 65,
        
        [EnumMember()]
        [OptionSetMetadata("Delete Entity", Index=60, Lcid=1033)]
        DeleteEntity = 100,
        
        [EnumMember()]
        [OptionSetMetadata("Delete Attribute", Index=61, Lcid=1033)]
        DeleteAttribute = 101,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Change at Entity Level", Index=62, Lcid=1033)]
        AuditChangeatEntityLevel = 102,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Change at Attribute Level", Index=63, Lcid=1033)]
        AuditChangeatAttributeLevel = 103,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Change at Org Level", Index=64, Lcid=1033)]
        AuditChangeatOrgLevel = 104,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Audit Started", Index=65, Lcid=1033)]
        EntityAuditStarted = 105,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute Audit Started", Index=66, Lcid=1033)]
        AttributeAuditStarted = 106,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Enabled", Index=67, Lcid=1033)]
        AuditEnabled = 107,
        
        [EnumMember()]
        [OptionSetMetadata("Entity Audit Stopped", Index=68, Lcid=1033)]
        EntityAuditStopped = 108,
        
        [EnumMember()]
        [OptionSetMetadata("Attribute Audit Stopped", Index=69, Lcid=1033)]
        AttributeAuditStopped = 109,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Disabled", Index=70, Lcid=1033)]
        AuditDisabled = 110,
        
        [EnumMember()]
        [OptionSetMetadata("Audit Log Deletion", Index=71, Lcid=1033)]
        AuditLogDeletion = 111,
        
        [EnumMember()]
        [OptionSetMetadata("User Access Audit Started", Index=72, Lcid=1033)]
        UserAccessAuditStarted = 112,
        
        [EnumMember()]
        [OptionSetMetadata("User Access Audit Stopped", Index=73, Lcid=1033)]
        UserAccessAuditStopped = 113,
    }
    
    [DataContract()]
    public enum Audit_Operation {
        
        [EnumMember()]
        [OptionSetMetadata("Create", Index=0, Lcid=1033)]
        Create = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Update", Index=1, Lcid=1033)]
        Update = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Delete", Index=2, Lcid=1033)]
        Delete = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Access", Index=3, Lcid=1033)]
        Access = 4,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        [OptionSetMetadata("Decision Maker", Index=0, Lcid=1033)]
        DecisionMaker = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee", Index=1, Lcid=1033)]
        Employee = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=2, Lcid=1033)]
        Influencer = 3,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0, Lcid=1033)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1, Lcid=1033)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2, Lcid=1033)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3, Lcid=1033)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1033)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1, Lcid=1033)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0, Lcid=1033)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1033)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1033)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1033)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4, Lcid=1033)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5, Lcid=1033)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6, Lcid=1033)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Single", Index=0, Lcid=1033)]
        Single = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Married", Index=1, Lcid=1033)]
        Married = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Divorced", Index=2, Lcid=1033)]
        Divorced = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Widowed", Index=3, Lcid=1033)]
        Widowed = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        [OptionSetMetadata("Male", Index=0, Lcid=1033)]
        Male = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Female", Index=1, Lcid=1033)]
        Female = 2,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0, Lcid=1033)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1, Lcid=1033)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2, Lcid=1033)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3, Lcid=1033)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0, Lcid=1033)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1, Lcid=1033)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2, Lcid=1033)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3, Lcid=1033)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4, Lcid=1033)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5, Lcid=1033)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6, Lcid=1033)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0, Lcid=1033)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1, Lcid=1033)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2, Lcid=1033)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0, Lcid=1033)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1, Lcid=1033)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2, Lcid=1033)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1033)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4, Lcid=1033)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_dsn_Salutation {
        
        [EnumMember()]
        [OptionSetMetadata("Mr.", Index=0, Lcid=1033, Color="#0000ff")]
        Mr = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Mrs.", Index=1, Lcid=1033, Color="#0000ff")]
        Mrs = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Miss", Index=2, Lcid=1033, Color="#0000ff")]
        Miss = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("Ms.", Index=3, Lcid=1033, Color="#0000ff")]
        Ms = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("Capt", Index=4, Lcid=1033, Color="#0000ff")]
        Capt = 860930004,
    }
    
    [DataContract()]
    public enum Contact_dsn_ValidationStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Invite Sent", Index=0, Lcid=1033, Color="#0000ff")]
        InviteSent = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("First Reminder Sent", Index=1, Lcid=1033, Color="#ffff99")]
        FirstReminderSent = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Second Reminder Sent", Index=2, Lcid=1033, Color="#ff9900")]
        SecondReminderSent = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("No Action - Deactivated", Index=3, Lcid=1033, Color="#ff0000")]
        NoActionDeactivated = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("Link Used", Index=4, Lcid=1033, Color="#00ff00")]
        LinkUsed = 860930004,
    }
    
    [DataContract()]
    public enum EmailState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Lcid=1033)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Lcid=1033)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Email_CorrelationMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Skipped", Index=1, Lcid=1033)]
        Skipped = 1,
        
        [EnumMember()]
        [OptionSetMetadata("XHeader", Index=2, Lcid=1033)]
        XHeader = 2,
        
        [EnumMember()]
        [OptionSetMetadata("InReplyTo", Index=3, Lcid=1033)]
        InReplyTo = 3,
        
        [EnumMember()]
        [OptionSetMetadata("TrackingToken", Index=4, Lcid=1033)]
        TrackingToken = 4,
        
        [EnumMember()]
        [OptionSetMetadata("ConversationIndex", Index=5, Lcid=1033)]
        ConversationIndex = 5,
        
        [EnumMember()]
        [OptionSetMetadata("SmartMatching", Index=6, Lcid=1033)]
        SmartMatching = 6,
        
        [EnumMember()]
        [OptionSetMetadata("CustomCorrelation", Index=7, Lcid=1033)]
        CustomCorrelation = 7,
    }
    
    [DataContract()]
    public enum Email_EmailReminderStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotSet", Index=0, Lcid=1033)]
        NotSet = 0,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderSet", Index=1, Lcid=1033)]
        ReminderSet = 1,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderExpired", Index=2, Lcid=1033)]
        ReminderExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderInvalid", Index=3, Lcid=1033)]
        ReminderInvalid = 3,
    }
    
    [DataContract()]
    public enum Email_EmailReminderType {
        
        [EnumMember()]
        [OptionSetMetadata("If I do not receive a reply by", Index=0, Lcid=1033)]
        IfIdonotreceiveareplyby = 0,
        
        [EnumMember()]
        [OptionSetMetadata("If the email is not opened by", Index=1, Lcid=1033)]
        Iftheemailisnotopenedby = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Remind me anyways at", Index=2, Lcid=1033)]
        Remindmeanywaysat = 2,
    }
    
    [DataContract()]
    public enum Email_Notifications {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("The message was saved as a Microsoft Dynamics 365 email record, but not all the a" +
            "ttachments could be saved with it. An attachment cannot be saved if it is blocke" +
            "d or if its file type is invalid.", Index=1, Lcid=1033)]
        ThemessagewassavedasaMicrosoftDynamics365emailrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Truncated body.", Index=2, Lcid=1033)]
        Truncatedbody = 2,
    }
    
    [DataContract()]
    public enum Email_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum Email_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033, Color="#3b79b7")]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Lcid=1033, Color="#358717")]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Sent", Index=2, Lcid=1033, Color="#358717")]
        Sent = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Lcid=1033, Color="#358717")]
        Received = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4, Lcid=1033, Color="#666666")]
        Canceled = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Send", Index=5, Lcid=1033, Color="#bf991f")]
        PendingSend = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Sending", Index=6, Lcid=1033, Color="#bf991f")]
        Sending = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=7, Lcid=1033, Color="#ea0600")]
        Failed = 8,
    }
    
    [DataContract()]
    public enum Organization_CurrencyDisplayOption {
        
        [EnumMember()]
        [OptionSetMetadata("Currency symbol", Index=0, Lcid=1033)]
        Currencysymbol = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Currency code", Index=1, Lcid=1033)]
        Currencycode = 1,
    }
    
    [DataContract()]
    public enum Organization_CurrencyFormatCode {
        
        [EnumMember()]
        [OptionSetMetadata("$123", Index=0, Lcid=1033)]
        _123 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("123$", Index=1, Lcid=1033)]
        _123_2 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("$ 123", Index=2, Lcid=1033)]
        _123_3 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("123 $", Index=3, Lcid=1033)]
        _123_4 = 3,
    }
    
    [DataContract()]
    public enum Organization_DefaultRecurrenceEndRangeType {
        
        [EnumMember()]
        [OptionSetMetadata("No End Date", Index=0, Lcid=1033)]
        NoEndDate = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Number of Occurrences", Index=1, Lcid=1033)]
        NumberofOccurrences = 2,
        
        [EnumMember()]
        [OptionSetMetadata("End By Date", Index=2, Lcid=1033)]
        EndByDate = 3,
    }
    
    [DataContract()]
    public enum Organization_DiscountCalculationMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Line item", Index=0, Lcid=1033)]
        Lineitem = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Per unit", Index=1, Lcid=1033)]
        Perunit = 1,
    }
    
    [DataContract()]
    public enum Organization_EmailConnectionChannel {
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=0, Lcid=1033)]
        ServerSideSynchronization = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 Email Router", Index=1, Lcid=1033)]
        MicrosoftDynamics365EmailRouter = 1,
    }
    
    [DataContract()]
    public enum Organization_FiscalPeriodFormatPeriod {
        
        [EnumMember()]
        [OptionSetMetadata("Quarter {0}", Index=0, Lcid=1033)]
        Quarter0 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Q{0}", Index=1, Lcid=1033)]
        Q0 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("P{0}", Index=2, Lcid=1033)]
        P0 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Month {0}", Index=3, Lcid=1033)]
        Month0 = 4,
        
        [EnumMember()]
        [OptionSetMetadata("M{0}", Index=4, Lcid=1033)]
        M0 = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Semester {0}", Index=5, Lcid=1033)]
        Semester0 = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Month Name", Index=6, Lcid=1033)]
        MonthName = 7,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatPrefix {
        
        [EnumMember()]
        [OptionSetMetadata("FY", Index=0, Lcid=1033)]
        FY = 1,
        
        [EnumMember()]
        [OptionSetMetadata("", Index=1, Lcid=1033)]
        _EmptyString = 2,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatSuffix {
        
        [EnumMember()]
        [OptionSetMetadata("FY", Index=0, Lcid=1033)]
        FY = 1,
        
        [EnumMember()]
        [OptionSetMetadata(" Fiscal Year", Index=1, Lcid=1033)]
        FiscalYear = 2,
        
        [EnumMember()]
        [OptionSetMetadata("", Index=2, Lcid=1033)]
        _EmptyString = 3,
    }
    
    [DataContract()]
    public enum Organization_FiscalYearFormatYear {
        
        [EnumMember()]
        [OptionSetMetadata("YYYY", Index=0, Lcid=1033)]
        YYYY = 1,
        
        [EnumMember()]
        [OptionSetMetadata("YY", Index=1, Lcid=1033)]
        YY = 2,
        
        [EnumMember()]
        [OptionSetMetadata("GGYY", Index=2, Lcid=1033)]
        GGYY = 3,
    }
    
    [DataContract()]
    public enum Organization_FullNameConventionCode {
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name", Index=0, Lcid=1033)]
        LastNameFirstName = 0,
        
        [EnumMember()]
        [OptionSetMetadata("First Name", Index=1, Lcid=1033)]
        FirstName = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name, Middle Initial", Index=2, Lcid=1033)]
        LastNameFirstNameMiddleInitial = 2,
        
        [EnumMember()]
        [OptionSetMetadata("First Name, Middle Initial, Last Name", Index=3, Lcid=1033)]
        FirstNameMiddleInitialLastName = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, First Name, Middle Name", Index=4, Lcid=1033)]
        LastNameFirstNameMiddleName = 4,
        
        [EnumMember()]
        [OptionSetMetadata("First Name, Middle Name, Last Name", Index=5, Lcid=1033)]
        FirstNameMiddleNameLastName = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, space, First Name", Index=6, Lcid=1033)]
        LastNamespaceFirstName = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Last Name, no space, First Name", Index=7, Lcid=1033)]
        LastNamenospaceFirstName = 7,
    }
    
    [DataContract()]
    public enum Organization_ISVIntegrationCode {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=1, Lcid=1033)]
        Web = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook Workstation Client", Index=2, Lcid=1033)]
        OutlookWorkstationClient = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Web; Outlook Workstation Client", Index=3, Lcid=1033)]
        WebOutlookWorkstationClient = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook Laptop Client", Index=4, Lcid=1033)]
        OutlookLaptopClient = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Web; Outlook Laptop Client", Index=5, Lcid=1033)]
        WebOutlookLaptopClient = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Outlook", Index=6, Lcid=1033)]
        Outlook = 6,
        
        [EnumMember()]
        [OptionSetMetadata("All", Index=7, Lcid=1033)]
        All = 7,
    }
    
    [DataContract()]
    public enum Organization_NegativeFormatCode {
        
        [EnumMember()]
        [OptionSetMetadata("Brackets", Index=0, Lcid=1033)]
        Brackets = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Dash", Index=1, Lcid=1033)]
        Dash = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Dash plus Space", Index=2, Lcid=1033)]
        DashplusSpace = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Trailing Dash", Index=3, Lcid=1033)]
        TrailingDash = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Space plus Trailing Dash", Index=4, Lcid=1033)]
        SpaceplusTrailingDash = 4,
    }
    
    [DataContract()]
    public enum Organization_OrganizationState {
        
        [EnumMember()]
        [OptionSetMetadata("Creating", Index=0, Lcid=1033)]
        Creating = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Upgrading", Index=1, Lcid=1033)]
        Upgrading = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Updating", Index=2, Lcid=1033)]
        Updating = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=3, Lcid=1033)]
        Active = 3,
    }
    
    [DataContract()]
    public enum Organization_PluginTraceLogSetting {
        
        [EnumMember()]
        [OptionSetMetadata("Off", Index=0, Lcid=1033)]
        Off = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Exception", Index=1, Lcid=1033)]
        Exception = 1,
        
        [EnumMember()]
        [OptionSetMetadata("All", Index=2, Lcid=1033)]
        All = 2,
    }
    
    [DataContract()]
    public enum Organization_ReportScriptErrors {
        
        [EnumMember()]
        [OptionSetMetadata("No preference for sending an error report to Microsoft about Microsoft Dynamics 3" +
            "65", Index=0, Lcid=1033)]
        NopreferenceforsendinganerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Ask me for permission to send an error report to Microsoft", Index=1, Lcid=1033)]
        AskmeforpermissiontosendanerrorreporttoMicrosoft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Automatically send an error report to Microsoft without asking me for permission", Index=2, Lcid=1033)]
        AutomaticallysendanerrorreporttoMicrosoftwithoutaskingmeforpermission = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Never send an error report to Microsoft about Microsoft Dynamics 365", Index=3, Lcid=1033)]
        NeversendanerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 3,
    }
    
    [DataContract()]
    public enum Organization_SharePointDeploymentType {
        
        [EnumMember()]
        [OptionSetMetadata("Online", Index=0, Lcid=1033)]
        Online = 0,
        
        [EnumMember()]
        [OptionSetMetadata("On-Premises", Index=1, Lcid=1033)]
        OnPremises = 1,
    }
    
    [DataContract()]
    public enum Organization_SyncOptInSelectionStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Processing", Index=0, Lcid=1033)]
        Processing = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Passed", Index=1, Lcid=1033)]
        Passed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=2, Lcid=1033)]
        Failed = 3,
    }
    
    [DataContract()]
    public enum Organization_ValidationMode {
        
        [EnumMember()]
        [OptionSetMetadata("Off", Index=0, Lcid=1033)]
        Off = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Warn", Index=1, Lcid=1033)]
        Warn = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Block", Index=2, Lcid=1033)]
        Block = 2,
    }
    
    [DataContract()]
    public enum Organization_YammerPostMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0, Lcid=1033)]
        Public = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1, Lcid=1033)]
        Private = 1,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStepState {
        
        [EnumMember()]
        [OptionSetMetadata("Enabled", Index=0, Lcid=1033)]
        Enabled = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Disabled", Index=1, Lcid=1033)]
        Disabled = 1,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStep_InvocationSource {
        
        [EnumMember()]
        [OptionSetMetadata("Internal", Index=0, Lcid=1033)]
        Internal = -1,
        
        [EnumMember()]
        [OptionSetMetadata("Parent", Index=1, Lcid=1033)]
        Parent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Child", Index=2, Lcid=1033)]
        Child = 1,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStep_Mode {
        
        [EnumMember()]
        [OptionSetMetadata("Synchronous", Index=0, Lcid=1033)]
        Synchronous = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Asynchronous", Index=1, Lcid=1033)]
        Asynchronous = 1,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStep_Stage {
        
        [EnumMember()]
        [OptionSetMetadata("Initial Pre-operation (For internal use only)", Index=0, Lcid=1033)]
        InitialPreoperationForinternaluseonly = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Pre-validation", Index=1, Lcid=1033)]
        Prevalidation = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Pre-operation Before External Plugins (For internal use only)", Index=2, Lcid=1033)]
        InternalPreoperationBeforeExternalPluginsForinternaluseonly = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Pre-operation", Index=3, Lcid=1033)]
        Preoperation = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Pre-operation After External Plugins (For internal use only)", Index=4, Lcid=1033)]
        InternalPreoperationAfterExternalPluginsForinternaluseonly = 25,
        
        [EnumMember()]
        [OptionSetMetadata("Main Operation (For internal use only)", Index=5, Lcid=1033)]
        MainOperationForinternaluseonly = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Post-operation Before External Plugins (For internal use only)", Index=6, Lcid=1033)]
        InternalPostoperationBeforeExternalPluginsForinternaluseonly = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Post-operation", Index=7, Lcid=1033)]
        Postoperation = 40,
        
        [EnumMember()]
        [OptionSetMetadata("Internal Post-operation After External Plugins (For internal use only)", Index=8, Lcid=1033)]
        InternalPostoperationAfterExternalPluginsForinternaluseonly = 45,
        
        [EnumMember()]
        [OptionSetMetadata("Post-operation (Deprecated)", Index=9, Lcid=1033)]
        PostoperationDeprecated = 50,
        
        [EnumMember()]
        [OptionSetMetadata("Final Post-operation (For internal use only)", Index=10, Lcid=1033)]
        FinalPostoperationForinternaluseonly = 55,
        
        [EnumMember()]
        [OptionSetMetadata("Pre-Commit stage fired before transaction commit (For internal use only)", Index=11, Lcid=1033)]
        PreCommitstagefiredbeforetransactioncommitForinternaluseonly = 80,
        
        [EnumMember()]
        [OptionSetMetadata("Post-Commit stage fired after transaction commit (For internal use only)", Index=12, Lcid=1033)]
        PostCommitstagefiredaftertransactioncommitForinternaluseonly = 90,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStep_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Enabled", Index=0, Lcid=1033)]
        Enabled = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Disabled", Index=1, Lcid=1033)]
        Disabled = 2,
    }
    
    [DataContract()]
    public enum SdkMessageProcessingStep_SupportedDeployment {
        
        [EnumMember()]
        [OptionSetMetadata("Server Only", Index=0, Lcid=1033)]
        ServerOnly = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 Client for Outlook Only", Index=1, Lcid=1033)]
        MicrosoftDynamics365ClientforOutlookOnly = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Both", Index=2, Lcid=1033)]
        Both = 2,
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0, Lcid=1033)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2, Lcid=1033)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3, Lcid=1033)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4, Lcid=1033)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5, Lcid=1033)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_AzureState {
        
        [EnumMember()]
        [OptionSetMetadata("Exists", Index=0, Lcid=1033)]
        Exists = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Not found or hard deleted", Index=2, Lcid=1033)]
        Notfoundorharddeleted = 2,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0, Lcid=1033)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2, Lcid=1033)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3, Lcid=1033)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4, Lcid=1033)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5, Lcid=1033)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6, Lcid=1033)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7, Lcid=1033)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8, Lcid=1033)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9, Lcid=1033)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10, Lcid=1033)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11, Lcid=1033)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12, Lcid=1033)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0, Lcid=1033)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0, Lcid=1033)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2, Lcid=1033)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3, Lcid=1033)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3, Lcid=1033)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0, Lcid=1033)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1, Lcid=1033)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2, Lcid=1033)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3, Lcid=1033)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4, Lcid=1033)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5, Lcid=1033)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6, Lcid=1033)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0, Lcid=1033)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1, Lcid=1033)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0, Lcid=1033)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1, Lcid=1033)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2, Lcid=1033)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3, Lcid=1033)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum Team_MembershipType {
        
        [EnumMember()]
        [OptionSetMetadata("Members and guests", Index=0, Lcid=1033)]
        Membersandguests = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Members", Index=1, Lcid=1033)]
        Members = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Owners", Index=2, Lcid=1033)]
        Owners = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Guests", Index=3, Lcid=1033)]
        Guests = 3,
    }
    
    [DataContract()]
    public enum Team_TeamType {
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=0, Lcid=1033)]
        Owner = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Access", Index=1, Lcid=1033)]
        Access = 1,
        
        [EnumMember()]
        [OptionSetMetadata("AAD Security Group", Index=2, Lcid=1033)]
        AADSecurityGroup = 2,
        
        [EnumMember()]
        [OptionSetMetadata("AAD Office Group", Index=3, Lcid=1033)]
        AADOfficeGroup = 3,
    }
    
    [DataContract()]
    public enum Template_TemplateTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=3, Lcid=1033)]
        User = 8,
        
        [EnumMember()]
        [OptionSetMetadata("System Job", Index=2, Lcid=1033)]
        SystemJob = 4700,
    }
    
    [DataContract()]
    public enum UserSettings_DataValidationModeForExportToExcel {
        
        [EnumMember()]
        [OptionSetMetadata("Full", Index=0, Lcid=1033)]
        Full = 0,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=1, Lcid=1033)]
        None = 1,
    }
    
    [DataContract()]
    public enum UserSettings_DefaultSearchExperience {
        
        [EnumMember()]
        [OptionSetMetadata("Relevance search", Index=1, Lcid=1033)]
        Relevancesearch = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Categorized search", Index=2, Lcid=1033)]
        Categorizedsearch = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Use last search", Index=0, Lcid=1033)]
        Uselastsearch = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Custom search", Index=3, Lcid=1033)]
        Customsearch = 3,
    }
    
    [DataContract()]
    public enum UserSettings_EntityFormMode {
        
        [EnumMember()]
        [OptionSetMetadata("Organization default", Index=0, Lcid=1033)]
        Organizationdefault = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Read-optimized", Index=1, Lcid=1033)]
        Readoptimized = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Edit", Index=2, Lcid=1033)]
        Edit = 2,
    }
    
    [DataContract()]
    public enum UserSettings_IncomingEmailFilteringMethod {
        
        [EnumMember()]
        [OptionSetMetadata("All email messages", Index=0, Lcid=1033)]
        Allemailmessages = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages in response to Dynamics 365 email", Index=1, Lcid=1033)]
        EmailmessagesinresponsetoDynamics365email = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages from Dynamics 365 Leads, Contacts and Accounts", Index=2, Lcid=1033)]
        EmailmessagesfromDynamics365LeadsContactsandAccounts = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages from Dynamics 365 records that are email enabled", Index=3, Lcid=1033)]
        EmailmessagesfromDynamics365recordsthatareemailenabled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("No email messages", Index=4, Lcid=1033)]
        Noemailmessages = 4,
    }
    
    [DataContract()]
    public enum UserSettings_ReportScriptErrors {
        
        [EnumMember()]
        [OptionSetMetadata("Ask me for permission to send an error report to Microsoft", Index=0, Lcid=1033)]
        AskmeforpermissiontosendanerrorreporttoMicrosoft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Automatically send an error report to Microsoft without asking me for permission", Index=1, Lcid=1033)]
        AutomaticallysendanerrorreporttoMicrosoftwithoutaskingmeforpermission = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Never send an error report to Microsoft about Microsoft Dynamics 365", Index=2, Lcid=1033)]
        NeversendanerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 3,
    }
    
    [DataContract()]
    public enum UserSettings_VisualizationPaneLayout {
        
        [EnumMember()]
        [OptionSetMetadata("Top-bottom", Index=0, Lcid=1033)]
        Topbottom = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Side-by-side", Index=1, Lcid=1033)]
        Sidebyside = 1,
    }
    
    [DataContract()]
    public enum WorkflowState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Activated", Index=1, Lcid=1033)]
        Activated = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Suspended", Index=2, Lcid=1033)]
        Suspended = 2,
    }
    
    [DataContract()]
    public enum Workflow_BusinessProcessType {
        
        [EnumMember()]
        [OptionSetMetadata("Business Flow", Index=0, Lcid=1033)]
        BusinessFlow = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Task Flow", Index=1, Lcid=1033)]
        TaskFlow = 1,
    }
    
    [DataContract()]
    public enum Workflow_Category {
        
        [EnumMember()]
        [OptionSetMetadata("Workflow", Index=0, Lcid=1033)]
        Workflow = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Dialog", Index=1, Lcid=1033)]
        Dialog = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Business Rule", Index=2, Lcid=1033)]
        BusinessRule = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Action", Index=3, Lcid=1033)]
        Action = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Business Process Flow", Index=4, Lcid=1033)]
        BusinessProcessFlow = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Modern Flow", Index=5, Lcid=1033)]
        ModernFlow = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Desktop Flow", Index=6, Lcid=1033)]
        DesktopFlow = 6,
    }
    
    [DataContract()]
    public enum Workflow_Mode {
        
        [EnumMember()]
        [OptionSetMetadata("Background", Index=0, Lcid=1033)]
        Background = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Real-time", Index=1, Lcid=1033)]
        Realtime = 1,
    }
    
    [DataContract()]
    public enum Workflow_ProcessTriggerScope {
        
        [EnumMember()]
        [OptionSetMetadata("Form", Index=0, Lcid=1033)]
        Form = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Entity", Index=1, Lcid=1033)]
        Entity = 2,
    }
    
    [DataContract()]
    public enum Workflow_Scope {
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=0, Lcid=1033)]
        User = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Business Unit", Index=1, Lcid=1033)]
        BusinessUnit = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Parent: Child Business Units", Index=2, Lcid=1033)]
        ParentChildBusinessUnits = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Organization", Index=3, Lcid=1033)]
        Organization = 4,
    }
    
    [DataContract()]
    public enum Workflow_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0, Lcid=1033)]
        Draft = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Activated", Index=1, Lcid=1033)]
        Activated = 2,
        
        [EnumMember()]
        [OptionSetMetadata("CompanyDLPViolation", Index=2, Lcid=1033)]
        CompanyDLPViolation = 3,
    }
    
    [DataContract()]
    public enum Workflow_Type {
        
        [EnumMember()]
        [OptionSetMetadata("Definition", Index=0, Lcid=1033)]
        Definition = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Activation", Index=1, Lcid=1033)]
        Activation = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Template", Index=2, Lcid=1033)]
        Template = 3,
    }
    
    [DataContract()]
    public enum Workflow_UIFlowType {
        
        [EnumMember()]
        [OptionSetMetadata("Windows recorder (V1)", Index=1, Lcid=1033)]
        WindowsrecorderV1 = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Selenium IDE", Index=2, Lcid=1033)]
        SeleniumIDE = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Power Automate Desktop", Index=3, Lcid=1033)]
        PowerAutomateDesktop = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recording", Index=0, Lcid=1033)]
        Recording = 101,
    }
    
    [DataContract()]
    public enum dsn_clienttype {
        
        [EnumMember()]
        [OptionSetMetadata("Trading house", Index=0, Lcid=1033)]
        Tradinghouse = 860930000,
    }
    
    [DataContract()]
    public enum dsn_commodities {
        
        [EnumMember()]
        [OptionSetMetadata("WHEAT", Index=0, Lcid=1033)]
        WHEAT = 860930000,
    }
    
    [DataContract()]
    public enum dsn_kycstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Pending", Index=0, Lcid=1033)]
        Pending = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=1, Lcid=1033)]
        Received = 860930001,
        
        [EnumMember()]
        [OptionSetMetadata("Validated", Index=2, Lcid=1033)]
        Validated = 860930002,
        
        [EnumMember()]
        [OptionSetMetadata("Remarks on submission", Index=3, Lcid=1033)]
        Remarksonsubmission = 860930003,
        
        [EnumMember()]
        [OptionSetMetadata("Approved by Credit Risk", Index=4, Lcid=1033)]
        ApprovedbyCreditRisk = 860930004,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=5, Lcid=1033)]
        Completed = 860930005,
    }
    
    [DataContract()]
    public enum dsn_navisiontype {
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=0, Lcid=1033)]
        Customer = 860930000,
        
        [EnumMember()]
        [OptionSetMetadata("Vendor", Index=1, Lcid=1033)]
        Vendor = 860930001,
    }
    
    [DataContract()]
    public enum componentstate {
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=0, Lcid=1033)]
        Published = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Unpublished", Index=1, Lcid=1033)]
        Unpublished = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted", Index=2, Lcid=1033)]
        Deleted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted Unpublished", Index=3, Lcid=1033)]
        DeletedUnpublished = 3,
    }
    
    [DataContract()]
    public enum activitypointer_activitytypecode {
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=4, Lcid=1033)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=2, Lcid=1033)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=0, Lcid=1033)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=3, Lcid=1033)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=1, Lcid=1033)]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=5, Lcid=1033)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=6, Lcid=1033)]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Activity record for the Teams chat", Index=7, Lcid=1033)]
        ActivityrecordfortheTeamschat = 10348,
    }
    
    [DataContract()]
    public enum activitypointer_deliveryprioritycode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Lcid=1033)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1, Lcid=1033)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Lcid=1033)]
        High = 2,
    }
    
    [DataContract()]
    public enum isinherited {
        
        [EnumMember()]
        [OptionSetMetadata("Team privileges only", Index=0, Lcid=1033)]
        Teamprivilegesonly = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Direct User (Basic) access level and Team privileges", Index=1, Lcid=1033)]
        DirectUserBasicaccesslevelandTeamprivileges = 1,
    }
    
    [DataContract()]
    public enum workflow_runas {
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=0, Lcid=1033)]
        Owner = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Calling User", Index=1, Lcid=1033)]
        CallingUser = 1,
    }
    
    [DataContract()]
    public enum workflow_stage {
        
        [EnumMember()]
        [OptionSetMetadata("Pre-operation", Index=0, Lcid=1033)]
        Preoperation = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Post-operation", Index=1, Lcid=1033)]
        Postoperation = 40,
    }
}
